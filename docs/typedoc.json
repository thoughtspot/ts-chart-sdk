{
	"id": 0,
	"name": "@thoughtspot/ts-chart-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 477,
			"name": "AxisMenuActions",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of supported actions for the menu items in the axis menu"
					}
				]
			},
			"children": [
				{
					"id": 478,
					"name": "AGGREGATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Change the aggregation of the column from the possible options.\nOnly supported for numeric columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 272,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L272"
						}
					],
					"type": {
						"type": "literal",
						"value": "AGGREGATE"
					}
				},
				{
					"id": 480,
					"name": "FILTER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add or update the filter for the column."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 281,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L281"
						}
					],
					"type": {
						"type": "literal",
						"value": "FILTER"
					}
				},
				{
					"id": 482,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a separator element between the actions.\nCan be added multiple times."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 305,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L305"
						}
					],
					"type": {
						"type": "literal",
						"value": "SEPARATOR"
					}
				},
				{
					"id": 481,
					"name": "SORT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sort the column in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 285,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L285"
						}
					],
					"type": {
						"type": "literal",
						"value": "SORT"
					}
				},
				{
					"id": 479,
					"name": "TIME_BUCKET",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Change the bucketing of the date or date time column from the possible options.\nOnly supported for date or date time columns."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 277,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L277"
						}
					],
					"type": {
						"type": "literal",
						"value": "TIME_BUCKET"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						478,
						480,
						482,
						481,
						479
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 267,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L267"
				}
			]
		},
		{
			"id": 788,
			"name": "BackgroundFormatTypes",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 789,
					"name": "Gradient",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L16"
						}
					],
					"type": {
						"type": "literal",
						"value": "GRADIENT"
					}
				},
				{
					"id": 790,
					"name": "Solid",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L17"
						}
					],
					"type": {
						"type": "literal",
						"value": "SOLID"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						789,
						790
					]
				}
			],
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 15,
					"character": 20,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L15"
				}
			]
		},
		{
			"id": 916,
			"name": "CategoryType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 917,
					"name": "Currency",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L11"
						}
					],
					"type": {
						"type": "literal",
						"value": "CURRENCY"
					}
				},
				{
					"id": 918,
					"name": "Custom",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L12"
						}
					],
					"type": {
						"type": "literal",
						"value": "CUSTOM"
					}
				},
				{
					"id": 919,
					"name": "Number",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L13"
						}
					],
					"type": {
						"type": "literal",
						"value": "NUMBER"
					}
				},
				{
					"id": 920,
					"name": "Percentage",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L14"
						}
					],
					"type": {
						"type": "literal",
						"value": "PERCENTAGE"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						917,
						918,
						919,
						920
					]
				}
			],
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L10"
				}
			]
		},
		{
			"id": 308,
			"name": "ChartSpecificColumnType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "When the column is generated for the chart for creating views,\non top of measure columns from the worksheet which are part of answer query."
					}
				]
			},
			"children": [
				{
					"id": 310,
					"name": "MEASURE_NAMES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 311,
					"name": "MEASURE_VALUES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L20"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 309,
					"name": "UNKNOWN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L18"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						310,
						311,
						309
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 17,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L17"
				}
			]
		},
		{
			"id": 414,
			"name": "ChartToTSEvent",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 418,
					"name": "CloseAxisMenu",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": "CloseAxisMenu"
					}
				},
				{
					"id": 416,
					"name": "CloseContextMenu",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L17"
						}
					],
					"type": {
						"type": "literal",
						"value": "CloseContextMenu"
					}
				},
				{
					"id": 426,
					"name": "GetDataForQuery",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fetch data for custom query"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "GetDataForQuery"
					}
				},
				{
					"id": 424,
					"name": "GetTMLString",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TML events"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L41"
						}
					],
					"type": {
						"type": "literal",
						"value": "GetTMLString"
					}
				},
				{
					"id": 428,
					"name": "HideToolTip",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L53"
						}
					],
					"type": {
						"type": "literal",
						"value": "HideToolTip"
					}
				},
				{
					"id": 419,
					"name": "InitStart",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Render life cycle events"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L28"
						}
					],
					"type": {
						"type": "literal",
						"value": "InitStart"
					}
				},
				{
					"id": 417,
					"name": "OpenAxisMenu",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Axis Menu events"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": "OpenAxisMenu"
					}
				},
				{
					"id": 415,
					"name": "OpenContextMenu",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Context Menu events"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L16"
						}
					],
					"type": {
						"type": "literal",
						"value": "OpenContextMenu"
					}
				},
				{
					"id": 422,
					"name": "RenderComplete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": "RenderComplete"
					}
				},
				{
					"id": 421,
					"name": "RenderError",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": "RenderError"
					}
				},
				{
					"id": 420,
					"name": "RenderStart",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": "RenderStart"
					}
				},
				{
					"id": 425,
					"name": "SetTMLString",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": "SetTMLString"
					}
				},
				{
					"id": 427,
					"name": "ShowToolTip",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tooltip events"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L52"
						}
					],
					"type": {
						"type": "literal",
						"value": "ShowToolTip"
					}
				},
				{
					"id": 423,
					"name": "UpdateVisualProps",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Visual props update"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L36"
						}
					],
					"type": {
						"type": "literal",
						"value": "UpdateVisualProps"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						418,
						416,
						426,
						424,
						428,
						419,
						417,
						415,
						422,
						421,
						420,
						425,
						427,
						423
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 12,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L12"
				}
			]
		},
		{
			"id": 353,
			"name": "ColumnAggregationType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Type of aggregations applied on the column data"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 354,
					"name": "AGGREGATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 96,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L96"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 355,
					"name": "AGGREGATE_DISTINCT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L97"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 356,
					"name": "APPROX_AGGR_DISTINCT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 98,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L98"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 357,
					"name": "APPROX_AGGR_DISTINCT_MERGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 99,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L99"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 358,
					"name": "APPROX_COUNT_DISTINCT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 100,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L100"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 359,
					"name": "AVERAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 101,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L101"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 360,
					"name": "COUNT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L102"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 361,
					"name": "COUNT_DISTINCT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 103,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L103"
						}
					],
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 362,
					"name": "CUMULATIVE_AVERAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 104,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L104"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 363,
					"name": "CUMULATIVE_COUNT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 105,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L105"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					}
				},
				{
					"id": 364,
					"name": "CUMULATIVE_MAX",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 106,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L106"
						}
					],
					"type": {
						"type": "literal",
						"value": 10
					}
				},
				{
					"id": 365,
					"name": "CUMULATIVE_MIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 107,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L107"
						}
					],
					"type": {
						"type": "literal",
						"value": 11
					}
				},
				{
					"id": 366,
					"name": "CUMULATIVE_SUM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 108,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L108"
						}
					],
					"type": {
						"type": "literal",
						"value": 12
					}
				},
				{
					"id": 367,
					"name": "GROWTH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 109,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L109"
						}
					],
					"type": {
						"type": "literal",
						"value": 13
					}
				},
				{
					"id": 368,
					"name": "MAX",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 110,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L110"
						}
					],
					"type": {
						"type": "literal",
						"value": 14
					}
				},
				{
					"id": 369,
					"name": "MEDIAN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 111,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L111"
						}
					],
					"type": {
						"type": "literal",
						"value": 15
					}
				},
				{
					"id": 370,
					"name": "MIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 112,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L112"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 371,
					"name": "MOVING_AVERAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 113,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L113"
						}
					],
					"type": {
						"type": "literal",
						"value": 17
					}
				},
				{
					"id": 372,
					"name": "MOVING_COUNT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 114,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L114"
						}
					],
					"type": {
						"type": "literal",
						"value": 18
					}
				},
				{
					"id": 373,
					"name": "MOVING_MAX",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 115,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L115"
						}
					],
					"type": {
						"type": "literal",
						"value": 19
					}
				},
				{
					"id": 374,
					"name": "MOVING_MIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 116,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L116"
						}
					],
					"type": {
						"type": "literal",
						"value": 20
					}
				},
				{
					"id": 375,
					"name": "MOVING_SUM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L117"
						}
					],
					"type": {
						"type": "literal",
						"value": 21
					}
				},
				{
					"id": 376,
					"name": "NONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 118,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L118"
						}
					],
					"type": {
						"type": "literal",
						"value": 22
					}
				},
				{
					"id": 377,
					"name": "PERCENTILE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 119,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L119"
						}
					],
					"type": {
						"type": "literal",
						"value": 23
					}
				},
				{
					"id": 378,
					"name": "RANK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 120,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L120"
						}
					],
					"type": {
						"type": "literal",
						"value": 24
					}
				},
				{
					"id": 379,
					"name": "RANK_PERCENTILE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 121,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L121"
						}
					],
					"type": {
						"type": "literal",
						"value": 25
					}
				},
				{
					"id": 380,
					"name": "SQL_BOOL_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 122,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L122"
						}
					],
					"type": {
						"type": "literal",
						"value": 26
					}
				},
				{
					"id": 381,
					"name": "SQL_DATE_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 123,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L123"
						}
					],
					"type": {
						"type": "literal",
						"value": 27
					}
				},
				{
					"id": 382,
					"name": "SQL_DATE_TIME_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 124,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L124"
						}
					],
					"type": {
						"type": "literal",
						"value": 28
					}
				},
				{
					"id": 383,
					"name": "SQL_DOUBLE_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 125,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L125"
						}
					],
					"type": {
						"type": "literal",
						"value": 29
					}
				},
				{
					"id": 384,
					"name": "SQL_INT_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 126,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L126"
						}
					],
					"type": {
						"type": "literal",
						"value": 30
					}
				},
				{
					"id": 385,
					"name": "SQL_STRING_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 127,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L127"
						}
					],
					"type": {
						"type": "literal",
						"value": 31
					}
				},
				{
					"id": 386,
					"name": "SQL_TIME_AGGREGATE_OP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 128,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L128"
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					}
				},
				{
					"id": 387,
					"name": "STD_DEVIATION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 129,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L129"
						}
					],
					"type": {
						"type": "literal",
						"value": 33
					}
				},
				{
					"id": 388,
					"name": "SUM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 130,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L130"
						}
					],
					"type": {
						"type": "literal",
						"value": 34
					}
				},
				{
					"id": 389,
					"name": "TABLE_AGGR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 131,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L131"
						}
					],
					"type": {
						"type": "literal",
						"value": 35
					}
				},
				{
					"id": 390,
					"name": "VARIANCE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 132,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L132"
						}
					],
					"type": {
						"type": "literal",
						"value": 36
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						354,
						355,
						356,
						357,
						358,
						359,
						360,
						361,
						362,
						363,
						364,
						365,
						366,
						367,
						368,
						369,
						370,
						371,
						372,
						373,
						374,
						375,
						376,
						377,
						378,
						379,
						380,
						381,
						382,
						383,
						384,
						385,
						386,
						387,
						388,
						389,
						390
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 95,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L95"
				}
			]
		},
		{
			"id": 324,
			"name": "ColumnTimeBucket",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 332,
					"name": "AUTO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L53"
						}
					],
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 326,
					"name": "DAILY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 335,
					"name": "DAY_OF_MONTH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L56"
						}
					],
					"type": {
						"type": "literal",
						"value": 10
					}
				},
				{
					"id": 336,
					"name": "DAY_OF_QUARTER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L57"
						}
					],
					"type": {
						"type": "literal",
						"value": 11
					}
				},
				{
					"id": 334,
					"name": "DAY_OF_WEEK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L55"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					}
				},
				{
					"id": 337,
					"name": "DAY_OF_YEAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L58"
						}
					],
					"type": {
						"type": "literal",
						"value": 12
					}
				},
				{
					"id": 331,
					"name": "HOURLY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L52"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 333,
					"name": "HOUR_OF_DAY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L54"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 328,
					"name": "MONTHLY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L49"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 341,
					"name": "MONTH_OF_QUARTER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 62,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L62"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 342,
					"name": "MONTH_OF_YEAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L63"
						}
					],
					"type": {
						"type": "literal",
						"value": 17
					}
				},
				{
					"id": 325,
					"name": "NO_BUCKET",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L46"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 329,
					"name": "QUARTERLY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L50"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 343,
					"name": "QUARTER_OF_YEAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 64,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L64"
						}
					],
					"type": {
						"type": "literal",
						"value": 18
					}
				},
				{
					"id": 327,
					"name": "WEEKLY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L48"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 338,
					"name": "WEEK_OF_MONTH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 59,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L59"
						}
					],
					"type": {
						"type": "literal",
						"value": 13
					}
				},
				{
					"id": 339,
					"name": "WEEK_OF_QUARTER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L60"
						}
					],
					"type": {
						"type": "literal",
						"value": 14
					}
				},
				{
					"id": 340,
					"name": "WEEK_OF_YEAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L61"
						}
					],
					"type": {
						"type": "literal",
						"value": 15
					}
				},
				{
					"id": 330,
					"name": "YEARLY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L51"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						332,
						326,
						335,
						336,
						334,
						337,
						331,
						333,
						328,
						341,
						342,
						325,
						329,
						343,
						327,
						338,
						339,
						340,
						330
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 45,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L45"
				}
			]
		},
		{
			"id": 303,
			"name": "ColumnType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 306,
					"name": "ATTRIBUTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L8"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 305,
					"name": "MEASURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L7"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 304,
					"name": "UNKNOWN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L6"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 307,
					"name": "VIRTUAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L10"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						306,
						305,
						304,
						307
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L5"
				}
			]
		},
		{
			"id": 791,
			"name": "ConditionalFormattingComparisonTypes",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 792,
					"name": "ColumnBased",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L20"
						}
					],
					"type": {
						"type": "literal",
						"value": "COLUMN_BASED"
					}
				},
				{
					"id": 793,
					"name": "ParameterBased",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L21"
						}
					],
					"type": {
						"type": "literal",
						"value": "PARAMETER_BASED"
					}
				},
				{
					"id": 794,
					"name": "ValueBased",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": "VALUE_BASED"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						792,
						793,
						794
					]
				}
			],
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 19,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L19"
				}
			]
		},
		{
			"id": 349,
			"name": "CurrencyFormatType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Type of currency formatting defined in the worksheet"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 351,
					"name": "COLUMN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 86,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L86"
						}
					],
					"type": {
						"type": "literal",
						"value": "COLUMN"
					}
				},
				{
					"id": 352,
					"name": "ISO_CODE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 87,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L87"
						}
					],
					"type": {
						"type": "literal",
						"value": "ISO_CODE"
					}
				},
				{
					"id": 350,
					"name": "USER_LOCALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 85,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L85"
						}
					],
					"type": {
						"type": "literal",
						"value": "USER_LOCALE"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						351,
						352,
						350
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 84,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L84"
				}
			]
		},
		{
			"id": 20,
			"name": "CustomizableChartFeature",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 31,
					"name": "AREA_CHART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L49"
						}
					],
					"type": {
						"type": "literal",
						"value": 10
					}
				},
				{
					"id": 30,
					"name": "BAR_CHART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L48"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					}
				},
				{
					"id": 29,
					"name": "COLUMN_CHART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 28,
					"name": "LINE_CHART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L46"
						}
					],
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 27,
					"name": "PIE_CHART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L45"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 26,
					"name": "SCATTER_CHART",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L44"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 32,
					"name": "TAIL_FEATURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L50"
						}
					],
					"type": {
						"type": "literal",
						"value": 11
					}
				},
				{
					"id": 25,
					"name": "TOOLTIP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 21,
					"name": "X_AXIS_LABEL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 22,
					"name": "X_AXIS_TITLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L40"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 23,
					"name": "Y_AXIS_LABEL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L41"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 24,
					"name": "Y_AXIS_TITLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						31,
						30,
						29,
						28,
						27,
						26,
						32,
						25,
						21,
						22,
						23,
						24
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 38,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L38"
				}
			]
		},
		{
			"id": 312,
			"name": "DataType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines type of the data associated with a column"
					}
				]
			},
			"children": [
				{
					"id": 314,
					"name": "BOOL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 315,
					"name": "CHAR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 320,
					"name": "DATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L38"
						}
					],
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 321,
					"name": "DATE_TIME",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 319,
					"name": "DOUBLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L36"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 318,
					"name": "FLOAT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L35"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 316,
					"name": "INT32",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L33"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 317,
					"name": "INT64",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L34"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 323,
					"name": "MAX_TYPE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": 10
					}
				},
				{
					"id": 322,
					"name": "TIME",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L40"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					}
				},
				{
					"id": 313,
					"name": "UNKNOWN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L27"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						314,
						315,
						320,
						321,
						319,
						318,
						316,
						317,
						323,
						322,
						313
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 26,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L26"
				}
			]
		},
		{
			"id": 475,
			"name": "ErrorType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 476,
					"name": "MultipleContextsNotSupported",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 260,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L260"
						}
					],
					"type": {
						"type": "literal",
						"value": "MultipleContextsNotSupported"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						476
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 259,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L259"
				}
			]
		},
		{
			"id": 865,
			"name": "FalconDataType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 866,
					"name": "Bool",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 99,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L99"
						}
					],
					"type": {
						"type": "literal",
						"value": "BOOL"
					}
				},
				{
					"id": 867,
					"name": "Char",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 100,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L100"
						}
					],
					"type": {
						"type": "literal",
						"value": "CHAR"
					}
				},
				{
					"id": 868,
					"name": "Date",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 101,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L101"
						}
					],
					"type": {
						"type": "literal",
						"value": "DATE"
					}
				},
				{
					"id": 869,
					"name": "DateTime",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L102"
						}
					],
					"type": {
						"type": "literal",
						"value": "DATE_TIME"
					}
				},
				{
					"id": 870,
					"name": "Double",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 103,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L103"
						}
					],
					"type": {
						"type": "literal",
						"value": "DOUBLE"
					}
				},
				{
					"id": 871,
					"name": "Float",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 104,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L104"
						}
					],
					"type": {
						"type": "literal",
						"value": "FLOAT"
					}
				},
				{
					"id": 872,
					"name": "Int32",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 105,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L105"
						}
					],
					"type": {
						"type": "literal",
						"value": "INT32"
					}
				},
				{
					"id": 873,
					"name": "Int64",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 106,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L106"
						}
					],
					"type": {
						"type": "literal",
						"value": "INT64"
					}
				},
				{
					"id": 874,
					"name": "List",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 107,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L107"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST"
					}
				},
				{
					"id": 875,
					"name": "ListBool",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 108,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L108"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_BOOL"
					}
				},
				{
					"id": 876,
					"name": "ListDate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 109,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L109"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_DATE"
					}
				},
				{
					"id": 877,
					"name": "ListDateTime",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 110,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L110"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_DATE_TIME"
					}
				},
				{
					"id": 878,
					"name": "ListDouble",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 111,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L111"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_DOUBLE"
					}
				},
				{
					"id": 879,
					"name": "ListInt",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 112,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L112"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_INT"
					}
				},
				{
					"id": 880,
					"name": "ListString",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 113,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L113"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_STRING"
					}
				},
				{
					"id": 881,
					"name": "ListTime",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 114,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L114"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST_TIME"
					}
				},
				{
					"id": 882,
					"name": "MaxType",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 115,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L115"
						}
					],
					"type": {
						"type": "literal",
						"value": "MAX_TYPE"
					}
				},
				{
					"id": 883,
					"name": "Time",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 116,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L116"
						}
					],
					"type": {
						"type": "literal",
						"value": "TIME"
					}
				},
				{
					"id": 884,
					"name": "Unknown",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L117"
						}
					],
					"type": {
						"type": "literal",
						"value": "UNKNOWN"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						866,
						867,
						868,
						869,
						870,
						871,
						872,
						873,
						874,
						875,
						876,
						877,
						878,
						879,
						880,
						881,
						882,
						883,
						884
					]
				}
			],
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 98,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L98"
				}
			]
		},
		{
			"id": 344,
			"name": "FormatType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Enum values for column format type defined in the worksheet"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 348,
					"name": "CURRENCY",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 76,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L76"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 345,
					"name": "NONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L73"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 346,
					"name": "PATTERN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 74,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L74"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 347,
					"name": "PERCENTAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L75"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						348,
						345,
						346,
						347
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 72,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L72"
				}
			]
		},
		{
			"id": 928,
			"name": "NegativeValueFormat",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 929,
					"name": "BracesNodash",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L27"
						}
					],
					"type": {
						"type": "literal",
						"value": "BRACES_NODASH"
					}
				},
				{
					"id": 930,
					"name": "PrefixDash",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L28"
						}
					],
					"type": {
						"type": "literal",
						"value": "PREFIX_DASH"
					}
				},
				{
					"id": 931,
					"name": "SuffixDash",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": "SUFFIX_DASH"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						929,
						930,
						931
					]
				}
			],
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 26,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L26"
				}
			]
		},
		{
			"id": 809,
			"name": "Operators",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 810,
					"name": "Contains",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": "CONTAINS"
					}
				},
				{
					"id": 811,
					"name": "DoesNotContain",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L40"
						}
					],
					"type": {
						"type": "literal",
						"value": "DOES_NOT_CONTAIN"
					}
				},
				{
					"id": 812,
					"name": "EndsWith",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L41"
						}
					],
					"type": {
						"type": "literal",
						"value": "ENDS_WITH"
					}
				},
				{
					"id": 813,
					"name": "EqualTo",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": "EQUAL_TO"
					}
				},
				{
					"id": 814,
					"name": "GreaterThan",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": "GREATER_THAN"
					}
				},
				{
					"id": 815,
					"name": "GreaterThanEqualTo",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L44"
						}
					],
					"type": {
						"type": "literal",
						"value": "GREATER_THAN_EQUAL_TO"
					}
				},
				{
					"id": 816,
					"name": "Is",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L45"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS"
					}
				},
				{
					"id": 817,
					"name": "IsBetween",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L46"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS_BETWEEN"
					}
				},
				{
					"id": 818,
					"name": "IsEmpty",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS_EMPTY"
					}
				},
				{
					"id": 819,
					"name": "IsNot",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L48"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS_NOT"
					}
				},
				{
					"id": 820,
					"name": "IsNotEmpty",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L49"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS_NOT_EMPTY"
					}
				},
				{
					"id": 821,
					"name": "IsNotNull",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L50"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS_NOT_NULL"
					}
				},
				{
					"id": 822,
					"name": "IsNull",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L51"
						}
					],
					"type": {
						"type": "literal",
						"value": "IS_NULL"
					}
				},
				{
					"id": 823,
					"name": "LessThan",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L52"
						}
					],
					"type": {
						"type": "literal",
						"value": "LESS_THAN"
					}
				},
				{
					"id": 824,
					"name": "LessThanEqualTo",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L53"
						}
					],
					"type": {
						"type": "literal",
						"value": "LESS_THAN_EQUAL_TO"
					}
				},
				{
					"id": 825,
					"name": "NotEqualTo",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L54"
						}
					],
					"type": {
						"type": "literal",
						"value": "NOT_EQUAL_TO"
					}
				},
				{
					"id": 826,
					"name": "StartsWith",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L55"
						}
					],
					"type": {
						"type": "literal",
						"value": "STARTS_WITH"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						810,
						811,
						812,
						813,
						814,
						815,
						816,
						817,
						818,
						819,
						820,
						821,
						822,
						823,
						824,
						825,
						826
					]
				}
			],
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 38,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L38"
				}
			]
		},
		{
			"id": 891,
			"name": "ParameterOwnerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 892,
					"name": "Answer",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 127,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L127"
						}
					],
					"type": {
						"type": "literal",
						"value": "ANSWER"
					}
				},
				{
					"id": 893,
					"name": "Worksheet",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 128,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L128"
						}
					],
					"type": {
						"type": "literal",
						"value": "WORKSHEET"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						892,
						893
					]
				}
			],
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 126,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L126"
				}
			]
		},
		{
			"id": 912,
			"name": "ParameterValueType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 913,
					"name": "Any",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 154,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L154"
						}
					],
					"type": {
						"type": "literal",
						"value": "ANY"
					}
				},
				{
					"id": 914,
					"name": "List",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 155,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L155"
						}
					],
					"type": {
						"type": "literal",
						"value": "LIST"
					}
				},
				{
					"id": 915,
					"name": "Range",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 156,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L156"
						}
					],
					"type": {
						"type": "literal",
						"value": "RANGE"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						913,
						914,
						915
					]
				}
			],
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 153,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L153"
				}
			]
		},
		{
			"id": 508,
			"name": "TSToChartEvent",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "All the events sent from the ThoughtSpot application to Custom Chart App"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 519,
					"name": "AxisMenuActionClick",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L75"
						}
					],
					"type": {
						"type": "literal",
						"value": "AxisMenuActionClick"
					}
				},
				{
					"id": 512,
					"name": "ChartConfigValidate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": "ChartConfigValidate"
					}
				},
				{
					"id": 513,
					"name": "ChartModelUpdate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "ChartModelUpdate"
					}
				},
				{
					"id": 518,
					"name": "ContextMenuActionClick",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 70,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L70"
						}
					],
					"type": {
						"type": "literal",
						"value": "ContextMenuActionClick"
					}
				},
				{
					"id": 514,
					"name": "DataUpdate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L51"
						}
					],
					"type": {
						"type": "literal",
						"value": "DataUpdate"
					}
				},
				{
					"id": 520,
					"name": "GetColumnData",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 79,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L79"
						}
					],
					"type": {
						"type": "literal",
						"value": "GetColumnData"
					}
				},
				{
					"id": 511,
					"name": "GetDataQuery",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L38"
						}
					],
					"type": {
						"type": "literal",
						"value": "GetDataQuery"
					}
				},
				{
					"id": 509,
					"name": "Initialize",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": "Initialize"
					}
				},
				{
					"id": 510,
					"name": "InitializeComplete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L33"
						}
					],
					"type": {
						"type": "literal",
						"value": "InitializeComplete"
					}
				},
				{
					"id": 515,
					"name": "TriggerRenderChart",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L56"
						}
					],
					"type": {
						"type": "literal",
						"value": "TriggerRenderChart"
					}
				},
				{
					"id": 517,
					"name": "VisualPropsUpdate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L65"
						}
					],
					"type": {
						"type": "literal",
						"value": "VisualPropsUpdate"
					}
				},
				{
					"id": 516,
					"name": "VisualPropsValidate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L61"
						}
					],
					"type": {
						"type": "literal",
						"value": "VisualPropsValidate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						519,
						512,
						513,
						518,
						514,
						520,
						511,
						509,
						510,
						515,
						517,
						516
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L25"
				}
			]
		},
		{
			"id": 921,
			"name": "Unit",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 922,
					"name": "Auto",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L18"
						}
					],
					"type": {
						"type": "literal",
						"value": "AUTO"
					}
				},
				{
					"id": 923,
					"name": "Billion",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": "BILLION"
					}
				},
				{
					"id": 924,
					"name": "Million",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L20"
						}
					],
					"type": {
						"type": "literal",
						"value": "MILLION"
					}
				},
				{
					"id": 925,
					"name": "None",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L21"
						}
					],
					"type": {
						"type": "literal",
						"value": "NONE"
					}
				},
				{
					"id": 926,
					"name": "Thousands",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": "THOUSANDS"
					}
				},
				{
					"id": 927,
					"name": "Trillion",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": "TRILLION"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						922,
						923,
						924,
						925,
						926,
						927
					]
				}
			],
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 17,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L17"
				}
			]
		},
		{
			"id": 173,
			"name": "VisualPropComponentTranslationKeys",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 202,
					"name": "BOTTOM_LEGEND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L48"
						}
					],
					"type": {
						"type": "literal",
						"value": "BOTTOM_LEGEND"
					}
				},
				{
					"id": 184,
					"name": "CHART_CUSTOMIZE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": "CHART_CUSTOMIZE"
					}
				},
				{
					"id": 194,
					"name": "COLUMN_CUSTOMIZE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L40"
						}
					],
					"type": {
						"type": "literal",
						"value": "COLUMN_CUSTOMIZE"
					}
				},
				{
					"id": 188,
					"name": "DONT_SHOW",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L34"
						}
					],
					"type": {
						"type": "literal",
						"value": "DONT_SHOW"
					}
				},
				{
					"id": 187,
					"name": "EDIT_TOOLTIP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L33"
						}
					],
					"type": {
						"type": "literal",
						"value": "EDIT_TOOLTIP"
					}
				},
				{
					"id": 177,
					"name": "ENABLE_MARKERS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": "ENABLE_MARKERS"
					}
				},
				{
					"id": 193,
					"name": "EXCLUDE_NULL_VALUES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": "EXCLUDE_NULL_VALUES"
					}
				},
				{
					"id": 191,
					"name": "HANDLE_MISSING_VALUES",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L37"
						}
					],
					"type": {
						"type": "literal",
						"value": "HANDLE_MISSING_VALUES"
					}
				},
				{
					"id": 182,
					"name": "HIGH_CARDINALITY_BATCH_SIZE_DISABLED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L28"
						}
					],
					"type": {
						"type": "literal",
						"value": "highCardinalityBatchSizeDisabled"
					}
				},
				{
					"id": 183,
					"name": "HIGH_CARDINALITY_BATCH_SIZE_LIMIT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": "highCardinalityBatchSizeLimit"
					}
				},
				{
					"id": 200,
					"name": "LEFT_LEGEND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L46"
						}
					],
					"type": {
						"type": "literal",
						"value": "LEFT_LEGEND"
					}
				},
				{
					"id": 176,
					"name": "MAP_TILE_LABEL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": "MAP_TILE_LABEL"
					}
				},
				{
					"id": 181,
					"name": "MAX_DATA_POINTS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L27"
						}
					],
					"type": {
						"type": "literal",
						"value": "MAX_DATA_POINTS"
					}
				},
				{
					"id": 186,
					"name": "RESET_ZOOM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L32"
						}
					],
					"type": {
						"type": "literal",
						"value": "chartConfigurator.RESET_ZOOM"
					}
				},
				{
					"id": 199,
					"name": "RIGHT_LEGEND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L45"
						}
					],
					"type": {
						"type": "literal",
						"value": "RIGHT_LEGEND"
					}
				},
				{
					"id": 185,
					"name": "SELECT_AN_AREA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": "chartConfigurator.SELECT_AN_AREA"
					}
				},
				{
					"id": 174,
					"name": "SHOW_ALL_LABELS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L20"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_ALL_LABELS"
					}
				},
				{
					"id": 190,
					"name": "SHOW_AS_ZERO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L36"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_AS_ZERO"
					}
				},
				{
					"id": 198,
					"name": "SHOW_AXIS_AS_PERCENT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L44"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_AXIS_AS_PERCENT"
					}
				},
				{
					"id": 197,
					"name": "SHOW_DATA_LABELS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_DATA_LABELS"
					}
				},
				{
					"id": 196,
					"name": "SHOW_DETAILED_LABELS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_DETAILED_LABELS"
					}
				},
				{
					"id": 189,
					"name": "SHOW_GAP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L35"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_GAP"
					}
				},
				{
					"id": 192,
					"name": "SHOW_NULL_AS_ZERO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L38"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_NULL_AS_ZERO"
					}
				},
				{
					"id": 178,
					"name": "SHOW_REGRESSION_LINE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L24"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_REGRESSION_LINE"
					}
				},
				{
					"id": 195,
					"name": "SHOW_TOTAL_LABELS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L41"
						}
					],
					"type": {
						"type": "literal",
						"value": "SHOW_TOTAL_LABELS"
					}
				},
				{
					"id": 175,
					"name": "TOO_MANY_LABELS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L21"
						}
					],
					"type": {
						"type": "literal",
						"value": "TOO_MANY_LABELS"
					}
				},
				{
					"id": 201,
					"name": "TOP_LEGEND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "TOP_LEGEND"
					}
				},
				{
					"id": 179,
					"name": "X_AXIS_GRID_LINE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L25"
						}
					],
					"type": {
						"type": "literal",
						"value": "X_AXIS_GRID_LINE"
					}
				},
				{
					"id": 180,
					"name": "Y_AXIS_GRID_LINE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L26"
						}
					],
					"type": {
						"type": "literal",
						"value": "Y_AXIS_GRID_LINE"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						202,
						184,
						194,
						188,
						187,
						177,
						193,
						191,
						182,
						183,
						200,
						176,
						181,
						186,
						199,
						185,
						174,
						190,
						198,
						197,
						196,
						189,
						192,
						178,
						195,
						175,
						201,
						179,
						180
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 19,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L19"
				}
			]
		},
		{
			"id": 682,
			"name": "CustomChartContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 683,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 394,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L394"
						}
					],
					"signatures": [
						{
							"id": 684,
							"name": "new CustomChartContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constructor to only accept context props as payload"
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 394,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L394"
								}
							],
							"parameters": [
								{
									"id": 685,
									"name": "chartContextProps",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 651,
										"name": "CustomChartContextProps",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 682,
								"name": "CustomChartContext",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					]
				},
				{
					"id": 704,
					"name": "containerEl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 387,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L387"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLElement"
								},
								"name": "HTMLElement",
								"package": "typescript"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 737,
					"name": "axisMenuCustomActionPreProcessor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 583,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L583"
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "axisMenuCustomActionPreProcessor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to store the axis menu custom action callback mapped with action id"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "payload"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 583,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L583"
								}
							],
							"parameters": [
								{
									"id": 739,
									"name": "eventPayload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event payload bound\n         to the type of the event"
											}
										]
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": 491,
												"name": "OpenAxisMenuEventPayload",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										]
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 491,
										"name": "OpenAxisMenuEventPayload",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								]
							}
						}
					]
				},
				{
					"id": 727,
					"name": "contextMenuCustomActionPreProcessor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 504,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L504"
						}
					],
					"signatures": [
						{
							"id": 728,
							"name": "contextMenuCustomActionPreProcessor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to store the context menu custom action callback mapped with action id"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "payload"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 504,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L504"
								}
							],
							"parameters": [
								{
									"id": 729,
									"name": "eventPayload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event payload bound\n         to the type of the event"
											}
										]
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": 461,
												"name": "OpenContextMenuEventPayload",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										]
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 461,
										"name": "OpenContextMenuEventPayload",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								]
							}
						}
					]
				},
				{
					"id": 721,
					"name": "destroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 479,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L479"
						}
					],
					"signatures": [
						{
							"id": 722,
							"name": "destroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Destroy the chart context object and stop listening to the parent post message\nevents"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 479,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L479"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 756,
					"name": "emitEvent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 664,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L664"
						}
					],
					"signatures": [
						{
							"id": 757,
							"name": "emitEvent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to emit Chart to TS Events to the TS application."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Promise"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 664,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L664"
								}
							],
							"typeParameter": [
								{
									"id": 758,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 429,
											"name": "ChartToTSEventsPayloadMap",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 759,
									"name": "eventType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of the event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 760,
									"name": "eventPayload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Event payload bound\n         to the type of the event"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 429,
											"name": "ChartToTSEventsPayloadMap",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "getAppConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 496,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L496"
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "getAppConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Getter for the chart model object"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 496,
									"character": 26,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L496"
								}
							],
							"type": {
								"type": "reference",
								"target": 134,
								"name": "AppConfig",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					]
				},
				{
					"id": 723,
					"name": "getChartModel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 489,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L489"
						}
					],
					"signatures": [
						{
							"id": 724,
							"name": "getChartModel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Getter for the chart model object"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 489,
									"character": 27,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L489"
								}
							],
							"type": {
								"type": "reference",
								"target": 49,
								"name": "ChartModel",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					]
				},
				{
					"id": 705,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 415,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L415"
						}
					],
					"signatures": [
						{
							"id": 706,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function to expose and wait on the initialize promise object.\nThis will resolve immediately if the chart context is already initialized by TS\nApp."
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 415,
									"character": 24,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L415"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 712,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 446,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L446"
						}
					],
					"signatures": [
						{
							"id": 713,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes specific event listeners on the chart context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 446,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L446"
								}
							],
							"typeParameter": [
								{
									"id": 714,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 521,
											"name": "TSToChartEventsPayloadMap",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 715,
									"name": "eventType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 707,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 428,
							"character": 11,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L428"
						}
					],
					"signatures": [
						{
							"id": 708,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add event listeners on the chart context with the required callback."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 428,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L428"
								}
							],
							"typeParameter": [
								{
									"id": 709,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 521,
											"name": "TSToChartEventsPayloadMap",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 710,
									"name": "eventType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 711,
									"name": "callbackFn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 521,
											"name": "TSToChartEventsPayloadMap",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						683
					]
				},
				{
					"title": "Properties",
					"children": [
						704
					]
				},
				{
					"title": "Methods",
					"children": [
						737,
						727,
						721,
						756,
						725,
						723,
						705,
						712,
						707
					]
				}
			],
			"sources": [
				{
					"fileName": "main/custom-chart-context.ts",
					"line": 297,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L297"
				}
			]
		},
		{
			"id": 134,
			"name": "AppConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 137,
					"name": "appOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 324,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L324"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 138,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 142,
									"name": "isDebugMode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 329,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L329"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 141,
									"name": "isLiveboardContext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 327,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L327"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 139,
									"name": "isMobile",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 325,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L325"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 140,
									"name": "isPrintMode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 326,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L326"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										142,
										141,
										139,
										140
									]
								}
							],
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 324,
									"character": 17,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L324"
								}
							]
						}
					}
				},
				{
					"id": 148,
					"name": "appUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "App url for the custom chart application where the chart app is hosted.\nThis helps the chart developer to access app artifacts relative to this url.\nThere can be different build systems that developers may have used and different ways\nto host the same. This helps in resolving the same."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 345,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L345"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 150,
					"name": "chartAppAccessToken",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Unique identifier for the customer. This can be used as a way to maintain licensing by the\nthird party developer"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 359,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L359"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 136,
					"name": "dateFormatsConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 323,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L323"
						}
					],
					"type": {
						"type": "reference",
						"target": 127,
						"name": "ChartSdkDateFormatsConfig",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 143,
					"name": "localeOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 333,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L333"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 144,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 145,
									"name": "locale",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 334,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L334"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 146,
									"name": "quarterStartMonth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 335,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L335"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 147,
									"name": "sessionTimezone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 336,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L336"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										145,
										146,
										147
									]
								}
							],
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 333,
									"character": 20,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L333"
								}
							]
						}
					}
				},
				{
					"id": 135,
					"name": "styleConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 322,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L322"
						}
					],
					"type": {
						"type": "reference",
						"target": 85,
						"name": "ChartSdkCustomStylingConfig",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						137,
						148,
						150,
						136,
						143,
						135
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 321,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L321"
				}
			]
		},
		{
			"id": 502,
			"name": "AxisMenuActionHandler",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 366,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L366"
				}
			],
			"indexSignature": {
				"id": 503,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"sources": [
					{
						"fileName": "types/chart-to-ts-event.types.ts",
						"line": 367,
						"character": 4,
						"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L367"
					}
				],
				"parameters": [
					{
						"id": 504,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 505,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "types/chart-to-ts-event.types.ts",
								"line": 367,
								"character": 19,
								"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L367"
							}
						],
						"signatures": [
							{
								"id": 506,
								"name": "__type",
								"variant": "signature",
								"kind": 4096,
								"flags": {},
								"parameters": [
									{
										"id": 507,
										"name": "args",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 630,
											"name": "CustomAxisMenuAction",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						]
					}
				}
			}
		},
		{
			"id": 483,
			"name": "AxisMenuCustomAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 486,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Icon of the custom action."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 320,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L320"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 484,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the custom action."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 312,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L312"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 485,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Label of the custom action."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 316,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L316"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 487,
					"name": "onClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 324,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L324"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 488,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/chart-to-ts-event.types.ts",
									"line": 324,
									"character": 13,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L324"
								}
							],
							"signatures": [
								{
									"id": 489,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function that will be triggered when the custom action is clicked."
											}
										]
									},
									"sources": [
										{
											"fileName": "types/chart-to-ts-event.types.ts",
											"line": 324,
											"character": 13,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L324"
										}
									],
									"parameters": [
										{
											"id": 490,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						486,
						484,
						485,
						487
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 308,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L308"
				}
			]
		},
		{
			"id": 634,
			"name": "AxisMenuCustomActionPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 635,
					"name": "customAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dispatched custom action from context menu"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 396,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L396"
						}
					],
					"type": {
						"type": "reference",
						"target": 630,
						"name": "CustomAxisMenuAction",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						635
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 390,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L390"
				}
			]
		},
		{
			"id": 399,
			"name": "ChartColumn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 410,
					"name": "aggregationType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Aggregation applied on the column data"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 251,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L251"
						}
					],
					"type": {
						"type": "reference",
						"target": 353,
						"name": "ColumnAggregationType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 412,
					"name": "calenderGuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Guid of Custom calender for the column if defined in worksheet else null"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot: sdcwdc"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 266,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L266"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 413,
					"name": "chartSpecificColumnType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of arbitrary column, can be measure names or measure values\nalso, unknown if regular column"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 274,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L274"
						}
					],
					"type": {
						"type": "reference",
						"target": 308,
						"name": "ChartSpecificColumnType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 406,
					"name": "columnProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column Properties of the columns"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.15 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 241,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L241"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 407,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 408,
									"name": "conditionalFormatting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/answer-column.types.ts",
											"line": 242,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L242"
										}
									],
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": 784,
												"name": "ConditionalFormatting",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										],
										"name": "Maybe",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								},
								{
									"id": 409,
									"name": "numberFormatting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/answer-column.types.ts",
											"line": 243,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L243"
										}
									],
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": 957,
												"name": "FormatConfig",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										],
										"name": "Maybe",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										408,
										409
									]
								}
							],
							"sources": [
								{
									"fileName": "types/answer-column.types.ts",
									"line": 241,
									"character": 23,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L241"
								}
							]
						}
					}
				},
				{
					"id": 411,
					"name": "customOrder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom sort order defined for the column to sort charts in a specific order\nDefined in worksheet"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 259,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L259"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 404,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of data for the column"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 213,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L213"
						}
					],
					"type": {
						"type": "reference",
						"target": 312,
						"name": "DataType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 405,
					"name": "format",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formatting for the columns defined in the worksheet"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 234,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L234"
						}
					],
					"type": {
						"type": "reference",
						"target": 395,
						"name": "ColumnFormat",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 400,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column ID"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 186,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L186"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 401,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column name property"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 192,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 403,
					"name": "timeBucket",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of the time-based aggregation\nwhen the column data is of type Date, Datetime, Time"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 206,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L206"
						}
					],
					"type": {
						"type": "reference",
						"target": 324,
						"name": "ColumnTimeBucket",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 402,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of column if attribute or measure"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 198,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L198"
						}
					],
					"type": {
						"type": "reference",
						"target": 303,
						"name": "ColumnType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						410,
						412,
						413,
						406,
						411,
						404,
						405,
						400,
						401,
						403,
						402
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 180,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L180"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 586,
					"name": "QueryColumn"
				}
			]
		},
		{
			"id": 36,
			"name": "ChartConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom Chart Config values stored in the metadata\nRelates to ChartConfigEditorDefinition"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 38,
					"name": "dimensions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of columns for each dimension"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L97"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33,
							"name": "ChartConfigDimension",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 37,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key of the custom chart config defined in the chart config editor definition\nThis is used to differentiate between different custom chart configurations\nwithin the same chart"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 91,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L91"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						38,
						37
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 83,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L83"
				}
			]
		},
		{
			"id": 33,
			"name": "ChartConfigDimension",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of Columns for a dimension in the Custom Chart Config.\nAssociated with the key defined in the chart config editor definition\nRelates to ChartConfigSection"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 35,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of columns added for the dimension"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L73"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 399,
							"name": "ChartColumn",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 34,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key for the dimension in the chart config"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L67"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35,
						34
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 61,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L61"
				}
			]
		},
		{
			"id": 160,
			"name": "ChartConfigEditorDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 164,
					"name": "columnSections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines all the column sections for the chart config"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L117"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 151,
							"name": "ChartConfigSection",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 163,
					"name": "descriptionText",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "i18n'ed string to show the editor description for the chart config"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 111,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 161,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the chart config"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 99,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L99"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 162,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "i18n'ed string to show the editor header for the chart config"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 105,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						164,
						163,
						161,
						162
					]
				}
			],
			"sources": [
				{
					"fileName": "types/configurator.types.ts",
					"line": 93,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L93"
				}
			]
		},
		{
			"id": 151,
			"name": "ChartConfigSection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 156,
					"name": "allowAttributeColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow Attribute/Dimensional Columns on the Section\nExample: strings, dates, etc"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 64,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L64"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 155,
					"name": "allowMeasureColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow Numeric Columns on the Section"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L56"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 158,
					"name": "allowMeasureNameColumn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow measure name Column on the Section"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 79,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 159,
					"name": "allowMeasureValueColumn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow measure value Column on the Section"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 86,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L86"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 152,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to persist the columns"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 153,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "i18n'ed string to show the section label on the config editor"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 154,
					"name": "maxColumnCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of columns allowed in the section"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nNumber.POSITIVE_INFINITY\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						156,
						155,
						158,
						159,
						152,
						153,
						154
					]
				}
			],
			"sources": [
				{
					"fileName": "types/configurator.types.ts",
					"line": 23,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L23"
				}
			]
		},
		{
			"id": 621,
			"name": "ChartConfigValidateEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 622,
					"name": "chartConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "updated chart config properties"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 345,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L345"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36,
							"name": "ChartConfig",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						622
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 339,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L339"
				}
			]
		},
		{
			"id": 49,
			"name": "ChartModel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 50,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of columns in the search query\nThey may or may not be part of the data query or chart config"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 170,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L170"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 399,
							"name": "ChartColumn",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 54,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 179,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L179"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 55,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56,
									"name": "chartConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 181,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L181"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36,
											"name": "ChartConfig",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56
									]
								}
							],
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 179,
									"character": 12,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L179"
								}
							]
						}
					}
				},
				{
					"id": 51,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Array of datasets for each query"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 176,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L176"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 43,
							"name": "QueryData",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 52,
					"name": "sortInfo",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 177,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L177"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 53,
					"name": "visualProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 178,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L178"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						50,
						54,
						51,
						52,
						53
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 163,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L163"
				}
			]
		},
		{
			"id": 612,
			"name": "ChartModelUpdateEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 613,
					"name": "chartModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "updated chart model"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 291,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L291"
						}
					],
					"type": {
						"type": "reference",
						"target": 49,
						"name": "ChartModel",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						613
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 285,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L285"
				}
			]
		},
		{
			"id": 429,
			"name": "ChartToTSEventsPayloadMap",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This map defines the event type and its corresponding payload needed by the event"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 443,
					"name": "CloseAxisMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to close Axis Menu"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 147,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L147"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 431,
					"name": "CloseContextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to close Context Menu"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 74,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L74"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 439,
					"name": "GetDataForQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to get the data for custom query"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 123,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L123"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 473,
								"name": "GetDataForQueryEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				},
				{
					"id": 437,
					"name": "GetTMLString",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to get the TML string"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 112,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L112"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 441,
					"name": "HideToolTip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to update the visual props"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.4 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 135,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L135"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 432,
					"name": "InitStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to notify the Initialization start"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 81,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L81"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 442,
					"name": "OpenAxisMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to open Axis Menu"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 141,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L141"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 491,
								"name": "OpenAxisMenuEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				},
				{
					"id": 430,
					"name": "OpenContextMenu",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to open Context Menu"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L68"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 461,
								"name": "OpenContextMenuEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				},
				{
					"id": 434,
					"name": "RenderComplete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to notify the render completion"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 93,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L93"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 435,
					"name": "RenderError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to notify the render error"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 99,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L99"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 470,
								"name": "RenderErrorEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				},
				{
					"id": 433,
					"name": "RenderStart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to notify the render start"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 87,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L87"
						}
					],
					"type": {
						"type": "tuple"
					}
				},
				{
					"id": 438,
					"name": "SetTMLString",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to set the TML string"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 118,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L118"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 446,
								"name": "SetTMLStringEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				},
				{
					"id": 440,
					"name": "ShowToolTip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to update the visual props"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.4 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 129,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L129"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 466,
								"name": "ShowToolTipEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				},
				{
					"id": 436,
					"name": "UpdateVisualProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trigger to update the visual props"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 105,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L105"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 444,
								"name": "UpdateVisualPropsEventPayload",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						443,
						431,
						439,
						437,
						441,
						432,
						442,
						430,
						434,
						435,
						433,
						438,
						440,
						436
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 62,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L62"
				}
			]
		},
		{
			"id": 245,
			"name": "CheckboxFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Checkbox Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 249,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 318,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L318"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 250,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.13 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 324,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L324"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 247,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 306,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L306"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 248,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 312,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L312"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 251,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 330,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L330"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 246,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 300,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L300"
						}
					],
					"type": {
						"type": "literal",
						"value": "checkbox"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						249,
						250,
						247,
						248,
						251,
						246
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 299,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L299"
				}
			]
		},
		{
			"id": 231,
			"name": "ColorPickerFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Color Picker Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 236,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 246,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L246"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 233,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 227,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L227"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 234,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 233,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L233"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 237,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 252,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L252"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 235,
					"name": "selectorType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display selected color with font or with color only"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nCOLOR\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 240,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L240"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "FONT"
							},
							{
								"type": "literal",
								"value": "COLOR"
							}
						]
					}
				},
				{
					"id": 232,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 221,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L221"
						}
					],
					"type": {
						"type": "literal",
						"value": "colorpicker"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						236,
						233,
						234,
						237,
						235,
						232
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 220,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L220"
				}
			]
		},
		{
			"id": 395,
			"name": "ColumnFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the type for column formatting in the worksheet and related details.\nBased on the type of formatting, the pattern and currency formats are defined."
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 398,
					"name": "currencyFormat",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency format details"
							}
						],
						"blockTags": [
							{
								"tag": "@optional",
								"content": []
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 177,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": 391,
						"name": "CurrencyFormat",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 397,
					"name": "pattern",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pattern to define the number formatting style"
							}
						],
						"blockTags": [
							{
								"tag": "@optional",
								"content": []
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 170,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L170"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 396,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 163,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L163"
						}
					],
					"type": {
						"type": "reference",
						"target": 344,
						"name": "FormatType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						398,
						397,
						396
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 162,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L162"
				}
			]
		},
		{
			"id": 286,
			"name": "ColumnProp",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Define Column settings, based on column type, settings needs to be defined in\nvisualPropEditorDefinition using the current config columns,"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.2 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 288,
					"name": "columnSettingsDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 545,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L545"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 289,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/visual-prop.types.ts",
									"line": 545,
									"character": 30,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L545"
								}
							],
							"indexSignature": {
								"id": 290,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "types/visual-prop.types.ts",
										"line": 546,
										"character": 8,
										"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L546"
									}
								],
								"parameters": [
									{
										"id": 291,
										"name": "columnId",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 292,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 293,
												"name": "elements",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "types/visual-prop.types.ts",
														"line": 546,
														"character": 30,
														"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L546"
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 285,
														"name": "PropElement",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													293
												]
											}
										],
										"sources": [
											{
												"fileName": "types/visual-prop.types.ts",
												"line": 546,
												"character": 28,
												"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L546"
											}
										]
									}
								}
							}
						}
					}
				},
				{
					"id": 287,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 544,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L544"
						}
					],
					"type": {
						"type": "reference",
						"target": 303,
						"name": "ColumnType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						288,
						287
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 543,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L543"
				}
			]
		},
		{
			"id": 496,
			"name": "ContextMenuActionHandler",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 358,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L358"
				}
			],
			"indexSignature": {
				"id": 497,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"sources": [
					{
						"fileName": "types/chart-to-ts-event.types.ts",
						"line": 359,
						"character": 4,
						"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L359"
					}
				],
				"parameters": [
					{
						"id": 498,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 499,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "types/chart-to-ts-event.types.ts",
								"line": 359,
								"character": 19,
								"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L359"
							}
						],
						"signatures": [
							{
								"id": 500,
								"name": "__type",
								"variant": "signature",
								"kind": 4096,
								"flags": {},
								"parameters": [
									{
										"id": 501,
										"name": "args",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 623,
											"name": "CustomContextMenuAction",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "void"
								}
							}
						]
					}
				}
			}
		},
		{
			"id": 628,
			"name": "ContextMenuCustomActionPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 629,
					"name": "customAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dispatched custom action from context menu"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 371,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L371"
						}
					],
					"type": {
						"type": "reference",
						"target": 623,
						"name": "CustomContextMenuAction",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						629
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 365,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L365"
				}
			]
		},
		{
			"id": 391,
			"name": "CurrencyFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Currency format for the column defined in the worksheet"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 393,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "column ID of the column in case of currency formatted by a column"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 147,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L147"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 394,
					"name": "isoCode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ISO code for the currency types"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 153,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L153"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 392,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 141,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L141"
						}
					],
					"type": {
						"type": "reference",
						"target": 349,
						"name": "CurrencyFormatType",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						393,
						394,
						392
					]
				}
			],
			"sources": [
				{
					"fileName": "types/answer-column.types.ts",
					"line": 140,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L140"
				}
			]
		},
		{
			"id": 453,
			"name": "CustomAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 456,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 193,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L193"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 454,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 191,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L191"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 455,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 192,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 457,
					"name": "onClick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 202,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L202"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 458,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/chart-to-ts-event.types.ts",
									"line": 202,
									"character": 13,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L202"
								}
							],
							"signatures": [
								{
									"id": 459,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function will need to have a defined set of arguments.\nFor example, pointClick Event, point details and chart model in case of context menu\nFor Axis menu, it would be different.\n\nCallback will be triggered via postMessage API contract."
											}
										]
									},
									"sources": [
										{
											"fileName": "types/chart-to-ts-event.types.ts",
											"line": 202,
											"character": 13,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L202"
										}
									],
									"parameters": [
										{
											"id": 460,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						456,
						454,
						455,
						457
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 190,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L190"
				}
			]
		},
		{
			"id": 630,
			"name": "CustomAxisMenuAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom action dispatched by axis menu of the chart"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 632,
					"name": "columnIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 382,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L382"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 633,
					"name": "event",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 383,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L383"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "PointerEvent"
								},
								"name": "PointerEvent",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clientX"
									},
									{
										"type": "literal",
										"value": "clientY"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 631,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 381,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L381"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						632,
						633,
						631
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 380,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L380"
				}
			]
		},
		{
			"id": 1001,
			"name": "CustomCalendarDate",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1006,
					"name": "d",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1002,
					"name": "v",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L22"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1003,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1005,
									"name": "e",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "utils/date-formatting.ts",
											"line": 24,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1004,
									"name": "s",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "utils/date-formatting.ts",
											"line": 23,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1005,
										1004
									]
								}
							],
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 22,
									"character": 7,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L22"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1006,
						1002
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 21,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L21"
				}
			]
		},
		{
			"id": 623,
			"name": "CustomContextMenuAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom action dispatched by context menu of the chart"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 625,
					"name": "clickedPoint",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 356,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L356"
						}
					],
					"type": {
						"type": "reference",
						"target": 451,
						"name": "Point",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 627,
					"name": "event",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 358,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L358"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "PointerEvent"
								},
								"name": "PointerEvent",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clientX"
									},
									{
										"type": "literal",
										"value": "clientY"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 624,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 355,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L355"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 626,
					"name": "selectedPoints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 357,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L357"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 451,
							"name": "Point",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						625,
						627,
						624,
						626
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 354,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L354"
				}
			]
		},
		{
			"id": 614,
			"name": "DataUpdateEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 615,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "updated data in the chart model"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 304,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L304"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 43,
							"name": "QueryData",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						615
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 298,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L298"
				}
			]
		},
		{
			"id": 100,
			"name": "DateFormats",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines a set of standardized date and datetime format strings used for\ndisplaying dates and times in various formats. Each format string represents\na specific date or time pattern that can be used for localized display purposes."
					}
				]
			},
			"children": [
				{
					"id": 109,
					"name": "DATETIME_24_SHORT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 275,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L275"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 110,
					"name": "DATETIME_24_SHORT_WITH_MILLIS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 276,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L276"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 111,
					"name": "DATETIME_24_SHORT_WITH_MILLIS_WITHOUT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 277,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L277"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 107,
					"name": "DATETIME_SHORT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 273,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L273"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 108,
					"name": "DATETIME_SHORT_WITHOUT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 274,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L274"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 114,
					"name": "DATETIME_SHORT_WITH_MILLIS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 280,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L280"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 115,
					"name": "DATETIME_SHORT_WITH_MILLIS_WITHOUT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 281,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L281"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 112,
					"name": "DATETIME_SHORT_WITH_SECONDS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 278,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L278"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 113,
					"name": "DATETIME_SHORT_WITH_SECONDS_WITHOUT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 279,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L279"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 126,
					"name": "DATETIME_WITH_SHORT_OFFSET",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 292,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L292"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 101,
					"name": "DATE_SHORT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 267,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L267"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 102,
					"name": "DATE_SHORT_2_DIGIT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 268,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L268"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 103,
					"name": "DATE_SHORT_WITH_HOUR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 269,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L269"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 105,
					"name": "DATE_SHORT_WITH_HOUR_24",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 271,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L271"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 106,
					"name": "DATE_SHORT_WITH_HOUR_24_WITHOUT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 272,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L272"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 104,
					"name": "DATE_SHORT_WITH_HOUR_WITHOUT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 270,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L270"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 122,
					"name": "DAY_WITH_MONTH",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 288,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L288"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 123,
					"name": "DAY_WITH_MONTH_NUM",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 289,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L289"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 118,
					"name": "DEFAULT_TIME_FORMAT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 284,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L284"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 125,
					"name": "MONTH_ONLY",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 291,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L291"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 121,
					"name": "MONTH_WITH_2_DIGIT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 287,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L287"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 120,
					"name": "MONTH_WITH_DAY_AND_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 286,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L286"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 119,
					"name": "MONTH_WITH_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 285,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L285"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 124,
					"name": "QUARTER",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 290,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L290"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 117,
					"name": "QUARTER_WITH_2_DIGIT_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 283,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L283"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 116,
					"name": "QUARTER_WITH_YEAR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 282,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L282"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						109,
						110,
						111,
						107,
						108,
						114,
						115,
						112,
						113,
						126,
						101,
						102,
						103,
						105,
						106,
						104,
						122,
						123,
						118,
						125,
						121,
						120,
						119,
						124,
						117,
						116
					]
				}
			],
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 266,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L266"
				}
			]
		},
		{
			"id": 260,
			"name": "DropDownFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Dropdown Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 264,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 402,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L402"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 266,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.13 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 414,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L414"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 262,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 390,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L390"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 263,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 396,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L396"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 267,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 420,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L420"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 261,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 384,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L384"
						}
					],
					"type": {
						"type": "literal",
						"value": "dropdown"
					}
				},
				{
					"id": 265,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of values to select from"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 408,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L408"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						264,
						266,
						262,
						263,
						267,
						261,
						265
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 383,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L383"
				}
			]
		},
		{
			"id": 584,
			"name": "GetColumnDataPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 585,
					"name": "columnId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 239,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L239"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						585
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 238,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L238"
				}
			]
		},
		{
			"id": 610,
			"name": "GetColumnDataResponsePayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 611,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 278,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L278"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						611
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 276,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L276"
				}
			]
		},
		{
			"id": 473,
			"name": "GetDataForQueryEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 474,
					"name": "queries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 252,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L252"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 602,
							"name": "Query",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						474
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 251,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L251"
				}
			]
		},
		{
			"id": 582,
			"name": "GetDataQueryPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 583,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 235,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L235"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36,
							"name": "ChartConfig",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						583
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 234,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L234"
				}
			]
		},
		{
			"id": 608,
			"name": "GetDataQueryResponsePayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 609,
					"name": "queries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 273,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L273"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 602,
							"name": "Query",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						609
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 272,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L272"
				}
			]
		},
		{
			"id": 569,
			"name": "InitializeEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 571,
					"name": "appConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional app configuration"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 158,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L158"
						}
					],
					"type": {
						"type": "reference",
						"target": 134,
						"name": "AppConfig",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 570,
					"name": "chartModel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The entire chart object with data"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 151,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L151"
						}
					],
					"type": {
						"type": "reference",
						"target": 49,
						"name": "ChartModel",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 572,
					"name": "componentId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This is a unique component id that the context should send in every\npost message payload. This helps in identifying multiple app components."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 166,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L166"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 574,
					"name": "containerElSelector",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The selector of the container element where the chart will be rendered. Used for internal\ncharts, external custom charts mostly have their own DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 181,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L181"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 573,
					"name": "hostUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The host URL of the parent to send the post message requests to.\nWe cannot use the window.parent object details to fetch this.\nHence sending in init flow."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 174,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L174"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						571,
						570,
						572,
						574,
						573
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 145,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L145"
				}
			]
		},
		{
			"id": 575,
			"name": "InitializeEventResponsePayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 580,
					"name": "allowedConfigurations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Toggle native configurations supported by TS UI. Ex: column level number and conditional\nformatting."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 220,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L220"
						}
					],
					"type": {
						"type": "reference",
						"target": 636,
						"name": "AllowedConfigurations",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 578,
					"name": "chartConfigEditorDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "chart config editor definition"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 207,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L207"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 160,
							"name": "ChartConfigEditorDefinition",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 581,
					"name": "chartConfigParameters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional chart configuration parameters supported by TS UI. Ex: show/hide Measure Name/\nValue columns."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 227,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L227"
						}
					],
					"type": {
						"type": "reference",
						"target": 642,
						"name": "ChartConfigParameters",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 577,
					"name": "defaultChartConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default Chart Config generated if the chart config is not valid or not present."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 201,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L201"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36,
							"name": "ChartConfig",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 576,
					"name": "isConfigValid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Boolean value to define if the current config is valid or not\nWould be true if the validateChartConfig function is not defined"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 195,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L195"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 579,
					"name": "visualPropEditorDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "visual properties editor definition"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 213,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L213"
						}
					],
					"type": {
						"type": "reference",
						"target": 294,
						"name": "VisualPropEditorDefinition",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						580,
						578,
						581,
						577,
						576,
						579
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 188,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L188"
				}
			]
		},
		{
			"id": 203,
			"name": "InputValidation",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration for input validation rules"
					}
				]
			},
			"children": [
				{
					"id": 208,
					"name": "minLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Minimum length required for the input."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 84,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L84"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 209,
					"name": "minLengthError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error message to display when input length is less than the required minimum."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 90,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L90"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "range",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Range of values allowed for the input."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 96,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L96"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 211,
					"name": "rangeError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error message to display when input value is outside the allowed range."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L102"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 206,
					"name": "regex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regular expression pattern to validate the input against."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 207,
					"name": "regexError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error message to display when input doesn't match the regex pattern."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 78,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 204,
					"name": "required",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines if the input is required."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 205,
					"name": "requiredError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Error message to display when input is required but not provided."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 66,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L66"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						208,
						209,
						210,
						211,
						206,
						207,
						204,
						205
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 54,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L54"
				}
			]
		},
		{
			"id": 278,
			"name": "NativeEditToolTip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Native charts edit tool tip component defined for regular charts in TS Advance Chart Settings"
					}
				]
			},
			"children": [
				{
					"id": 281,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 500,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L500"
						}
					],
					"type": {
						"type": "reference",
						"target": 170,
						"name": "TSTooltipConfig",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 283,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.13 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 513,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L513"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 280,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 494,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L494"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 282,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 507,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L507"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 284,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 519,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L519"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 279,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 488,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L488"
						}
					],
					"type": {
						"type": "literal",
						"value": "tooltipconfig"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						281,
						283,
						280,
						282,
						284,
						279
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 487,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L487"
				}
			]
		},
		{
			"id": 223,
			"name": "NumberInputFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Number Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 227,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 194,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L194"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 229,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.13 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 206,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L206"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 228,
					"name": "inputValidation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "inputValidation config for input field"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 200,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L200"
						}
					],
					"type": {
						"type": "reference",
						"target": 203,
						"name": "InputValidation",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 225,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 182,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L182"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 226,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.7 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 188,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L188"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 230,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 212,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L212"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 224,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 176,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L176"
						}
					],
					"type": {
						"type": "literal",
						"value": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						227,
						229,
						228,
						225,
						226,
						230,
						224
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 175,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L175"
				}
			]
		},
		{
			"id": 491,
			"name": "OpenAxisMenuEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 493,
					"name": "columnIds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The column IDs of the columns that can be modified via the axis menu.\nThis maps to the columns in chart model.\nThe order of the column IDs is the same as the order of the columns in the axis menu.\nAtleast one column id is required."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 338,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L338"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 492,
					"name": "event",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pointer event that triggered the event to position the axis menu."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 331,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L331"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "PointerEvent"
								},
								"name": "PointerEvent",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clientX"
									},
									{
										"type": "literal",
										"value": "clientY"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 494,
					"name": "selectedActions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The list of actions that are supported for the axis menu for each column.\nThe order of the actions is the same as the order of the columns in the axis menu.\nIf empty, all the supported actions in default order will be available."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 344,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L344"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 477,
							"name": "AxisMenuActions",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						493,
						492,
						494
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 327,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L327"
				}
			]
		},
		{
			"id": 461,
			"name": "OpenContextMenuEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 463,
					"name": "clickedPoint",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 211,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L211"
						}
					],
					"type": {
						"type": "reference",
						"target": 451,
						"name": "Point",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 465,
					"name": "customActions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 213,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L213"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 453,
							"name": "CustomAction",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 462,
					"name": "event",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 210,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L210"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "PointerEvent"
								},
								"name": "PointerEvent",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clientX"
									},
									{
										"type": "literal",
										"value": "clientY"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 464,
					"name": "selectedPoints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 212,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L212"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 451,
							"name": "Point",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						463,
						465,
						462,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 209,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L209"
				}
			]
		},
		{
			"id": 451,
			"name": "Point",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 452,
					"name": "tuple",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 183,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L183"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 448,
							"name": "PointVal",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						452
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 182,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L182"
				}
			]
		},
		{
			"id": 448,
			"name": "PointVal",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 449,
					"name": "columnId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 173,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L173"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 450,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 176,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L176"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						449,
						450
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 171,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L171"
				}
			]
		},
		{
			"id": 602,
			"name": "Query",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 603,
					"name": "queryColumns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 261,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L261"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 586,
							"name": "QueryColumn",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 604,
					"name": "queryParams",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 262,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L262"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 605,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 606,
									"name": "offset",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/ts-to-chart-event.types.ts",
											"line": 263,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L263"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 607,
									"name": "size",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/ts-to-chart-event.types.ts",
											"line": 264,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L264"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										606,
										607
									]
								}
							],
							"sources": [
								{
									"fileName": "types/ts-to-chart-event.types.ts",
									"line": 262,
									"character": 18,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L262"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						603,
						604
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 260,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L260"
				}
			]
		},
		{
			"id": 586,
			"name": "QueryColumn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 598,
					"name": "aggregationType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Aggregation applied on the column data"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 251,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L251"
						}
					],
					"type": {
						"type": "reference",
						"target": 353,
						"name": "ColumnAggregationType",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 410,
						"name": "ChartColumn.aggregationType"
					}
				},
				{
					"id": 600,
					"name": "calenderGuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Guid of Custom calender for the column if defined in worksheet else null"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot: sdcwdc"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 266,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L266"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 412,
						"name": "ChartColumn.calenderGuid"
					}
				},
				{
					"id": 601,
					"name": "chartSpecificColumnType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of arbitrary column, can be measure names or measure values\nalso, unknown if regular column"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 274,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L274"
						}
					],
					"type": {
						"type": "reference",
						"target": 308,
						"name": "ChartSpecificColumnType",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 413,
						"name": "ChartColumn.chartSpecificColumnType"
					}
				},
				{
					"id": 594,
					"name": "columnProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column Properties of the columns"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.15 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 241,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L241"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 595,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 596,
									"name": "conditionalFormatting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/answer-column.types.ts",
											"line": 242,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L242"
										}
									],
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": 784,
												"name": "ConditionalFormatting",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										],
										"name": "Maybe",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								},
								{
									"id": 597,
									"name": "numberFormatting",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/answer-column.types.ts",
											"line": 243,
											"character": 8,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L243"
										}
									],
									"type": {
										"type": "reference",
										"target": 1,
										"typeArguments": [
											{
												"type": "reference",
												"target": 957,
												"name": "FormatConfig",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										],
										"name": "Maybe",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										596,
										597
									]
								}
							],
							"sources": [
								{
									"fileName": "types/answer-column.types.ts",
									"line": 241,
									"character": 23,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L241"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 406,
						"name": "ChartColumn.columnProperties"
					}
				},
				{
					"id": 599,
					"name": "customOrder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom sort order defined for the column to sort charts in a specific order\nDefined in worksheet"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 259,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L259"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 411,
						"name": "ChartColumn.customOrder"
					}
				},
				{
					"id": 592,
					"name": "dataType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of data for the column"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 213,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L213"
						}
					],
					"type": {
						"type": "reference",
						"target": 312,
						"name": "DataType",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 404,
						"name": "ChartColumn.dataType"
					}
				},
				{
					"id": 593,
					"name": "format",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formatting for the columns defined in the worksheet"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 234,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L234"
						}
					],
					"type": {
						"type": "reference",
						"target": 395,
						"name": "ColumnFormat",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 405,
						"name": "ChartColumn.format"
					}
				},
				{
					"id": 588,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column ID"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 186,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L186"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 400,
						"name": "ChartColumn.id"
					}
				},
				{
					"id": 587,
					"name": "isMeasureValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to identify if the column is a measure value,\nto be used along with MEASURE_NAME/MEASUE_VALUE column in the query"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 253,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L253"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 589,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Column name property"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 192,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 401,
						"name": "ChartColumn.name"
					}
				},
				{
					"id": 591,
					"name": "timeBucket",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of the time-based aggregation\nwhen the column data is of type Date, Datetime, Time"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 206,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L206"
						}
					],
					"type": {
						"type": "reference",
						"target": 324,
						"name": "ColumnTimeBucket",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 403,
						"name": "ChartColumn.timeBucket"
					}
				},
				{
					"id": 590,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type of column if attribute or measure"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/answer-column.types.ts",
							"line": 198,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/answer-column.types.ts#L198"
						}
					],
					"type": {
						"type": "reference",
						"target": 303,
						"name": "ColumnType",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 402,
						"name": "ChartColumn.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						598,
						600,
						601,
						594,
						599,
						592,
						593,
						588,
						587,
						589,
						591,
						590
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 246,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L246"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 399,
					"name": "ChartColumn",
					"package": "@thoughtspot/ts-chart-sdk"
				}
			]
		},
		{
			"id": 252,
			"name": "RadioButtonFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Radio Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 256,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 357,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L357"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 258,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 369,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L369"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 254,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 345,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L345"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 255,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 351,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L351"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 259,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 375,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L375"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 253,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 339,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L339"
						}
					],
					"type": {
						"type": "literal",
						"value": "radio"
					}
				},
				{
					"id": 257,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of values to select from"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 363,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L363"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						256,
						258,
						254,
						255,
						259,
						253,
						257
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 338,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L338"
				}
			]
		},
		{
			"id": 470,
			"name": "RenderErrorEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 472,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 245,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L245"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 471,
					"name": "hasError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 244,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L244"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						472,
						471
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 243,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L243"
				}
			]
		},
		{
			"id": 268,
			"name": "Section",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Element to define sections of the form for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 273,
					"name": "alignment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines form alignment in the view for the section"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 452,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L452"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "row"
							},
							{
								"type": "literal",
								"value": "column"
							}
						]
					}
				},
				{
					"id": 272,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Can include either form elements or nested sections"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 447,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L447"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 285,
							"name": "PropElement",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 275,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether section should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.18 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 466,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L466"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 276,
					"name": "isAccordianExpanded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 473,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L473"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 270,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to define & store the children's parent"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 435,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L435"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 271,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show the section name label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 441,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L441"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 277,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 479,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L479"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 274,
					"name": "layoutType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines form layout in the view for the section.\ndefault will be 'accordion' for first section if nothing specified\nand will be 'none' for all nested section."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 460,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L460"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "accordion"
							},
							{
								"type": "literal",
								"value": "tab"
							},
							{
								"type": "literal",
								"value": "none"
							}
						]
					}
				},
				{
					"id": 269,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 429,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L429"
						}
					],
					"type": {
						"type": "literal",
						"value": "section"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						273,
						272,
						275,
						276,
						270,
						271,
						277,
						274,
						269
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 428,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L428"
				}
			]
		},
		{
			"id": 446,
			"name": "SetTMLStringEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 447,
					"name": "tmlString",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 164,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L164"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						447
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 162,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L162"
				}
			]
		},
		{
			"id": 466,
			"name": "ShowToolTipEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Payload for the event triggered to show a tooltip"
					}
				]
			},
			"children": [
				{
					"id": 468,
					"name": "customTooltipContent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional custom content to display in the tooltip."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 229,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L229"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 467,
					"name": "event",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The pointer event that triggered the tooltip display\nIt includes the client's X and Y coordinates."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 225,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L225"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "PointerEvent"
								},
								"name": "PointerEvent",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "clientX"
									},
									{
										"type": "literal",
										"value": "clientY"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				},
				{
					"id": 469,
					"name": "point",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the data point associated\nwith the tooltip\nUser can also include both point and customTooltipContent\ndepending upon the requirement"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 236,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L236"
						}
					],
					"type": {
						"type": "reference",
						"target": 451,
						"name": "Point",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						468,
						467,
						469
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 220,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L220"
				}
			]
		},
		{
			"id": 521,
			"name": "TSToChartEventsPayloadMap",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Map of callback function with the event types"
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 522,
					"name": "ChartModelUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 89,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L89"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 523,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/ts-to-chart-event.types.ts",
									"line": 89,
									"character": 39,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L89"
								}
							],
							"signatures": [
								{
									"id": 524,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "types/ts-to-chart-event.types.ts",
											"line": 89,
											"character": 39,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L89"
										}
									],
									"parameters": [
										{
											"id": 525,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 612,
												"name": "ChartModelUpdateEventPayload",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 526,
					"name": "DataUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 92,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L92"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 527,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/ts-to-chart-event.types.ts",
									"line": 92,
									"character": 33,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L92"
								}
							],
							"signatures": [
								{
									"id": 528,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "types/ts-to-chart-event.types.ts",
											"line": 92,
											"character": 33,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L92"
										}
									],
									"parameters": [
										{
											"id": 529,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 614,
												"name": "DataUpdateEventPayload",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 530,
					"name": "VisualPropsUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 93,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L93"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 531,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/ts-to-chart-event.types.ts",
									"line": 93,
									"character": 40,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L93"
								}
							],
							"signatures": [
								{
									"id": 532,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "types/ts-to-chart-event.types.ts",
											"line": 93,
											"character": 40,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L93"
										}
									],
									"parameters": [
										{
											"id": 533,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 616,
												"name": "VisualPropsUpdateEventPayload",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						522,
						526,
						530
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 88,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L88"
				}
			]
		},
		{
			"id": 212,
			"name": "TextInputFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Text Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 219,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 149,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L149"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 221,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.13 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 161,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L161"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 220,
					"name": "inputValidation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "inputValidation config for input field"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.1-alpha.3 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 155,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L155"
						}
					],
					"type": {
						"type": "reference",
						"target": 203,
						"name": "InputValidation",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 214,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 215,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 123,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L123"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 222,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 167,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L167"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 217,
					"name": "multiline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allows multiline text"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 137,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L137"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 216,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use text as password"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							},
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 130,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L130"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 218,
					"name": "placeholder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Placeholder text"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 143,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L143"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 213,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 111,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L111"
						}
					],
					"type": {
						"type": "literal",
						"value": "text"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						219,
						221,
						220,
						214,
						215,
						222,
						217,
						216,
						218,
						213
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 110,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L110"
				}
			]
		},
		{
			"id": 238,
			"name": "ToggleFormDetail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Toggle Form Element for the visual props editor"
					}
				]
			},
			"children": [
				{
					"id": 242,
					"name": "defaultValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 279,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L279"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 243,
					"name": "disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether it should be disabled or not"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.0.2-alpha.13 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 285,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L285"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 240,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key to store the value"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 267,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L267"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 241,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "I18n'ed string to show on the form label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 273,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L273"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 244,
					"name": "labelTranslation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Translation key for the label"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 291,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L291"
						}
					],
					"type": {
						"type": "reference",
						"target": 173,
						"name": "VisualPropComponentTranslationKeys",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				},
				{
					"id": 239,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 261,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L261"
						}
					],
					"type": {
						"type": "literal",
						"value": "toggle"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						242,
						243,
						240,
						241,
						244,
						239
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 260,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L260"
				}
			]
		},
		{
			"id": 444,
			"name": "UpdateVisualPropsEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 445,
					"name": "visualProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/chart-to-ts-event.types.ts",
							"line": 155,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L155"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						445
					]
				}
			],
			"sources": [
				{
					"fileName": "types/chart-to-ts-event.types.ts",
					"line": 154,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/chart-to-ts-event.types.ts#L154"
				}
			]
		},
		{
			"id": 294,
			"name": "VisualPropEditorDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Visual property editor definition object"
					}
				]
			},
			"children": [
				{
					"id": 296,
					"name": "columnsVizPropDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "To Define column level settings."
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.2 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 568,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L568"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 286,
							"name": "ColumnProp",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				},
				{
					"id": 295,
					"name": "elements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Define all the form elements or sections that are required\nto be configured in the visual prop editor"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 562,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L562"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 285,
							"name": "PropElement",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						296,
						295
					]
				}
			],
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 555,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L555"
				}
			]
		},
		{
			"id": 616,
			"name": "VisualPropsUpdateEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 617,
					"name": "visualProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "updated visual properties"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 312,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L312"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						617
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 306,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L306"
				}
			]
		},
		{
			"id": 618,
			"name": "VisualPropsValidateEventPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 620,
					"name": "activeColumnId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "used to identify active column for column level settings, empty string in case of overall\nchart settings"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 332,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L332"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 619,
					"name": "visualProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "updated visual properties"
							}
						],
						"blockTags": [
							{
								"tag": "@version",
								"content": [
									{
										"kind": "text",
										"text": "SDK: 0.1 | ThoughtSpot:"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/ts-to-chart-event.types.ts",
							"line": 325,
							"character": 4,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L325"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						620,
						619
					]
				}
			],
			"sources": [
				{
					"fileName": "types/ts-to-chart-event.types.ts",
					"line": 319,
					"character": 17,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/ts-to-chart-event.types.ts#L319"
				}
			]
		},
		{
			"id": 636,
			"name": "AllowedConfigurations",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration for allowing or disallowing specific TS UI features."
					}
				],
				"blockTags": [
					{
						"tag": "@fileoverview",
						"content": [
							{
								"kind": "text",
								"text": "This configuration defines the ability to toggle specific features such as\ncolumn number formatting, conditional formatting, and measure names/values."
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "main/custom-chart-context.ts",
					"line": 73,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L73"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 637,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 639,
							"name": "allowColumnConditionalFormatting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows conditional formatting at the column level.\nThis allows users to apply rules that visually highlight or differentiate data."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 89,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 638,
							"name": "allowColumnNumberFormatting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows column-level number formatting."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 80,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 640,
							"name": "allowGradientColoring",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows Gradient coloring at the column level."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 97,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L97"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 641,
							"name": "allowMeasureNamesAndValues",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enables measure_name and measure_values in the chart configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 105,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L105"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								639,
								638,
								640,
								641
							]
						}
					],
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 73,
							"character": 36,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L73"
						}
					]
				}
			}
		},
		{
			"id": 642,
			"name": "ChartConfigParameters",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration parameters for setting chart-specific options."
					}
				],
				"blockTags": [
					{
						"tag": "@fileoverview",
						"content": [
							{
								"kind": "text",
								"text": "This configuration includes settings for controlling measure name/value columns\nand batch size limits for data processing."
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "main/custom-chart-context.ts",
					"line": 117,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L117"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 643,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 650,
							"name": "batchSizeLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit on the batch size for data processing.\nThis sets an upper limit on how much data can be processed in a single batch."
									}
								],
								"blockTags": [
									{
										"tag": "@default",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n20000\n```"
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 168,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L168"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 644,
							"name": "measureNameValueColumns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configurations related to measure name and value columns.\nThese parameters allow for enabling/disabling and aliasing the columns\nused to represent measure names and values."
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 125,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L125"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 645,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 646,
											"name": "enableMeasureNameColumn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Enables or disables the measure_name column."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "main/custom-chart-context.ts",
													"line": 132,
													"character": 8,
													"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L132"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 647,
											"name": "enableMeasureValueColumn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Enables or disables the measure_value column."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nfalse\n```"
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "main/custom-chart-context.ts",
													"line": 140,
													"character": 8,
													"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L140"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 648,
											"name": "measureNameColumnAlias",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Alias for the measure_name column.\nThis allows users to define a custom name for the measure_name column."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'Measure Name'\n```"
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "main/custom-chart-context.ts",
													"line": 149,
													"character": 8,
													"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L149"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 649,
											"name": "measureValueColumnAlias",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Alias for the measure_value column.\nThis allows users to define a custom name for the measure_value column."
													}
												],
												"blockTags": [
													{
														"tag": "@default",
														"content": [
															{
																"kind": "code",
																"text": "```ts\n'Measure Value'\n```"
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "main/custom-chart-context.ts",
													"line": 158,
													"character": 8,
													"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L158"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												646,
												647,
												648,
												649
											]
										}
									],
									"sources": [
										{
											"fileName": "main/custom-chart-context.ts",
											"line": 125,
											"character": 30,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L125"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								650,
								644
							]
						}
					],
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 117,
							"character": 36,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L117"
						}
					]
				}
			}
		},
		{
			"id": 85,
			"name": "ChartSdkCustomStylingConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Used for Custom color pallete and Custom font for charts defined in Style customisations\ninside thoughtspot admin or developer section"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 246,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L246"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 86,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 87,
							"name": "appBackground",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 247,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L247"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 88,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 89,
											"name": "color",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "types/common.types.ts",
													"line": 248,
													"character": 8,
													"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L248"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												89
											]
										}
									],
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 247,
											"character": 20,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L247"
										}
									]
								}
							}
						},
						{
							"id": 90,
							"name": "appPanelColor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 250,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L250"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 91,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 92,
											"name": "color",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "types/common.types.ts",
													"line": 251,
													"character": 8,
													"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L251"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												92
											]
										}
									],
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 250,
											"character": 20,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L250"
										}
									]
								}
							}
						},
						{
							"id": 93,
							"name": "chartColorPalettes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 253,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L253"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 94,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 95,
												"name": "colors",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "types/common.types.ts",
														"line": 253,
														"character": 33,
														"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L253"
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													95
												]
											}
										],
										"sources": [
											{
												"fileName": "types/common.types.ts",
												"line": 253,
												"character": 31,
												"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L253"
											}
										]
									}
								}
							}
						},
						{
							"id": 98,
							"name": "chartFeatureToFontGuid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 256,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L256"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 20,
										"name": "CustomizableChartFeature",
										"package": "@thoughtspot/ts-chart-sdk"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 97,
							"name": "disableColorRotation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 255,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L255"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 99,
							"name": "fontFaces",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 257,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L257"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 72,
									"name": "TSFontFace",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 96,
							"name": "numColorPalettes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 254,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L254"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								87,
								90,
								93,
								98,
								97,
								99,
								96
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 246,
							"character": 42,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L246"
						}
					]
				}
			}
		},
		{
			"id": 127,
			"name": "ChartSdkDateFormatsConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Configuration object for date formats and settings in the Chart SDK.\nProvides locale-specific date and string formats, constants, and custom calendars."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 313,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L313"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 128,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 133,
							"name": "defaultDataSourceId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 318,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L318"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 131,
							"name": "tsDateConstants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 316,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L316"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 132,
							"name": "tsDefinedCustomCalenders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 317,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L317"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 129,
							"name": "tsLocaleBasedDateFormats",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 314,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L314"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 100,
										"name": "DateFormats",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 130,
							"name": "tsLocaleBasedStringsFormats",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 315,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L315"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								133,
								131,
								132,
								129,
								130
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 313,
							"character": 40,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L313"
						}
					]
				}
			}
		},
		{
			"id": 784,
			"name": "ConditionalFormatting",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L11"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 785,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 786,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 12,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L12"
								}
							],
							"type": {
								"type": "literal",
								"value": "ConditionalFormatting"
							}
						},
						{
							"id": 787,
							"name": "rows",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 13,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L13"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1,
											"typeArguments": [
												{
													"type": "reference",
													"target": 836,
													"name": "ConditionalMetric",
													"package": "@thoughtspot/ts-chart-sdk"
												}
											],
											"name": "Maybe",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								786,
								787
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 11,
							"character": 36,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L11"
						}
					]
				}
			}
		},
		{
			"id": 836,
			"name": "ConditionalMetric",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 66,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L66"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 837,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 838,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 67,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L67"
								}
							],
							"type": {
								"type": "literal",
								"value": "ConditionalMetric"
							}
						},
						{
							"id": 839,
							"name": "backgroundFormatType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 68,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L68"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 788,
										"name": "BackgroundFormatTypes",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 840,
							"name": "comparisonParameterId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 69,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 841,
							"name": "comparisonType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 70,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L70"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 791,
										"name": "ConditionalFormattingComparisonTypes",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 842,
							"name": "fontProperties",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 71,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L71"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 795,
										"name": "FontAttrs",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 843,
							"name": "gradientBackgroundAttrs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 72,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L72"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 803,
										"name": "GradientBackgroundAttrs",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 844,
							"name": "isHighlightRow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 73,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L73"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 845,
							"name": "lhsColumnId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 74,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L74"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 846,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 75,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L75"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 809,
										"name": "Operators",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 847,
							"name": "plotAsBand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 76,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L76"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 848,
							"name": "rangeValues",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 77,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L77"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 831,
										"name": "Range",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 849,
							"name": "rhsColumnId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 78,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L78"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 850,
							"name": "solidBackgroundAttrs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 79,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L79"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 827,
										"name": "SolidBackgroundAttrs",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 851,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 80,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L80"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								838,
								839,
								840,
								841,
								842,
								843,
								844,
								845,
								846,
								847,
								848,
								849,
								850,
								851
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 66,
							"character": 32,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L66"
						}
					]
				}
			}
		},
		{
			"id": 165,
			"name": "ConfigEditorDefinitionSetter",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/configurator.types.ts",
					"line": 120,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L120"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 166,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "types/configurator.types.ts",
							"line": 120,
							"character": 43,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/configurator.types.ts#L120"
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 168,
									"name": "currentState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 49,
										"name": "ChartModel",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								},
								{
									"id": 169,
									"name": "ctx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 682,
										"name": "CustomChartContext",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 160,
									"name": "ChartConfigEditorDefinition",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						}
					]
				}
			}
		},
		{
			"id": 932,
			"name": "CurrencyFormatConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L32"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 933,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 934,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L33"
								}
							],
							"type": {
								"type": "literal",
								"value": "CurrencyFormatConfig"
							}
						},
						{
							"id": 935,
							"name": "decimals",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to 2"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L35"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 936,
							"name": "locale",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 36,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 937,
							"name": "removeTrailingZeroes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to false"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 38,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L38"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 938,
							"name": "toSeparateThousands",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to true"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 40,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 939,
							"name": "unit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default is MILLION"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 42,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 921,
										"name": "Unit",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								934,
								935,
								936,
								937,
								938,
								939
							]
						}
					],
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 32,
							"character": 35,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L32"
						}
					]
				}
			}
		},
		{
			"id": 651,
			"name": "CustomChartContextProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "main/custom-chart-context.ts",
					"line": 171,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L171"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 652,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 679,
							"name": "allowedConfigurations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional configuration to toggle native TS UI configurations, such as column number\nformatting and conditional formatting."
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 258,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L258"
								}
							],
							"type": {
								"type": "reference",
								"target": 636,
								"name": "AllowedConfigurations",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 677,
							"name": "chartConfigEditorDefinition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Definition to help edit/customize the chart config from chart config editor on the\nTS app. If not provided, chart queries will not be configurable in editor"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 234,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L234"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 165,
										"name": "ConfigEditorDefinitionSetter",
										"package": "@thoughtspot/ts-chart-sdk"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 160,
											"name": "ChartConfigEditorDefinition",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								]
							}
						},
						{
							"id": 680,
							"name": "chartConfigParameters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional parameters for configuring specific chart-related features, such as measure name\nand value columns."
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 266,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L266"
								}
							],
							"type": {
								"type": "reference",
								"target": 642,
								"name": "ChartConfigParameters",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 653,
							"name": "getDefaultChartConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 179,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L179"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 654,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "main/custom-chart-context.ts",
											"line": 179,
											"character": 27,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L179"
										}
									],
									"signatures": [
										{
											"id": 655,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Generate the default axis configuration for rendering the chart on first load."
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "[]",
																"target": 36
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 656,
													"name": "chartModel",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 49,
														"name": "ChartModel",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36,
													"name": "ChartConfig",
													"package": "@thoughtspot/ts-chart-sdk"
												}
											}
										}
									]
								}
							}
						},
						{
							"id": 657,
							"name": "getQueriesFromChartConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 187,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L187"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 658,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "main/custom-chart-context.ts",
											"line": 187,
											"character": 31,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L187"
										}
									],
									"signatures": [
										{
											"id": 659,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Generate query in the form of array of chart columns to fetch the data."
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "Array<Query>"
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 660,
													"name": "chartConfig",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 36,
															"name": "ChartConfig",
															"package": "@thoughtspot/ts-chart-sdk"
														}
													}
												},
												{
													"id": 661,
													"name": "chartModel",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 49,
														"name": "ChartModel",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 602,
													"name": "Query",
													"package": "@thoughtspot/ts-chart-sdk"
												}
											}
										}
									]
								}
							}
						},
						{
							"id": 662,
							"name": "renderChart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 198,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L198"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 663,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "main/custom-chart-context.ts",
											"line": 198,
											"character": 17,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L198"
										}
									],
									"signatures": [
										{
											"id": 664,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Main Render function that will render the chart based on the chart context provided"
													}
												],
												"blockTags": [
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "Promise<void>"
															},
															{
																"kind": "text",
																"text": " Promise object to resolve once the chart is rendered"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 665,
													"name": "ctx",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "the chart context sdk object"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 682,
														"name": "CustomChartContext",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 666,
							"name": "validateConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 208,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L208"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 667,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "main/custom-chart-context.ts",
											"line": 208,
											"character": 21,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L208"
										}
									],
									"signatures": [
										{
											"id": 668,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Required to validate the current chart configuration\nthat chart user has updated on the chart config editor"
													}
												],
												"blockTags": [
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													},
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "ValidationResponse",
																"target": 66
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 669,
													"name": "updatedConfig",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 36,
															"name": "ChartConfig",
															"package": "@thoughtspot/ts-chart-sdk"
														}
													}
												},
												{
													"id": 670,
													"name": "chartModel",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 49,
														"name": "ChartModel",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 66,
												"name": "ValidationResponse",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 671,
							"name": "validateVisualProps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 222,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L222"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 672,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "main/custom-chart-context.ts",
											"line": 222,
											"character": 26,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L222"
										}
									],
									"signatures": [
										{
											"id": 673,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Required to validate the custom visual props that\nthe chart user has updated on the chart settings editor."
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "inline-tag",
																"tag": "@link",
																"text": "ValidationResponse",
																"target": 66
															}
														]
													},
													{
														"tag": "@version",
														"content": [
															{
																"kind": "text",
																"text": "SDK: 0.1 | ThoughtSpot:"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 674,
													"name": "updatedVisualProps",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 71,
														"name": "VisualProps",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												},
												{
													"id": 675,
													"name": "chartModel",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 49,
														"name": "ChartModel",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												},
												{
													"id": 676,
													"name": "activeColumnId",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 66,
												"name": "ValidationResponse",
												"package": "@thoughtspot/ts-chart-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 678,
							"name": "visualPropEditorDefinition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Definition to help edit/customize the visual properties from chart settings editor\non the TS app. If not provided, visual properties will not be configurable in\neditor"
									}
								],
								"blockTags": [
									{
										"tag": "@param",
										"name": "chartModel",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "VisualPropEditorDefinition",
												"target": 294
											}
										]
									},
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "main/custom-chart-context.ts",
									"line": 247,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L247"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 297,
										"name": "VisualEditorDefinitionSetter",
										"package": "@thoughtspot/ts-chart-sdk"
									},
									{
										"type": "reference",
										"target": 294,
										"name": "VisualPropEditorDefinition",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								679,
								677,
								680,
								653,
								657,
								662,
								666,
								671,
								678
							]
						}
					],
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 171,
							"character": 38,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L171"
						}
					]
				}
			}
		},
		{
			"id": 940,
			"name": "CustomFormatConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 45,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L45"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 941,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 942,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 46,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L46"
								}
							],
							"type": {
								"type": "literal",
								"value": "CustomFormatConfig"
							}
						},
						{
							"id": 943,
							"name": "format",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 47,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L47"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								942,
								943
							]
						}
					],
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 45,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L45"
						}
					]
				}
			}
		},
		{
			"id": 39,
			"name": "DataPointsArray",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data Points Array interface to define data for each row and column.\nData is ordered as per the columns in the query and the rows are sorted\nas per the search query."
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 108,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L108"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 40,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41,
							"name": "columns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of column IDs ordered as per the data query"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 114,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L114"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 42,
							"name": "dataValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of rows of data ordered by the columns"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 121,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L121"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41,
								42
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 108,
							"character": 30,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L108"
						}
					]
				}
			}
		},
		{
			"id": 795,
			"name": "FontAttrs",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 24,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L24"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 796,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 797,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 25,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L25"
								}
							],
							"type": {
								"type": "literal",
								"value": "FontAttrs"
							}
						},
						{
							"id": 798,
							"name": "bold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 26,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L26"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 799,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 27,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 800,
							"name": "italic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 28,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 801,
							"name": "strikeThrough",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 29,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 802,
							"name": "underline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								797,
								798,
								799,
								800,
								801,
								802
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 24,
							"character": 24,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L24"
						}
					]
				}
			}
		},
		{
			"id": 957,
			"name": "FormatConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 72,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L72"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 958,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 959,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 73,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L73"
								}
							],
							"type": {
								"type": "literal",
								"value": "FormatConfig"
							}
						},
						{
							"id": 960,
							"name": "category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 74,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L74"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 916,
										"name": "CategoryType",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 961,
							"name": "currencyFormatConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 75,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L75"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 932,
										"name": "CurrencyFormatConfig",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 962,
							"name": "customFormatConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 76,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L76"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 940,
										"name": "CustomFormatConfig",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 963,
							"name": "isCategoryEditable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 77,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L77"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 964,
							"name": "numberFormatConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 78,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L78"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 944,
										"name": "NumberFormatConfig",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 965,
							"name": "percentageFormatConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 79,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L79"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 952,
										"name": "PercentageFormatConfig",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								959,
								960,
								961,
								962,
								963,
								964,
								965
							]
						}
					],
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 72,
							"character": 27,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L72"
						}
					]
				}
			}
		},
		{
			"id": 803,
			"name": "GradientBackgroundAttrs",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L32"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 804,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 805,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L33"
								}
							],
							"type": {
								"type": "literal",
								"value": "GradientBackgroundAttrs"
							}
						},
						{
							"id": 806,
							"name": "backgroundFormatMidpoint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 34,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 807,
							"name": "backgroundFormatRange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L35"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "Float"
													},
													"objectType": {
														"type": "reference",
														"target": 5,
														"name": "Scalars",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											],
											"name": "Maybe",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 808,
							"name": "colors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 36,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "String"
													},
													"objectType": {
														"type": "reference",
														"target": 5,
														"name": "Scalars",
														"package": "@thoughtspot/ts-chart-sdk"
													}
												}
											],
											"name": "Maybe",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								805,
								806,
								807,
								808
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 32,
							"character": 38,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L32"
						}
					]
				}
			}
		},
		{
			"id": 3,
			"name": "InputMaybe",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 21,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L21"
				}
			],
			"typeParameters": [
				{
					"id": 4,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": 1,
				"typeArguments": [
					{
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					}
				],
				"name": "Maybe",
				"package": "@thoughtspot/ts-chart-sdk"
			}
		},
		{
			"id": 1,
			"name": "Maybe",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines types of features for which font can be customised with Custom style config used in TS."
					}
				],
				"blockTags": [
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "Use chartFeatureToFontGuid to get the guid for the feature and get the font face from guid\nfrom customFontFaces"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 20,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L20"
				}
			],
			"typeParameters": [
				{
					"id": 2,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": -1,
						"name": "T",
						"refersToTypeParameter": true
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 944,
			"name": "NumberFormatConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 50,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L50"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 945,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 946,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L51"
								}
							],
							"type": {
								"type": "literal",
								"value": "NumberFormatConfig"
							}
						},
						{
							"id": 947,
							"name": "decimals",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to 2"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 53,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L53"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 948,
							"name": "negativeValueFormat",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to PREFIX_DASH"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 55,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L55"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 928,
										"name": "NegativeValueFormat",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 949,
							"name": "removeTrailingZeroes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to false"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 57,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 950,
							"name": "toSeparateThousands",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to true"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 59,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L59"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 951,
							"name": "unit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default is Auto"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 61,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L61"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 921,
										"name": "Unit",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								946,
								947,
								948,
								949,
								950,
								951
							]
						}
					],
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 50,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L50"
						}
					]
				}
			}
		},
		{
			"id": 852,
			"name": "Parameter",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 83,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L83"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 853,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 854,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L84"
								}
							],
							"type": {
								"type": "literal",
								"value": "Parameter"
							}
						},
						{
							"id": 855,
							"name": "dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 85,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L85"
								}
							],
							"type": {
								"type": "reference",
								"target": 865,
								"name": "FalconDataType",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 856,
							"name": "defaultValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 86,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L86"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "String"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 857,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 87,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L87"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "String"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 858,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 88,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L88"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "GUID"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 859,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 89,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L89"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "String"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 860,
							"name": "overrideValue",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If not present, the parameter has not been overridden"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 91,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L91"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 861,
							"name": "owner",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 92,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L92"
								}
							],
							"type": {
								"type": "reference",
								"target": 885,
								"name": "ParameterOwnerInfo",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 862,
							"name": "valueList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 93,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L93"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 894,
											"name": "ParameterValueListItem",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 863,
							"name": "valueRange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 94,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L94"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "reference",
										"target": 903,
										"name": "ParameterValueRange",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 864,
							"name": "valueType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 95,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L95"
								}
							],
							"type": {
								"type": "reference",
								"target": 912,
								"name": "ParameterValueType",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								854,
								855,
								856,
								857,
								858,
								859,
								860,
								861,
								862,
								863,
								864
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 83,
							"character": 24,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L83"
						}
					]
				}
			}
		},
		{
			"id": 885,
			"name": "ParameterOwnerInfo",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 119,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L119"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 886,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 887,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 120,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L120"
								}
							],
							"type": {
								"type": "literal",
								"value": "ParameterOwnerInfo"
							}
						},
						{
							"id": 888,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 121,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L121"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "GUID"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 889,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 122,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L122"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "String"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 890,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 123,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L123"
								}
							],
							"type": {
								"type": "reference",
								"target": 891,
								"name": "ParameterOwnerType",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								887,
								888,
								889,
								890
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 119,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L119"
						}
					]
				}
			}
		},
		{
			"id": 894,
			"name": "ParameterValueListItem",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 131,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L131"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 895,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 896,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 132,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L132"
								}
							],
							"type": {
								"type": "literal",
								"value": "ParameterValueListItem"
							}
						},
						{
							"id": 897,
							"name": "displayAs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 133,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L133"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 898,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 134,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L134"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "String"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								896,
								897,
								898
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 131,
							"character": 37,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L131"
						}
					]
				}
			}
		},
		{
			"id": 899,
			"name": "ParameterValueListItemInput",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 137,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L137"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 900,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 901,
							"name": "displayAs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 138,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L138"
								}
							],
							"type": {
								"type": "reference",
								"target": 3,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "InputMaybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 902,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 139,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L139"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "String"
								},
								"objectType": {
									"type": "reference",
									"target": 5,
									"name": "Scalars",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								901,
								902
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 137,
							"character": 42,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L137"
						}
					]
				}
			}
		},
		{
			"id": 903,
			"name": "ParameterValueRange",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 142,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L142"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 904,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 905,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 143,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L143"
								}
							],
							"type": {
								"type": "literal",
								"value": "ParameterValueRange"
							}
						},
						{
							"id": 906,
							"name": "max",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 144,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L144"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 907,
							"name": "min",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 145,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L145"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								905,
								906,
								907
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 142,
							"character": 34,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L142"
						}
					]
				}
			}
		},
		{
			"id": 908,
			"name": "ParameterValueRangeInput",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 148,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L148"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 909,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 910,
							"name": "max",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 149,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": 3,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "InputMaybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 911,
							"name": "min",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 150,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L150"
								}
							],
							"type": {
								"type": "reference",
								"target": 3,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "InputMaybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								910,
								911
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 148,
							"character": 39,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L148"
						}
					]
				}
			}
		},
		{
			"id": 952,
			"name": "PercentageFormatConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/number-formatting.types.ts",
					"line": 64,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L64"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 953,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 954,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 65,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L65"
								}
							],
							"type": {
								"type": "literal",
								"value": "PercentageFormatConfig"
							}
						},
						{
							"id": 955,
							"name": "decimals",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to 2"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 67,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L67"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 956,
							"name": "removeTrailingZeroes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "default to false"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/number-formatting.types.ts",
									"line": 69,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Boolean"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								954,
								955,
								956
							]
						}
					],
					"sources": [
						{
							"fileName": "types/number-formatting.types.ts",
							"line": 64,
							"character": 37,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/number-formatting.types.ts#L64"
						}
					]
				}
			}
		},
		{
			"id": 285,
			"name": "PropElement",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Common type placeholder for all the input element types"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 527,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L527"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 268,
						"name": "Section",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 212,
						"name": "TextInputFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 223,
						"name": "NumberInputFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 231,
						"name": "ColorPickerFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 238,
						"name": "ToggleFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 245,
						"name": "CheckboxFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 252,
						"name": "RadioButtonFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 260,
						"name": "DropDownFormDetail",
						"package": "@thoughtspot/ts-chart-sdk"
					},
					{
						"type": "reference",
						"target": 278,
						"name": "NativeEditToolTip",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				]
			}
		},
		{
			"id": 43,
			"name": "QueryData",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "For each query defined by the user, a query data object is sent\nin this format."
					}
				],
				"blockTags": [
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 131,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L131"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 44,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 45,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Data Array for each column"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 137,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L137"
								}
							],
							"type": {
								"type": "reference",
								"target": 39,
								"name": "DataPointsArray",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 48,
							"name": "totalRowCount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Number of rows of data fetched for the query"
									}
								],
								"blockTags": [
									{
										"tag": "@version",
										"content": [
											{
												"kind": "text",
												"text": "SDK: 0.1 | ThoughtSpot:"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 155,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L155"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								45,
								48
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 131,
							"character": 24,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L131"
						}
					]
				}
			}
		},
		{
			"id": 831,
			"name": "Range",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L61"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 832,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 833,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 62,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L62"
								}
							],
							"type": {
								"type": "literal",
								"value": "Range"
							}
						},
						{
							"id": 834,
							"name": "max",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 63,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L63"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 835,
							"name": "min",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 64,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L64"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "Float"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								833,
								834,
								835
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 61,
							"character": 20,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L61"
						}
					]
				}
			}
		},
		{
			"id": 5,
			"name": "Scalars",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 23,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L23"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9,
							"name": "Boolean",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 26,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12,
							"name": "FileUpload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 29,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 11,
							"name": "Float",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 28,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L28"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 13,
							"name": "GUID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 7,
							"name": "ID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L24"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10,
							"name": "Int",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 27,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L27"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 14,
							"name": "JSON",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 31,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L31"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 15,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "types/common.types.ts",
											"line": 31,
											"character": 10,
											"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L31"
										}
									],
									"indexSignature": {
										"id": 16,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "types/common.types.ts",
												"line": 32,
												"character": 8,
												"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L32"
											}
										],
										"parameters": [
											{
												"id": 17,
												"name": "key",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							}
						},
						{
							"id": 18,
							"name": "JSONObject",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 34,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 19,
							"name": "Long",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 8,
							"name": "String",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 25,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9,
								12,
								11,
								13,
								7,
								10,
								14,
								18,
								19,
								8
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 23,
							"character": 22,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L23"
						}
					]
				}
			}
		},
		{
			"id": 827,
			"name": "SolidBackgroundAttrs",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/conditional-formatting.types.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L57"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 828,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 829,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 58,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L58"
								}
							],
							"type": {
								"type": "literal",
								"value": "SolidBackgroundAttrs"
							}
						},
						{
							"id": 830,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/conditional-formatting.types.ts",
									"line": 59,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L59"
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "String"
										},
										"objectType": {
											"type": "reference",
											"target": 5,
											"name": "Scalars",
											"package": "@thoughtspot/ts-chart-sdk"
										}
									}
								],
								"name": "Maybe",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								829,
								830
							]
						}
					],
					"sources": [
						{
							"fileName": "types/conditional-formatting.types.ts",
							"line": 57,
							"character": 35,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/conditional-formatting.types.ts#L57"
						}
					]
				}
			}
		},
		{
			"id": 57,
			"name": "SuccessValidationResponse",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 186,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L186"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59,
							"name": "chartConfigEditorDefinition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 187,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L187"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 160,
									"name": "ChartConfigEditorDefinition",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 60,
							"name": "visualPropEditorDefinition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 188,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L188"
								}
							],
							"type": {
								"type": "reference",
								"target": 294,
								"name": "VisualPropEditorDefinition",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59,
								60
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 186,
							"character": 40,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L186"
						}
					]
				}
			}
		},
		{
			"id": 72,
			"name": "TSFontFace",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Font Faces type from TS.\n guid will be null in case of default Font types\n If a custom Font is added in Dev section on TS this guid can be used to Match\n the Font Face That needs to be applied to"
					}
				],
				"blockTags": [
					{
						"tag": "@link",
						"content": [
							{
								"kind": "text",
								"text": "CustomizableChartFeature"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 226,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L226"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 73,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 84,
							"name": "color",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 237,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L237"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 75,
							"name": "family",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 228,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L228"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 76,
							"name": "format",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 229,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L229"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 74,
							"name": "guid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 227,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L227"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 80,
							"name": "size",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 233,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L233"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 83,
							"name": "stretch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 236,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L236"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 79,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 232,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L232"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 81,
							"name": "unicodeRange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 234,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L234"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 77,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 230,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L230"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 82,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 235,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L235"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 78,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 231,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L231"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								84,
								75,
								76,
								74,
								80,
								83,
								79,
								81,
								77,
								82,
								78
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 226,
							"character": 25,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L226"
						}
					]
				}
			}
		},
		{
			"id": 170,
			"name": "TSTooltipConfig",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L15"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 171,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 172,
							"name": "columnIds",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/visual-prop.types.ts",
									"line": 16,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L16"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								172
							]
						}
					],
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 15,
							"character": 30,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L15"
						}
					]
				}
			}
		},
		{
			"id": 681,
			"name": "ValidationFunctions",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "main/custom-chart-context.ts",
					"line": 269,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L269"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "validateVisualProps"
						},
						"objectType": {
							"type": "reference",
							"target": 651,
							"name": "CustomChartContextProps",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					},
					{
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": "validateConfig"
						},
						"objectType": {
							"type": "reference",
							"target": 651,
							"name": "CustomChartContextProps",
							"package": "@thoughtspot/ts-chart-sdk"
						}
					}
				]
			}
		},
		{
			"id": 66,
			"name": "ValidationResponse",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 198,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L198"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 67,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 68,
							"name": "isValid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 199,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L199"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 69,
							"name": "validationErrorMessage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 200,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L200"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 70,
							"name": "visualPropError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 201,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L201"
								}
							],
							"type": {
								"type": "reference",
								"target": 61,
								"name": "VisualPropError",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								68,
								69,
								70
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 198,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L198"
						}
					]
				}
			}
		},
		{
			"id": 297,
			"name": "VisualEditorDefinitionSetter",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/visual-prop.types.ts",
					"line": 571,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L571"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 298,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "types/visual-prop.types.ts",
							"line": 571,
							"character": 43,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/visual-prop.types.ts#L571"
						}
					],
					"signatures": [
						{
							"id": 299,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 300,
									"name": "currentState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 49,
										"name": "ChartModel",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								},
								{
									"id": 301,
									"name": "ctx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 682,
										"name": "CustomChartContext",
										"package": "@thoughtspot/ts-chart-sdk"
									}
								},
								{
									"id": 302,
									"name": "activeColumnId",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 294,
								"name": "VisualPropEditorDefinition",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 61,
			"name": "VisualPropError",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 191,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L191"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 62,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 63,
							"name": "propElementKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 192,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L192"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 64,
							"name": "propElementType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 193,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L193"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 65,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/common.types.ts",
									"line": 194,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L194"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								63,
								64,
								65
							]
						}
					],
					"sources": [
						{
							"fileName": "types/common.types.ts",
							"line": 191,
							"character": 30,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L191"
						}
					]
				}
			}
		},
		{
			"id": 71,
			"name": "VisualProps",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom Visual props is the stored metadata for the visual props definition\nconfigured by the user in the visual prop editor\nThe object is defined by the visual prop types. See VisualPropEditorDefinition.\nIf there is any local state specific to charts needs to be maintained on save answer, store it\nin VisualProps, with visualProps.clientState variable. The clientState variable should be a\nstring, preferrably a result of JSON.stringify(<yourlocalClientState>)."
					}
				],
				"blockTags": [
					{
						"tag": "@remark",
						"content": [
							{
								"kind": "text",
								"text": "only values stored in clientSate variable will be preserved on changing the\nvisualPropeditorDefinition, any other variable store would not be preserved"
							}
						]
					},
					{
						"tag": "@version",
						"content": [
							{
								"kind": "text",
								"text": "SDK: 0.1 | ThoughtSpot:"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/common.types.ts",
					"line": 217,
					"character": 12,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/types/common.types.ts#L217"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "unknown"
			}
		},
		{
			"id": 1053,
			"name": "bucketizationToDatePreset",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 122,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L122"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1054,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1056,
							"name": "DAILY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 124,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L124"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "dateFormatPresets.DATE_SHORT"
						},
						{
							"id": 1055,
							"name": "HOURLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 123,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L123"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "dateFormatPresets.DATE_SHORT_WITH_HOUR"
						},
						{
							"id": 1058,
							"name": "MONTHLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 126,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L126"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "dateFormatPresets.MONTH_WITH_YEAR"
						},
						{
							"id": 1059,
							"name": "QUARTERLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 127,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "dateFormatPresets.QUARTER_WITH_YEAR"
						},
						{
							"id": 1057,
							"name": "WEEKLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 125,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L125"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "dateFormatPresets.DATE_SHORT"
						},
						{
							"id": 1060,
							"name": "YEARLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 128,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L128"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'yyyy'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1056,
								1055,
								1058,
								1059,
								1057,
								1060
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 122,
							"character": 41,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L122"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1007,
			"name": "dateFormatPresets",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 29,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L29"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1008,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1023,
							"name": "DATETIME_24_SHORT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_24_SHORT'"
						},
						{
							"id": 1022,
							"name": "DATETIME_24_SHORT_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 43,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L43"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_24_SHORT_WITHOUT_YEAR'"
						},
						{
							"id": 1027,
							"name": "DATETIME_24_SHORT_WITH_MILLIS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_24_SHORT_WITH_MILLIS'"
						},
						{
							"id": 1026,
							"name": "DATETIME_24_SHORT_WITH_MILLIS_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 49,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_24_SHORT_WITH_MILLIS_WITHOUT_YEAR'"
						},
						{
							"id": 1012,
							"name": "DATETIME_SHORT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_SHORT'"
						},
						{
							"id": 1013,
							"name": "DATETIME_SHORT_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 34,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_SHORT_WITHOUT_YEAR'"
						},
						{
							"id": 1015,
							"name": "DATETIME_SHORT_WITH_MILLIS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 36,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_SHORT_WITH_MILLIS'"
						},
						{
							"id": 1025,
							"name": "DATETIME_SHORT_WITH_MILLIS_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 47,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_SHORT_WITH_MILLIS_WITHOUT_YEAR'"
						},
						{
							"id": 1014,
							"name": "DATETIME_SHORT_WITH_SECONDS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L35"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_SHORT_WITH_SECONDS'"
						},
						{
							"id": 1024,
							"name": "DATETIME_SHORT_WITH_SECONDS_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 45,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_SHORT_WITH_SECONDS_WITHOUT_YEAR'"
						},
						{
							"id": 1035,
							"name": "DATETIME_WITH_SHORT_OFFSET",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 60,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L60"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATETIME_WITH_SHORT_OFFSET'"
						},
						{
							"id": 1009,
							"name": "DATE_SHORT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_SHORT'"
						},
						{
							"id": 1021,
							"name": "DATE_SHORT_2_DIGIT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 42,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L42"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_SHORT_2_DIGIT_YEAR'"
						},
						{
							"id": 1010,
							"name": "DATE_SHORT_WITH_HOUR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 31,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_SHORT_WITH_HOUR'"
						},
						{
							"id": 1032,
							"name": "DATE_SHORT_WITH_HOUR_24",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 57,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L57"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_SHORT_WITH_HOUR_24'"
						},
						{
							"id": 1031,
							"name": "DATE_SHORT_WITH_HOUR_24_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 55,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L55"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_SHORT_WITH_HOUR_24_WITHOUT_YEAR'"
						},
						{
							"id": 1011,
							"name": "DATE_SHORT_WITH_HOUR_WITHOUT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 32,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_SHORT_WITH_HOUR_WITHOUT_YEAR'"
						},
						{
							"id": 1030,
							"name": "DAY_WITH_MONTH_NUM",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 54,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DAY_WITH_MONTH_NUM'"
						},
						{
							"id": 1019,
							"name": "DEFAULT_TIME_FORMAT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 40,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L40"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DEFAULT_TIME_FORMAT'"
						},
						{
							"id": 1034,
							"name": "MONTH_ONLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 59,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L59"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'MONTH_ONLY'"
						},
						{
							"id": 1029,
							"name": "MONTH_WITH_2_DIGIT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 53,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'MONTH_WITH_2_DIGIT_YEAR'"
						},
						{
							"id": 1028,
							"name": "MONTH_WITH_DAY_AND_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 52,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'MONTH_WITH_DAY_AND_YEAR'"
						},
						{
							"id": 1016,
							"name": "MONTH_WITH_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 37,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'MONTH_WITH_YEAR'"
						},
						{
							"id": 1033,
							"name": "QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 58,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L58"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'QUARTER'"
						},
						{
							"id": 1018,
							"name": "QUARTER_WITH_2_DIGIT_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 39,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'QUARTER_WITH_2_DIGIT_YEAR'"
						},
						{
							"id": 1017,
							"name": "QUARTER_WITH_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 38,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L38"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'QUARTER_WITH_YEAR'"
						},
						{
							"id": 1020,
							"name": "TIME_24_WITH_SECONDS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 41,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'TIME_24_WITH_SECONDS'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1023,
								1022,
								1027,
								1026,
								1012,
								1013,
								1015,
								1025,
								1014,
								1024,
								1035,
								1009,
								1021,
								1010,
								1032,
								1031,
								1011,
								1030,
								1019,
								1034,
								1029,
								1028,
								1016,
								1033,
								1018,
								1017,
								1020
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 29,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L29"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1036,
			"name": "dateNumTypes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 79,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L79"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1037,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1038,
							"name": "DATE_NUM_ABS_DAY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 80,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_ABS_DAY'"
						},
						{
							"id": 1039,
							"name": "DATE_NUM_ABS_MONTH",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 81,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L81"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_ABS_MONTH'"
						},
						{
							"id": 1040,
							"name": "DATE_NUM_ABS_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 82,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L82"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_ABS_QUARTER'"
						},
						{
							"id": 1041,
							"name": "DATE_NUM_ABS_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 83,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L83"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_ABS_YEAR'"
						},
						{
							"id": 1042,
							"name": "DATE_NUM_DAY_IN_MONTH",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L84"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_DAY_IN_MONTH'"
						},
						{
							"id": 1043,
							"name": "DATE_NUM_DAY_IN_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 85,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_DAY_IN_QUARTER'"
						},
						{
							"id": 1044,
							"name": "DATE_NUM_DAY_IN_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 86,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L86"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_DAY_IN_YEAR'"
						},
						{
							"id": 1045,
							"name": "DATE_NUM_DAY_OF_WEEK",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 87,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L87"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_DAY_OF_WEEK'"
						},
						{
							"id": 1052,
							"name": "DATE_NUM_HOUR_IN_DAY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 94,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L94"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_HOUR_IN_DAY'"
						},
						{
							"id": 1046,
							"name": "DATE_NUM_MONTH_IN_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 88,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L88"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_MONTH_IN_QUARTER'"
						},
						{
							"id": 1047,
							"name": "DATE_NUM_MONTH_IN_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 89,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_MONTH_IN_YEAR'"
						},
						{
							"id": 1048,
							"name": "DATE_NUM_QUARTER_IN_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 90,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_QUARTER_IN_YEAR'"
						},
						{
							"id": 1051,
							"name": "DATE_NUM_WEEK_IN_MONTH",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 93,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L93"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_WEEK_IN_MONTH'"
						},
						{
							"id": 1050,
							"name": "DATE_NUM_WEEK_IN_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 92,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L92"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_WEEK_IN_QUARTER'"
						},
						{
							"id": 1049,
							"name": "DATE_NUM_WEEK_IN_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 91,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L91"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'DATE_NUM_WEEK_IN_YEAR'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1038,
								1039,
								1040,
								1041,
								1042,
								1043,
								1044,
								1045,
								1052,
								1046,
								1047,
								1048,
								1051,
								1050,
								1049
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 79,
							"character": 28,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L79"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1061,
			"name": "timeBuckets",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 134,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L134"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1062,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1065,
							"name": "DAILY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 137,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L137"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'d'"
						},
						{
							"id": 1071,
							"name": "DAY_OF_MONTH",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 143,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'dom'"
						},
						{
							"id": 1072,
							"name": "DAY_OF_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 144,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L144"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'doq'"
						},
						{
							"id": 1070,
							"name": "DAY_OF_WEEK",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 142,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L142"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'dow'"
						},
						{
							"id": 1073,
							"name": "DAY_OF_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 145,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L145"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'doy'"
						},
						{
							"id": 1064,
							"name": "HOURLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 136,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L136"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'h'"
						},
						{
							"id": 1067,
							"name": "MONTHLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 139,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L139"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'M'"
						},
						{
							"id": 1077,
							"name": "MONTH_OF_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 149,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L149"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'moq'"
						},
						{
							"id": 1078,
							"name": "MONTH_OF_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 150,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L150"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'moy'"
						},
						{
							"id": 1063,
							"name": "NO_BUCKET",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 135,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L135"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'ms'"
						},
						{
							"id": 1068,
							"name": "QUARTERLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 140,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L140"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Q'"
						},
						{
							"id": 1079,
							"name": "QUARTER_OF_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 151,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L151"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'qoy'"
						},
						{
							"id": 1066,
							"name": "WEEKLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 138,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L138"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'w'"
						},
						{
							"id": 1074,
							"name": "WEEK_OF_MONTH",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 146,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L146"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'wom'"
						},
						{
							"id": 1075,
							"name": "WEEK_OF_QUARTER",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 147,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L147"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'woq'"
						},
						{
							"id": 1076,
							"name": "WEEK_OF_YEAR",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 148,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L148"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'woy'"
						},
						{
							"id": 1069,
							"name": "YEARLY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/date-formatting.ts",
									"line": 141,
									"character": 4,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L141"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'y'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1065,
								1071,
								1072,
								1070,
								1073,
								1064,
								1067,
								1077,
								1078,
								1063,
								1068,
								1079,
								1066,
								1074,
								1075,
								1076,
								1069
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 134,
							"character": 27,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L134"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1148,
			"name": "applicableConditionalFormatting",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/conditional-formatting/conditional-formatting.ts",
					"line": 201,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L201"
				}
			],
			"signatures": [
				{
					"id": 1149,
					"name": "applicableConditionalFormatting",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Evaluates all conditional formatting rules against a specific data point and returns the first\napplicable rule."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The first ConditionalMetric that is applicable to the specified data point, or null if no rules are applicable."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/conditional-formatting/conditional-formatting.ts",
							"line": 201,
							"character": 47,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L201"
						}
					],
					"parameters": [
						{
							"id": 1150,
							"name": "idx",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The index of the data point to evaluate."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1151,
							"name": "columnId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the column for which to validate the rule."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1152,
							"name": "dataArr",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The array of data points against which the conditional formatting rules will be evaluated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39,
								"name": "DataPointsArray",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 1153,
							"name": "conditionalFormatting",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The conditional formattings applied on a column."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 784,
								"name": "ConditionalFormatting",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 836,
								"name": "ConditionalMetric",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 1107,
			"name": "assignQuarterValueToString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 322,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L322"
				}
			],
			"signatures": [
				{
					"id": 1108,
					"name": "assignQuarterValueToString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 322,
							"character": 42,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L322"
						}
					],
					"parameters": [
						{
							"id": 1109,
							"name": "quarter_of_year",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1110,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1154,
			"name": "formatCurrencyWithCustomPattern",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/number-formatting/number-formatting.ts",
					"line": 50,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/number-formatting/number-formatting.ts#L50"
				}
			],
			"signatures": [
				{
					"id": 1155,
					"name": "formatCurrencyWithCustomPattern",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formats a number with a custom pattern and combines it with a currency symbol."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The formatted value with the currency symbol."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/number-formatting/number-formatting.ts",
							"line": 50,
							"character": 47,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/number-formatting/number-formatting.ts#L50"
						}
					],
					"parameters": [
						{
							"id": 1156,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The numeric value to format."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1157,
							"name": "currencyCode",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ISO currency code (e.g., 'USD')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1158,
							"name": "formatPattern",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The custom format pattern (e.g., '#,##0.00')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 995,
			"name": "formatDate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 637,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L637"
				}
			],
			"signatures": [
				{
					"id": 996,
					"name": "formatDate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Returns the formatted date per the format."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 637,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L637"
						}
					],
					"parameters": [
						{
							"id": 997,
							"name": "inputDate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Can be either a parseable format of date or an epoch value."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 998,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "a dateFormatPresets or a format pattern string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 999,
							"name": "useSystemCalendar",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If any custom calendar setting (e.g. quarterStartMonth)\n    is to be ignored."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1000,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 989,
			"name": "formatDateNum",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 542,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L542"
				}
			],
			"signatures": [
				{
					"id": 990,
					"name": "formatDateNum",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formats a date-related numeric value based on its effective data type, a given format pattern,\nand options.\n\nThis function is used to format date-related numeric values (such as days of the month, weeks of\nthe year, or hours of the day) according to the specified "
							},
							{
								"kind": "code",
								"text": "`effectiveDataType`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`formatPattern`"
							},
							{
								"kind": "text",
								"text": ",\nand other options. It supports custom formatting for various date-related values and can handle\nspecial cases like null values."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A string representing the formatted date-related numeric value, or a placeholder if the value is null."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n// Example usage\nconst formattedDate = formatDateNum(\n    dateNumTypes.DATE_NUM_DAY_IN_MONTH,\n    15,\n    'm',\n    options // get from {@link generateMapOptions}\n);\nconsole.log(formattedDate); // Output could be '15th day of month' depending on the format\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 542,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L542"
						}
					],
					"parameters": [
						{
							"id": 991,
							"name": "effectiveDataType",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The effective data type to format, which determines how the value will be interpreted\n                            (e.g., "
									},
									{
										"kind": "code",
										"text": "`DATE_NUM_ABS_DAY`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`DATE_NUM_DAY_IN_MONTH`"
									},
									{
										"kind": "text",
										"text": ")."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 992,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The numeric value (or string) to format. This value is typically a date-related number."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 993,
							"name": "formatPattern",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The pattern to use for formatting the value (e.g., for day or month formatting)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 994,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object containing various formatting options, such as locale-based string formats, date constants,\n                 and settings for the quarter start month and special value handling."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1120,
			"name": "formatDateTime",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 426,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L426"
				}
			],
			"signatures": [
				{
					"id": 1121,
					"name": "formatDateTime",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the formatted date based on the format tokens"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 426,
							"character": 30,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L426"
						}
					],
					"parameters": [
						{
							"id": 1122,
							"name": "epochMillis",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1123,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1124,
							"name": "useSystemCalendar",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1125,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1177,
			"name": "formatNumberSafely",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 168,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L168"
				}
			],
			"signatures": [
				{
					"id": 1178,
					"name": "formatNumberSafely",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formats a number using Globalize, handling errors gracefully."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The formatted number as a string."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 168,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L168"
						}
					],
					"typeParameter": [
						{
							"id": 1179,
							"name": "FormatOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+globalize@1.5.5/node_modules/@types/globalize/dist/globalize/number.d.ts",
									"qualifiedName": "\"../globalize\".NumberFormatterOptions"
								},
								"name": "NumberFormatterOptions",
								"package": "@types/globalize",
								"qualifiedName": "\"../globalize\".NumberFormatterOptions"
							}
						}
					],
					"parameters": [
						{
							"id": 1180,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Globalize number formatter options."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "FormatOptions",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1181,
							"name": "num",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number to format."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1133,
			"name": "getCfForColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/conditional-formatting/conditional-formatting.ts",
					"line": 225,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L225"
				}
			],
			"signatures": [
				{
					"id": 1134,
					"name": "getCfForColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves all conditional formatting rules applied to a column."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "An array of ConditionalFormatting configurations applied to the specified column, or undefined if no configurations are applicable."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/conditional-formatting/conditional-formatting.ts",
							"line": 225,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L225"
						}
					],
					"parameters": [
						{
							"id": 1135,
							"name": "column",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column for which to retrieve conditional formatting rules."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 784,
								"name": "ConditionalFormatting",
								"package": "@thoughtspot/ts-chart-sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 778,
			"name": "getChartContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "main/custom-chart-context.ts",
					"line": 1113,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L1113"
				}
			],
			"signatures": [
				{
					"id": 779,
					"name": "getChartContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the initialized chart context object"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Promise"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "main/custom-chart-context.ts",
							"line": 1113,
							"character": 31,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/main/custom-chart-context.ts#L1113"
						}
					],
					"parameters": [
						{
							"id": 780,
							"name": "customChartConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 651,
								"name": "CustomChartContextProps",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 682,
								"name": "CustomChartContext",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 1182,
			"name": "getCountryCode",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 32,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 1183,
					"name": "getCountryCode",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extracts the country code from a locale string."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The country code (e.g., 'US') or the input locale if no delimiter is found."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 32,
							"character": 30,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L32"
						}
					],
					"parameters": [
						{
							"id": 1184,
							"name": "locale",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The locale string (e.g., 'en-US', 'en_US')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1195,
			"name": "getCurrentCurrencyFormat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 97,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L97"
				}
			],
			"signatures": [
				{
					"id": 1196,
					"name": "getCurrentCurrencyFormat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the current currency format."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The current currency format."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 97,
							"character": 40,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L97"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1089,
			"name": "getCustomCalendarGuidFromColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 192,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L192"
				}
			],
			"signatures": [
				{
					"id": 1090,
					"name": "getCustomCalendarGuidFromColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the custom calendar GUID associated with a specified column."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The custom calendar GUID of the column, or undefined if not available."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 192,
							"character": 47,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L192"
						}
					],
					"parameters": [
						{
							"id": 1091,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column from which to retrieve the calendar GUID, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			]
		},
		{
			"id": 1115,
			"name": "getCustomCalendarValueFromEpoch",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 353,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L353"
				}
			],
			"signatures": [
				{
					"id": 1116,
					"name": "getCustomCalendarValueFromEpoch",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 353,
							"character": 47,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L353"
						}
					],
					"parameters": [
						{
							"id": 1117,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 1118,
							"name": "dateEpoch",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1119,
							"name": "displayToCustomCalendarValueMap",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1185,
			"name": "getDefaultCurrencyCode",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 49,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 1186,
					"name": "getDefaultCurrencyCode",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the default currency code for the current locale."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The default currency code (e.g., 'USD') or GBP if not found."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 49,
							"character": 38,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 974,
			"name": "getDisplayString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 340,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L340"
				}
			],
			"signatures": [
				{
					"id": 975,
					"name": "getDisplayString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 340,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L340"
						}
					],
					"parameters": [
						{
							"id": 976,
							"name": "date",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1001,
								"name": "CustomCalendarDate",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		},
		{
			"id": 1101,
			"name": "getEffectiveDateNumDataType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 273,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L273"
				}
			],
			"signatures": [
				{
					"id": 1102,
					"name": "getEffectiveDateNumDataType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the effective date numeric data type based on the column's time bucket.\n\nThis function maps a column's "
							},
							{
								"kind": "code",
								"text": "`timeBucket`"
							},
							{
								"kind": "text",
								"text": " to a corresponding date numeric data type, such as\n"
							},
							{
								"kind": "code",
								"text": "`DATE_NUM_DAY_OF_WEEK`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`DATE_NUM_DAY_IN_MONTH`"
							},
							{
								"kind": "text",
								"text": ", etc. If the "
							},
							{
								"kind": "code",
								"text": "`timeBucket`"
							},
							{
								"kind": "text",
								"text": " does not match any\npredefined value, the function returns "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The corresponding date numeric data type, or "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " if the "
									},
									{
										"kind": "code",
										"text": "`timeBucket`"
									},
									{
										"kind": "text",
										"text": " is not recognized."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 273,
							"character": 43,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L273"
						}
					],
					"parameters": [
						{
							"id": 1103,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			]
		},
		{
			"id": 1159,
			"name": "getFormattedValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/number-formatting/number-formatting.ts",
					"line": 86,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/number-formatting/number-formatting.ts#L86"
				}
			],
			"signatures": [
				{
					"id": 1160,
					"name": "getFormattedValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Formats a value based on the provided format configuration and column settings."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The formatted value as a string."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/number-formatting/number-formatting.ts",
							"line": 86,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/number-formatting/number-formatting.ts#L86"
						}
					],
					"parameters": [
						{
							"id": 1161,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The value to format (can be a string or number)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1162,
							"name": "formatConfigProp",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The format configuration for the value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 957,
								"name": "FormatConfig",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 1163,
							"name": "columnFormatConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column-specific formatting settings."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 395,
								"name": "ColumnFormat",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1190,
			"name": "getGlobalizeLocale",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 81,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L81"
				}
			],
			"signatures": [
				{
					"id": 1191,
					"name": "getGlobalizeLocale",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the current locale set in Globalize."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The current locale string (e.g., 'en-US')."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 81,
							"character": 34,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1139,
			"name": "getMaxRangeValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/conditional-formatting/conditional-formatting.ts",
					"line": 24,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L24"
				}
			],
			"signatures": [
				{
					"id": 1140,
					"name": "getMaxRangeValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/conditional-formatting/conditional-formatting.ts",
							"line": 24,
							"character": 32,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L24"
						}
					],
					"parameters": [
						{
							"id": 1141,
							"name": "metric",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 836,
								"name": "ConditionalMetric",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			]
		},
		{
			"id": 1136,
			"name": "getMinRangeValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/conditional-formatting/conditional-formatting.ts",
					"line": 20,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 1137,
					"name": "getMinRangeValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/conditional-formatting/conditional-formatting.ts",
							"line": 20,
							"character": 32,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L20"
						}
					],
					"parameters": [
						{
							"id": 1138,
							"name": "metric",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 836,
								"name": "ConditionalMetric",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			]
		},
		{
			"id": 969,
			"name": "getMonthOfYear",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 329,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L329"
				}
			],
			"signatures": [
				{
					"id": 970,
					"name": "getMonthOfYear",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 329,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L329"
						}
					],
					"parameters": [
						{
							"id": 971,
							"name": "num",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 972,
							"name": "quarterStartMonth",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 973,
							"name": "monthOfYear",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 986,
			"name": "getOrdinalSuffixedValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 493,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L493"
				}
			],
			"signatures": [
				{
					"id": 987,
					"name": "getOrdinalSuffixedValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Converts a number or string into its corresponding ordinal suffixed value.\n\nThis function takes a number (or string that can be parsed as a number) and returns it as a\nstring with the appropriate ordinal suffix ("
							},
							{
								"kind": "code",
								"text": "`st`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`nd`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`rd`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`th`"
							},
							{
								"kind": "text",
								"text": "). The function accounts for\nexceptions in English grammar, such as 11th, 12th, and 13th, which do not follow the standard\nsuffix rules."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A string representing the number with its ordinal suffix (e.g., \"1st\", \"2nd\", \"3rd\", \"4th\")."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 493,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L493"
						}
					],
					"parameters": [
						{
							"id": 988,
							"name": "i",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number (or string) to convert into an ordinal suffixed value."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 977,
			"name": "getSpecialFormatData",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 373,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L373"
				}
			],
			"signatures": [
				{
					"id": 978,
					"name": "getSpecialFormatData",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 373,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L373"
						}
					],
					"parameters": [
						{
							"id": 979,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 980,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 966,
			"name": "getStartEpoch",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 315,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L315"
				}
			],
			"signatures": [
				{
					"id": 967,
					"name": "getStartEpoch",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieves the start epoch from a custom calendar date."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The start epoch time if present, null otherwise."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 315,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L315"
						}
					],
					"parameters": [
						{
							"id": 968,
							"name": "date",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The custom calendar date object."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1001,
								"name": "CustomCalendarDate",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				}
			]
		},
		{
			"id": 1170,
			"name": "globalizeCurrencyFormatter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 154,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L154"
				}
			],
			"signatures": [
				{
					"id": 1171,
					"name": "globalizeCurrencyFormatter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a currency formatter with the given options."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A formatter function for currency values."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 154,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L154"
						}
					],
					"parameters": [
						{
							"id": 1172,
							"name": "currencyCode",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ISO currency code (e.g., 'USD')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1173,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Globalize currency formatter options."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+globalize@1.5.5/node_modules/@types/globalize/dist/globalize/currency.d.ts",
									"qualifiedName": "\"../globalize\".CurrencyFormatterOptions"
								},
								"name": "CurrencyFormatterOptions",
								"package": "@types/globalize",
								"qualifiedName": "\"../globalize\".CurrencyFormatterOptions"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1174,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/globalize-Initializer/globalize-utils.ts",
									"line": 157,
									"character": 3,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L157"
								}
							],
							"signatures": [
								{
									"id": 1175,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1176,
											"name": "num",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1164,
			"name": "globalizeNumberFormatter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 141,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L141"
				}
			],
			"signatures": [
				{
					"id": 1165,
					"name": "globalizeNumberFormatter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a number formatter with the given options."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A formatter function for numbers."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 141,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L141"
						}
					],
					"parameters": [
						{
							"id": 1166,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Globalize number formatter options."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+globalize@1.5.5/node_modules/@types/globalize/dist/globalize/number.d.ts",
									"qualifiedName": "\"../globalize\".NumberFormatterOptions"
								},
								"name": "NumberFormatterOptions",
								"package": "@types/globalize",
								"qualifiedName": "\"../globalize\".NumberFormatterOptions"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1167,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/globalize-Initializer/globalize-utils.ts",
									"line": 143,
									"character": 3,
									"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L143"
								}
							],
							"signatures": [
								{
									"id": 1168,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1169,
											"name": "num",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1104,
			"name": "hasCustomCalendar",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 306,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L306"
				}
			],
			"signatures": [
				{
					"id": 1105,
					"name": "hasCustomCalendar",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines if the given column has a custom calendar."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column is a date family column and has a custom calendar GUID, false otherwise."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 306,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L306"
						}
					],
					"parameters": [
						{
							"id": 1106,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The chart column to check."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1203,
			"name": "initGlobalize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 122,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L122"
				}
			],
			"signatures": [
				{
					"id": 1204,
					"name": "initGlobalize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Initializes Globalize with CLDR data and sets the default locale."
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 122,
							"character": 29,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L122"
						}
					],
					"parameters": [
						{
							"id": 1205,
							"name": "locale",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The locale to initialize Globalize with (default: 'en-GB')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'en-GB'"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1083,
			"name": "isAttribute",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 173,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L173"
				}
			],
			"signatures": [
				{
					"id": 1084,
					"name": "isAttribute",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines if a specified column is of type 'ATTRIBUTE'."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column's type is "
									},
									{
										"kind": "code",
										"text": "`ATTRIBUTE`"
									},
									{
										"kind": "text",
										"text": "; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 173,
							"character": 27,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L173"
						}
					],
					"parameters": [
						{
							"id": 1085,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1142,
			"name": "isConditionSatisfied",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/conditional-formatting/conditional-formatting.ts",
					"line": 115,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L115"
				}
			],
			"signatures": [
				{
					"id": 1143,
					"name": "isConditionSatisfied",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Evaluates whether the condition defined by the metric is satisfied."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Boolean indicating whether the condition is satisfied."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/conditional-formatting/conditional-formatting.ts",
							"line": 115,
							"character": 36,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L115"
						}
					],
					"parameters": [
						{
							"id": 1144,
							"name": "metric",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The conditional formatting metric info"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 836,
								"name": "ConditionalMetric",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 1145,
							"name": "parameters",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of parameters that may include the parameter needed for ParameterBased comparison."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 852,
									"name": "Parameter",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						},
						{
							"id": 1146,
							"name": "lhsColValue",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The value of the left-hand side column, used in ColumnBased and some ValueBased comparisons."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1147,
							"name": "rhsColValue",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The value of the right-hand side column, used in ColumnBased comparisons."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1080,
			"name": "isDateColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 163,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L163"
				}
			],
			"signatures": [
				{
					"id": 1081,
					"name": "isDateColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if a specified column has a data type of 'DATE' or 'DATE_TIME'."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column's data type is either 'DATE' or 'DATE_TIME'; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 163,
							"character": 28,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L163"
						}
					],
					"parameters": [
						{
							"id": 1082,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1095,
			"name": "isDateFamilyColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 248,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L248"
				}
			],
			"signatures": [
				{
					"id": 1096,
					"name": "isDateFamilyColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines if a specified column belongs to the \"date family,\" meaning it is either a date column\nor a date-related numeric column.\n\nThis function checks if the column is a date column, as determined by "
							},
							{
								"kind": "code",
								"text": "`isDateColumn`"
							},
							{
								"kind": "text",
								"text": ", or a\ndate-related numeric column, as determined by "
							},
							{
								"kind": "code",
								"text": "`isDateNumColumn`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column is either a date column or a date-related numeric column; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 248,
							"character": 34,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L248"
						}
					],
					"parameters": [
						{
							"id": 1097,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1092,
			"name": "isDateNumColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 233,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L233"
				}
			],
			"signatures": [
				{
					"id": 1093,
					"name": "isDateNumColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines if a specified column is both an attribute and has a date-related numeric time bucket.\n\nThis function checks if the column is of type "
							},
							{
								"kind": "code",
								"text": "`ATTRIBUTE`"
							},
							{
								"kind": "text",
								"text": " and has a time bucket that is one of\nthe predefined date-related numeric time buckets, as determined by "
							},
							{
								"kind": "code",
								"text": "`isDateNumTimeBucket`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column is an attribute and has a date-related numeric time bucket; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 233,
							"character": 31,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L233"
						}
					],
					"parameters": [
						{
							"id": 1094,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1086,
			"name": "isDateTimeColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 183,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L183"
				}
			],
			"signatures": [
				{
					"id": 1087,
					"name": "isDateTimeColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if a specified column has a data type of 'DATE_TIME'."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column's data type is "
									},
									{
										"kind": "code",
										"text": "`DATE_TIME`"
									},
									{
										"kind": "text",
										"text": "; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 183,
							"character": 32,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L183"
						}
					],
					"parameters": [
						{
							"id": 1088,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1098,
			"name": "isTimeColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 259,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L259"
				}
			],
			"signatures": [
				{
					"id": 1099,
					"name": "isTimeColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Checks if a specified column has a data type of 'TIME'."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the column's data type is "
									},
									{
										"kind": "code",
										"text": "`TIME`"
									},
									{
										"kind": "text",
										"text": "; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 259,
							"character": 28,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L259"
						}
					],
					"parameters": [
						{
							"id": 1100,
							"name": "col",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The column to check, represented as a "
									},
									{
										"kind": "code",
										"text": "`ChartColumn`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 399,
								"name": "ChartColumn",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1197,
			"name": "loadCurrencyData",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 104,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L104"
				}
			],
			"signatures": [
				{
					"id": 1198,
					"name": "loadCurrencyData",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Loads supplemental currency data for Globalize."
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 104,
							"character": 32,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L104"
						}
					],
					"parameters": [
						{
							"id": 1199,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The supplemental currency data to load."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1200,
			"name": "loadGlobalizeData",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 113,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L113"
				}
			],
			"signatures": [
				{
					"id": 1201,
					"name": "loadGlobalizeData",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Loads CLDR data into Globalize."
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 113,
							"character": 33,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L113"
						}
					],
					"parameters": [
						{
							"id": 1202,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The CLDR data to load."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 981,
			"name": "sanitizeDate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 401,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L401"
				}
			],
			"signatures": [
				{
					"id": 982,
					"name": "sanitizeDate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 401,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L401"
						}
					],
					"parameters": [
						{
							"id": 983,
							"name": "inputDate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 984,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 985,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1206,
			"name": "sanitizeFormat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 190,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L190"
				}
			],
			"signatures": [
				{
					"id": 1207,
					"name": "sanitizeFormat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sanitizes a number format to ensure compatibility with Globalize."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A sanitized format string (e.g., '0.##')."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 190,
							"character": 30,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L190"
						}
					],
					"parameters": [
						{
							"id": 1208,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw format string (e.g., '#.##')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1192,
			"name": "setCurrentCurrencyFormat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 88,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 1193,
					"name": "setCurrentCurrencyFormat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Updates the current currency format."
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 88,
							"character": 40,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L88"
						}
					],
					"parameters": [
						{
							"id": 1194,
							"name": "currencyFormat",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency format to set."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 1187,
			"name": "setGlobalizeLocale",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 71,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L71"
				}
			],
			"signatures": [
				{
					"id": 1188,
					"name": "setGlobalizeLocale",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the current locale for Globalize and updates the global state."
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 71,
							"character": 34,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L71"
						}
					],
					"parameters": [
						{
							"id": 1189,
							"name": "locale",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The locale string to set (e.g., 'en-US')."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 781,
			"name": "useChartContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "react/use-custom-chart-context.tsx",
					"line": 42,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/react/use-custom-chart-context.tsx#L42"
				}
			],
			"signatures": [
				{
					"id": 782,
					"name": "useChartContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A custom hook to manage the Chart Context state and provide necessary\nchart-related functionality."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The chart context values, including initialized state,\nchart model, emitter, event listener, and TSChartContext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "react/use-custom-chart-context.tsx",
							"line": 42,
							"character": 31,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/react/use-custom-chart-context.tsx#L42"
						}
					],
					"parameters": [
						{
							"id": 783,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The custom chart context properties\nto initialize the chart context."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@4.9.5/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 651,
										"name": "CustomChartContextProps",
										"package": "@thoughtspot/ts-chart-sdk"
									},
									{
										"type": "literal",
										"value": "renderChart"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/react/use-custom-chart-types.ts",
							"qualifiedName": "ChartContextProps"
						},
						"name": "ChartContextProps",
						"package": "@thoughtspot/ts-chart-sdk"
					}
				}
			]
		},
		{
			"id": 1111,
			"name": "useQuarterStart",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/date-formatting.ts",
					"line": 347,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L347"
				}
			],
			"signatures": [
				{
					"id": 1112,
					"name": "useQuarterStart",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/date-formatting.ts",
							"line": 347,
							"character": 31,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/date-formatting.ts#L347"
						}
					],
					"parameters": [
						{
							"id": 1113,
							"name": "luxonDate",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 1114,
							"name": "quarterStartMonth",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 1126,
			"name": "validateCfCondition",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/conditional-formatting/conditional-formatting.ts",
					"line": 151,
					"character": 16,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L151"
				}
			],
			"signatures": [
				{
					"id": 1127,
					"name": "validateCfCondition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Validates if the conditional rule is applicable or not."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Boolean indicating if the conditional rule is applicable or not."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/conditional-formatting/conditional-formatting.ts",
							"line": 151,
							"character": 0,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/conditional-formatting/conditional-formatting.ts#L151"
						}
					],
					"parameters": [
						{
							"id": 1128,
							"name": "conditionalMetric",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The conditional rule to be validated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 836,
								"name": "ConditionalMetric",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 1129,
							"name": "index",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The index of the data point to evaluate."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1130,
							"name": "columnId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the column for which to validate the rule."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1131,
							"name": "dataAttr",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data points array containing the data for the chart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39,
								"name": "DataPointsArray",
								"package": "@thoughtspot/ts-chart-sdk"
							}
						},
						{
							"id": 1132,
							"name": "inScopeParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of parameters available for the chart."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 852,
									"name": "Parameter",
									"package": "@thoughtspot/ts-chart-sdk"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 1209,
			"name": "validateNumberFormat",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "utils/globalize-Initializer/globalize-utils.ts",
					"line": 206,
					"character": 13,
					"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L206"
				}
			],
			"signatures": [
				{
					"id": 1210,
					"name": "validateNumberFormat",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Validates if a given number format is compatible with Globalize."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "True if the format is valid; otherwise, false."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "utils/globalize-Initializer/globalize-utils.ts",
							"line": 206,
							"character": 36,
							"url": "https://github.com/thoughtspot/ts-chart-sdk/blob/f477c20/src/utils/globalize-Initializer/globalize-utils.ts#L206"
						}
					],
					"parameters": [
						{
							"id": 1211,
							"name": "format",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw format string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				788,
				916,
				308,
				353,
				324,
				303,
				791,
				349,
				20,
				312,
				865,
				344,
				928,
				809,
				891,
				912,
				921,
				173
			]
		},
		{
			"title": "Classes",
			"children": [
				682
			]
		},
		{
			"title": "Interfaces",
			"children": [
				134,
				483,
				399,
				395,
				286,
				391,
				1001,
				100,
				584,
				610,
				203,
				491,
				466,
				616
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				636,
				642,
				85,
				127,
				784,
				836,
				165,
				932,
				651,
				940,
				795,
				957,
				803,
				3,
				1,
				944,
				852,
				885,
				894,
				899,
				903,
				908,
				952,
				831,
				5,
				827,
				57,
				72,
				170,
				681,
				66,
				297,
				61
			]
		},
		{
			"title": "Variables",
			"children": [
				1053,
				1007,
				1036,
				1061
			]
		},
		{
			"title": "Functions",
			"children": [
				1148,
				1107,
				1154,
				995,
				989,
				1120,
				1177,
				1133,
				778,
				1182,
				1195,
				1089,
				1115,
				1185,
				974,
				1101,
				1159,
				1190,
				1139,
				1136,
				969,
				986,
				977,
				966,
				1170,
				1164,
				1104,
				1203,
				1083,
				1142,
				1080,
				1095,
				1092,
				1086,
				1098,
				1197,
				1200,
				981,
				1206,
				1192,
				1187,
				781,
				1111,
				1126,
				1209
			]
		},
		{
			"title": "Chart Configuration Editor",
			"children": [
				160,
				151
			]
		},
		{
			"title": "Chart Model",
			"children": [
				36,
				33,
				49,
				39,
				43,
				71
			]
		},
		{
			"title": "Chart to ThoughtSpot Events",
			"children": [
				477,
				414,
				475,
				429,
				473,
				461,
				470,
				446,
				444
			]
		},
		{
			"title": "Chart to ThoughtSpot Events / Context Menu",
			"children": [
				453,
				451,
				448
			]
		},
		{
			"title": "Custom action callback mapping with action id/ Axis Menu",
			"children": [
				502
			]
		},
		{
			"title": "Custom action callback mapping with action id/ Context Menu",
			"children": [
				496
			]
		},
		{
			"title": "ThoughtSpot to Chart Events",
			"children": [
				508,
				634,
				621,
				612,
				628,
				630,
				623,
				614,
				582,
				608,
				569,
				575,
				602,
				586,
				521,
				618
			]
		},
		{
			"title": "Visual Properties Editor",
			"children": [
				245,
				231,
				260,
				278,
				223,
				252,
				268,
				212,
				238,
				294,
				285
			]
		}
	],
	"packageName": "@thoughtspot/ts-chart-sdk",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/thoughtspot/visual-embed-sdk/main/static/doc-images/images/TS-Logo-black-no-bg.svg\" width=120 align=\"center\" alt=\"ThoughtSpot\" />\n</p>\n\n<br/>\n\n# ThoughtSpot Charts SDK <br/>\n\nThoughtSpot Charts SDK allows developers to integrate custom charts into ThoughtSpot. Developers can create custom charts in Javascript using charting libraries such as HighCharts and upload them to ThoughtSpot.\n\n## Doc for custom chart examples\n\n-   [Custom Map charts](./example/custom-bar-chart/README.md)\n-   [Custom Bar Charts](./example/custom-bar-chart/README.md)\n\n## ⚠️ Important Information ⚠️\n\n### 🚀 Use "
		},
		{
			"kind": "code",
			"text": "`ts-chart-sdk`"
		},
		{
			"kind": "text",
			"text": " with TypeScript to enable static type checking.\n\n### 📊 See [Custom Bar Chart](./example/custom-bar-chart/) example for the latest update.\n\n---\n\n# Get started\n\nThis tutorial demonstrates how to create a Gantt chart using HighCharts.\n<insert links and fiddle links above>\n\n-   [Highchart demo link](https://www.highcharts.com/demo/gantt/progress-indicator)\n-   [JSFiddle link](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/gantt/demo/progress-indicator)\n\n## Prerequisites\n\nBefore you begin, check for the following requirements:\n\n-   Access to a ThoughtSpot Cloud application instance\n-   A Development Environment (IDE) for building custom charts\n-   Working knowledge of JavaScript or Typescript\n-   Familiarity with charting libraries such as Highcharts\n-   Knowledge of the chart type\n\n## Set up your environment\n\nTo create and test the application, this tutorial uses a Vite project setup.\n\n### Create a new Vite project\n\n1. Open a terminal window and run the following commands:\n\n    "
		},
		{
			"kind": "code",
			"text": "```bash\n    md gantt\n    cd gantt\n    ```"
		},
		{
			"kind": "text",
			"text": "\n\n2. Create a Vite project.\n    "
		},
		{
			"kind": "code",
			"text": "```bash\n    $ npm create vite@latest\n    ```"
		},
		{
			"kind": "text",
			"text": "\n3. Configure the project name and development framework for your chart application. In this tutorial, we will use the Vanilla framework with TypeScript.\n\n    "
		},
		{
			"kind": "code",
			"text": "```bash\n    ✔ Project name: … gantt demo\n    ✔ Package name: … gantt-demo\n    ✔ Select a framework: › Vanilla\n    ✔ Select a variant: › TypeScript\n    ```"
		},
		{
			"kind": "text",
			"text": "\n\n4. Initialize your application.\n\n    "
		},
		{
			"kind": "code",
			"text": "```bash\n    npm install\n    npm run dev\n    ```"
		},
		{
			"kind": "text",
			"text": "\n\n5. Go to the localhost link and check if the following page shows up.\n\n    ![initial-setup](assets/images/initial-setup.png)\n\n### Install Highcharts and lodash\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install --save highcharts lodash\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Install the SDK\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install --save @thoughtspot/ts-chart-sdk\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Render a chart on your local environment\n\nRender a chart in the application created from the preceding steps.\n\nThis tutorial uses the [chart from the Highcharts library](https://www.highcharts.com/demo/gantt/progress-indicator) to create a custom Gantt chart.\n\n### Implement the chart code\n\nThis tutorial uses the implementation code of the Gantt chart from the [Highcharts site](https://www.highcharts.com/demo/gantt/progress-indicator).\n\nTo implement the chart code in your application, complete these steps:\n\n1. To copy the implementation code from the Highcharts library, select a chart type and click **Copy JS Code**.\n2. Paste this code into the "
		},
		{
			"kind": "code",
			"text": "`main.ts`"
		},
		{
			"kind": "text",
			"text": " file in your "
		},
		{
			"kind": "code",
			"text": "`src`"
		},
		{
			"kind": "text",
			"text": " folder.\n3. Import the dependencies for Highcharts and Highcharts Gantt module into your application code as shown in this example:\n\n    "
		},
		{
			"kind": "code",
			"text": "```bash\n    import Highcharts from 'highcharts/es-modules/masters/highcharts.src';\n    import 'highcharts/es-modules/masters/modules/gantt.src';\n    ```"
		},
		{
			"kind": "text",
			"text": "\n\n    Note the order of import.\n\n4. Replace the content of "
		},
		{
			"kind": "code",
			"text": "`index.html`"
		},
		{
			"kind": "text",
			"text": " with the following snippet:\n\n    Note that we have replaced the div id "
		},
		{
			"kind": "code",
			"text": "`app`"
		},
		{
			"kind": "text",
			"text": " with "
		},
		{
			"kind": "code",
			"text": "`container`"
		},
		{
			"kind": "text",
			"text": " because the code copied from Highcharts points to "
		},
		{
			"kind": "code",
			"text": "`container`"
		},
		{
			"kind": "text",
			"text": ".\n\n    "
		},
		{
			"kind": "code",
			"text": "```bash\n    <!DOCTYPE html>\n    <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Gantt Chart Demo</title>\n      </head>\n      <body>\n        <div id=\"container\"></div>\n        <script type=\"module\" src=\"/src/main.ts\"></script>\n      </body>\n    </html>\n    ```"
		},
		{
			"kind": "text",
			"text": "\n\n5. Refresh the application URL and check if the chart imported into your application code is rendered:\n   ![demo-chart-render](assets/images/demo-chart-render.png)\n6. Delete the unwanted files from your project folder\n   The folder structure in your project at this point includes many files as shown in this figure.\n\n    ![folder-structure](assets/images/folder-structure.png)\n\n    You can remove the following files.\n\n    - "
		},
		{
			"kind": "code",
			"text": "`/public/vite.svg`"
		},
		{
			"kind": "text",
			"text": "\n    - "
		},
		{
			"kind": "code",
			"text": "`/src/counter.ts`"
		},
		{
			"kind": "text",
			"text": "\n    - "
		},
		{
			"kind": "code",
			"text": "`/src/typescript.svg`"
		},
		{
			"kind": "text",
			"text": "\n\n## Integrate ThoughtSpot Chart SDK\n\nThe chart imported into your application has static data. To add ThoughtSpot capabilities such as drill, you need to fetch data from your ThoughtSpot application. To add ThoughtSpot capabilities and data to the chart code in your application, integrate ThoughtSpot Chart SDK and complete these steps:\n\n1. [Initialize the Chart Context](#initialize-the-chart-context)\n2. [Create a data model from input data](#Create-a-data-model-from-input-data)\n3. [Plug data into the Highcharts datasets](#plug-data-into-the-highcharts-datasets)\n\n### Initialize the Chart Context\n\nChart Context is the main context object that helps in orchestrating ThoughtSpot APIs to render charts. It also acts as a core central point of all interactions on the charts.\n\nTo initialize the chart context, call "
		},
		{
			"kind": "code",
			"text": "`getChartContext`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nconst init = async () => {\n    const ctx = await getChartContext({\n        getDefaultChartConfig: (chartModel: ChartModel): ChartConfig[] => {\n            const columns = chartModel.columns;\n\n            // Here we assume that the columns are always coming in the\n            // following order.\n            // [Project Name, Task, Start Date, End Date, Completion]\n\n            // TBD: do basic validation here to ensure that the chart is renderable\n            if (columns.length < 4) {\n                // not possible to plot a chart\n                return [];\n            }\n\n            const chartConfig: ChartConfig = {\n                key: 'default',\n                dimensions: [\n                    {\n                        key: 'project-name',\n                        columns: [columns[0]],\n                    },\n                    {\n                        key: 'task',\n                        columns: [columns[1]],\n                    },\n                    {\n                        key: 'start-date',\n                        columns: [columns[2]],\n                    },\n                    {\n                        key: 'end-date',\n                        columns: [columns[3]],\n                    },\n                    {\n                        key: 'completion',\n                        columns: columns[4] ? [columns[4]] : [],\n                    },\n                ],\n            };\n            return [chartConfig];\n        },\n        getQueriesFromChartConfig: (\n            chartConfig: ChartConfig[],\n        ): Array<Query> => {\n            // map all the columns in the config to the query array\n            return chartConfig.map(\n                (config: ChartConfig): Query =>\n                    _.reduce(\n                        config.dimensions,\n                        (acc: Query, dimension) => ({\n                            queryColumns: [\n                                ...acc.queryColumns,\n                                ...dimension.columns,\n                            ],\n                        }),\n                        {\n                            queryColumns: [],\n                        } as Query,\n                    ),\n            );\n        },\n        renderChart: (context) => {},\n    });\n};\n\ninit();\n```"
		},
		{
			"kind": "text",
			"text": "\n\n> NOTE:\n> For more information about the chart context component, refer to the following documentation resources:\n>\n> -   [https://ts-chart-sdk-docs.vercel.app/types/CustomChartContextProps.html](https://ts-chart-sdk-docs.vercel.app/types/CustomChartContextProps.html)\n> -   [https://github.com/thoughtspot/ts-chart-sdk/blob/main/src/main/custom-chart-context.ts#L40](https://github.com/thoughtspot/ts-chart-sdk/blob/main/src/main/custom-chart-context.ts#L40)\n\nThe custom chart context component must include the following mandatory properties to function:\n\n-   ["
		},
		{
			"kind": "code",
			"text": "`getDefaultChartConfig (Doc)`"
		},
		{
			"kind": "text",
			"text": "](<#getDefaultChartConfig-(Doc)>)\n-   ["
		},
		{
			"kind": "code",
			"text": "`getQueriesFromChartConfig (Doc)`"
		},
		{
			"kind": "text",
			"text": "](<#getQueriesFromChartConfig-(Doc)>)\n-   ["
		},
		{
			"kind": "code",
			"text": "`renderChart (Doc)`"
		},
		{
			"kind": "text",
			"text": "](<#getQueriesFromChartConfig-(Doc)>)\n\n#### getDefaultChartConfig (Doc)\n\nThis function takes in a [ChartModel](https://ts-chart-sdk-docs.vercel.app/interfaces/ChartModel.html) object and returns a well-formed point configuration definition.\n\nThe point for the Gantt chart used in this tutorial looks like this:\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\n// Project 1 - Project Name\n{\n    name: 'Start prototype',  // Task\n    start: Date.UTC(2014, 10, 18), // Start Date\n    end: Date.UTC(2014, 10, 25), // End Date\n    completed: {\n        amount: 0.25, // Completion\n    },\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe above data can be represented as a table in CSV format as shown here:\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nProject Name, Task, Start Date, End Date, Completion\n\"Project 1\", \"Start prototype\", \"2014-10-18\", \"2014-10-25\", 0.25\n```"
		},
		{
			"kind": "text",
			"text": "\n\nTo create a Highcharts version of the data set, the above-mentioned headers must be presented as columns from ThoughtSpot. The query on the ThoughtSpot Answer page should have all the above columns to plot a Gantt chart.\n\nEnsure that the "
		},
		{
			"kind": "code",
			"text": "`getDefaultChartConfig`"
		},
		{
			"kind": "text",
			"text": " method is included in chartContext to define the configuration of the columns that are required to map the dataset into the chart. We assume that the order of the column is maintained in the chartModel.\n\nTo render the chart, the default configuration is required.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\ngetDefaultChartConfig: (chartModel: ChartModel): ChartConfig[] => {\n    const columns = chartModel.columns;\n\n    // Here we assume that the columns are always coming in the\n    // following order.\n    // [Project Name, Task, Start Date, End Date, Completion]\n\n    // TBD: do basic validation here to ensure that the chart is renderable\n    if (columns.length < 4) {\n        // not possible to plot a chart\n        return [];\n    }\n\n    const chartConfig: ChartConfig = {\n        key: 'default',\n        dimensions: [\n            {\n                key: 'project-name',\n                columns: [columns[0]],\n            },\n            {\n                key: 'task',\n                columns: [columns[1]],\n            },\n            {\n                key: 'start-date',\n                columns: [columns[2]],\n            },\n            {\n                key: 'end-date',\n                columns: [columns[3]],\n            },\n            {\n                key: 'completion',\n                columns: columns[4] ? [columns[4]] : [],\n            },\n        ],\n    };\n    return [chartConfig];\n},\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<!--\n> There is a better way to be able to configure the dimensions and columns in dimensions. But that is relatively a more advanced topic and not required for this demo. You can use the link below to look into the details of the same.\n>\n\n[TBD: Link to the Custom Chart Configuration Definition]\n-->\n\n#### getQueriesFromChartConfig (Doc)\n\nThis method defines the data query that is required to fetch the data from ThoughtSpot to render the chart. For most use cases, you do not require the data outside of the columns listed in your chart.\n\nThis example maps all the columns in the configuration as an array of columns in the arguments.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\ngetQueriesFromChartConfig: (\n    chartConfig: ChartConfig[],\n): Array<Query> => {\n    // map all the columns in the config to the query array\n    return chartConfig.map(\n        (config: ChartConfig): Query =>\n            _.reduce(\n                config.dimensions,\n                (acc: Query, dimension) => ({\n                    queryColumns: [\n                        ...acc.queryColumns,\n                        ...dimension.columns,\n                    ],\n                }),\n                {\n                    queryColumns: [],\n                } as Query,\n            ),\n    );\n},\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### renderChart (Doc)\n\nThis "
		},
		{
			"kind": "code",
			"text": "`renderChart (Doc)`"
		},
		{
			"kind": "text",
			"text": " function is required to render the chart implemented in your code. This function ensures that every time "
		},
		{
			"kind": "code",
			"text": "`chartContext`"
		},
		{
			"kind": "text",
			"text": " tries to re-render the chart due to the changes in data or chart model, the chart rendered in your application is updated.\n\n> **Note**:\n> You can control render and re-render by implementing more granular control for the updates on data, visual props, or chart model.\n>\n> But we haven't yet implemented this. So let's proceed and implement this.\n\n#### Implement the renderChart function\n\nTo implement renderChart, complete the following steps:\n\n1. Create a function and move all the Highchart code inside the "
		},
		{
			"kind": "code",
			"text": "`renderChart`"
		},
		{
			"kind": "text",
			"text": " function.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nconst renderChart = (ctx) => {\n    // THE CHART\n    Highcharts.ganttChart('container', {\n        //....\n    } as any);\n    return Promise.resolve();\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\n2. Implement the "
		},
		{
			"kind": "code",
			"text": "`renderChart`"
		},
		{
			"kind": "text",
			"text": " function in "
		},
		{
			"kind": "code",
			"text": "`getChartContext`"
		},
		{
			"kind": "text",
			"text": " as shown in this example:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\n...\n renderChart: (context) => renderChart(context),\n...\n```"
		},
		{
			"kind": "text",
			"text": "\n\nAt this point, you will notice that the chart is gone on the link.\n\n3. Wait for the chart to connect to the TS application.\n4. Open the console log and check if you see the following logs:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\n[vite] connecting...\n[vite] connected.\nChart Context: initialization start\n```"
		},
		{
			"kind": "text",
			"text": "\n\n5. Run your application and test the chart implementation in the Playground.\n\n#### Run the chart in the Playground\n\nTo run the chart and test your implementation, you need a Playground.\n\n1. Open the following link to test your implementation with predefined data sets:\n\n[https://ts-chart-playground.vercel.app/](https://ts-chart-playground.vercel.app/)\n\n> **NOTE**\n>\n> You can check out the playground code on the GitHub repository to your local environment and modify the data set to test your charts effectively.\n\n2. Add the following details as shown in the following example:\n\n-   App Url : "
		},
		{
			"kind": "code",
			"text": "`<your localhost url with port>`"
		},
		{
			"kind": "text",
			"text": "\n-   Chart Model: "
		},
		{
			"kind": "code",
			"text": "`Gantt - 3 Attribute - 2 Date - 1 Measure`"
		},
		{
			"kind": "text",
			"text": "\n\n![Playground](assets/images/playground.png)\n\nIn the next step, you need to bring your data into the chart.\n\n## Create a Data Model from input data\n\nThe data model is unique to every chart. It defines how each point will be plotted on the chart.\n\nFor the Gantt chart, this tutorial uses the following format for data points:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\n{\n    name: 'Start prototype',  // Task\n    start: Date.UTC(2014, 10, 18), // Start Date\n    end: Date.UTC(2014, 10, 25), // End Date\n    completed: {\n        amount: 0.25, // Completion\n    },\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nHowever, the data retrieved from the chart model includes an array of column types as shown in this example:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\n// inside chart model\n{\n    ...\n    \"data\": [\n        {\n            \"data\": [\n                {\n                    \"columnId\": \"79344559-4c71-45c6-be33-450316eab54d\",\n                    \"columnDataType\": \"CHAR\",\n                    \"dataValue\": [\n                        \"Project 1\",\n                        \"Project 1\",\n                        \"Project 1\",\n                        \"Project 1\",\n                        \"Project 2\",\n                        \"Project 2\",\n                        \"Project 2\",\n                        \"Project 2\"\n                    ]\n                },\n                {\n                    \"columnId\": \"bce26c20-1335-4357-9d3f-b15a6a27237d\",\n                    \"columnDataType\": \"CHAR\",\n                    \"dataValue\": [\n                        \"Start prototype\",\n                        \"Test prototype\",\n                        \"Develop\",\n                        \"Run acceptance test\",\n                        \"Start prototype\",\n                        \"Test prototype\",\n                        \"Develop\",\n                        \"Run acceptance test\"\n                    ]\n                },\n                {\n                    \"columnId\": \"cdd0329d-9ae6-41d2-b036-aa565eb18bc9\",\n                    \"columnDataType\": \"CHAR\",\n                    \"dataValue\": [\n                        1413570600000,\n                        1414348200000,\n                        1413743400000,\n                        1414002600000,\n                        1413570600000,\n                        1414348200000,\n                        1413743400000,\n                        1414002600000\n                    ]\n                },\n                {\n                    \"columnId\": \"59a5893c-f487-46f6-ab08-8cd7672c283d\",\n                    \"columnDataType\": \"CHAR\",\n                    \"dataValue\": [\n                        1414175400000,\n                        1414521000000,\n                        1414175400000,\n                        1414261800000,\n                        1414175400000,\n                        1414521000000,\n                        1414175400000,\n                        1414261800000\n                    ]\n                },\n                {\n                    \"columnId\": \"69a5893c-f487-46f6-ab08-8cd7672c283d\",\n                    \"columnDataType\": \"FLOAT\",\n                    \"dataValue\": [\n                        0.25,\n                        null,\n                        null,\n                        null,\n                        0.4,\n                        null,\n                        null,\n                        null\n                    ]\n                },\n                {\n                    \"columnId\": \"79a5893c-f487-46f6-ab08-8cd7672c283d\",\n                    \"columnDataType\": \"CHAR\",\n                    \"dataValue\": [\n                        null,\n                        \"Develop\",\n                        \"Start prototype\",\n                        \"Test prototype\",\n                        null,\n                        \"Develop\",\n                        \"Start prototype\",\n                        \"Test prototype\"\n                    ]\n                }\n            ]\n        }\n    ],\n\t\t...\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can transform the above structure to the point and series format that Highcharts can understand and interpret. Use the following code snippet to create a data model and plug data values into the chart.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nconst getDataModel = (chartModel: any) => {\n    const dataArr = chartModel.data[0].data;\n\n    // create point from data\n    const points = dataArr[0].dataValue.map((_val: string, idx: number) => {\n        return {\n            id: `${dataArr[0].dataValue[idx]} ${dataArr[1].dataValue[idx]}`,\n            parent: dataArr[0].dataValue[idx],\n            name: dataArr[1].dataValue[idx],\n            start: new Date(dataArr[2].dataValue[idx]).getTime(),\n            end: new Date(dataArr[3].dataValue[idx]).getTime(),\n            completed: {\n                amount: dataArr[4].dataValue[idx],\n            },\n            dependency: `${dataArr[0].dataValue[idx]} ${dataArr[5].dataValue[idx]}`,\n        };\n    });\n\n    // create projects from points & data\n    const projects = _.uniq(dataArr[0].dataValue);\n    const dataSeries = projects.map((project) => {\n        const filteredPoints = points.filter(\n            (point: any) => point.parent === project,\n        );\n        return {\n            name: project,\n            data: [\n                ...filteredPoints,\n                {\n                    id: project,\n                    name: project,\n                },\n            ],\n        };\n    });\n\n    // get max and min date\n    const maxDate = _.max([...dataArr[2].dataValue, ...dataArr[2].dataValue]);\n    const minDate = _.min([...dataArr[2].dataValue, ...dataArr[2].dataValue]);\n\n    return {\n        dataSeries,\n        maxDate,\n        minDate,\n    };\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Plug data into the Highcharts datasets\n\nUse the data model created from the above function and plug the values into the Highchart configuration to render the chart.\n\n1. Create a data model object.  \n   In your "
		},
		{
			"kind": "code",
			"text": "`renderChart`"
		},
		{
			"kind": "text",
			"text": " code, add the following line:\n\n    "
		},
		{
			"kind": "code",
			"text": "```jsx\n    const dataModel = getDataModel(chartModel);\n    ```"
		},
		{
			"kind": "text",
			"text": "\n\n2. Replace X Axis min and max values.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nxAxis: {\n    min: dataModel.minDate,\n    max: dataModel.maxDate,\n},\n```"
		},
		{
			"kind": "text",
			"text": "\n\n3. Replace the series.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nseries: dataModel.dataSeries,\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe chart implemented in your code now shows up on the playground with the data values you just plugged in.\n\nThe following example shows the entire chart code for the Gantt chart implementation described in this tutorial:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\n/* eslint-disable simple-import-sort/imports */\nimport {\n    ChartConfig,\n    ChartModel,\n    ColumnType,\n    Query,\n    getChartContext,\n} from '@thoughtspot/ts-chart-sdk';\nimport Highcharts from 'highcharts/es-modules/masters/highcharts.src';\nimport 'highcharts/es-modules/masters/modules/gantt.src';\nimport _ from 'lodash';\n\nconst getDataModel = (chartModel: any) => {\n    const dataArr = chartModel.data[0].data;\n\n    // create point from data\n    const points = dataArr[0].dataValue.map((_val: string, idx: number) => {\n        return {\n            id: `${dataArr[0].dataValue[idx]} ${dataArr[1].dataValue[idx]}`,\n            parent: dataArr[0].dataValue[idx],\n            name: dataArr[1].dataValue[idx],\n            start: new Date(dataArr[2].dataValue[idx]).getTime(),\n            end: new Date(dataArr[3].dataValue[idx]).getTime(),\n            completed: {\n                amount: dataArr[4].dataValue[idx],\n            },\n            dependency: `${dataArr[0].dataValue[idx]} ${dataArr[5].dataValue[idx]}`,\n        };\n    });\n\n    // create projects from points & data\n    const projects = _.uniq(dataArr[0].dataValue);\n    const dataSeries = projects.map((project) => {\n        const filteredPoints = points.filter(\n            (point: any) => point.parent === project,\n        );\n        return {\n            name: project,\n            data: [\n                ...filteredPoints,\n                {\n                    id: project,\n                    name: project,\n                },\n            ],\n        };\n    });\n\n    // get max and min date\n    const maxDate = _.max([...dataArr[2].dataValue, ...dataArr[2].dataValue]);\n    const minDate = _.min([...dataArr[2].dataValue, ...dataArr[2].dataValue]);\n\n    return {\n        dataSeries,\n        maxDate,\n        minDate,\n    };\n};\n\nconst renderChart = (ctx: any) => {\n    const chartModel = ctx.getChartModel();\n    console.log('chartModel:', chartModel);\n    console.log('data:', chartModel.data);\n\n    const dataModel = getDataModel(chartModel);\n\n    console.log('dataModel:', dataModel);\n\n    // THE CHART\n    Highcharts.ganttChart('container', {\n        title: {\n            text: 'Gantt Chart with Progress Indicators',\n            align: 'left',\n        },\n\n        xAxis: {\n            min: dataModel.minDate,\n            max: dataModel.maxDate,\n        },\n\n        accessibility: {\n            point: {\n                descriptionFormat:\n                    '{yCategory}. ' +\n                    '{#if completed}Task {(multiply completed.amount 100):.1f}% completed. {/if}' +\n                    'Start {x:%Y-%m-%d}, end {x2:%Y-%m-%d}.',\n            },\n        },\n\n        lang: {\n            accessibility: {\n                axis: {\n                    xAxisDescriptionPlural:\n                        'The chart has a two-part X axis showing time in both week numbers and days.',\n                },\n            },\n        },\n\n        series: dataModel.dataSeries,\n    } as any);\n    return Promise.resolve();\n};\n\nconst init = async () => {\n    const ctx = await getChartContext({\n        getDefaultChartConfig: (chartModel: ChartModel): ChartConfig[] => {\n            const columns = chartModel.columns;\n\n            // Here we assume that the columns are always coming in the\n            // following order.\n            // [Project Name, Task, Start Date, End Date, Completion]\n\n            // TBD: do basic validation here to ensure that the chart is renderable\n            if (columns.length < 4) {\n                // not possible to plot a chart\n                return [];\n            }\n\n            const chartConfig: ChartConfig = {\n                key: 'default',\n                dimensions: [\n                    {\n                        key: 'project-name',\n                        columns: [columns[0]],\n                    },\n                    {\n                        key: 'task',\n                        columns: [columns[1]],\n                    },\n                    {\n                        key: 'start-date',\n                        columns: [columns[2]],\n                    },\n                    {\n                        key: 'end-date',\n                        columns: [columns[3]],\n                    },\n                    {\n                        key: 'completion',\n                        columns: columns[4] ? [columns[4]] : [],\n                    },\n                ],\n            };\n            return [chartConfig];\n        },\n        getQueriesFromChartConfig: (\n            chartConfig: ChartConfig[],\n        ): Array<Query> => {\n            // map all the columns in the config to the query array\n            return chartConfig.map(\n                (config: ChartConfig): Query =>\n                    _.reduce(\n                        config.dimensions,\n                        (acc: Query, dimension) => ({\n                            queryColumns: [\n                                ...acc.queryColumns,\n                                ...dimension.columns,\n                            ],\n                        }),\n                        {\n                            queryColumns: [],\n                        } as Query,\n                    ),\n            );\n        },\n        renderChart: (context) => renderChart(context),\n    });\n};\n\ninit();\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Deploy your chart\n\nIf the chart creation is successful, you can host it on a server and make it available for use:\n\nTo deploy your charts, you can use Vercel, Netlify, or any server that can render an HTML page. For information, see <a href=\"https://vercel.com/docs/frameworks/vite\" target=\"_blank\">Vite documentation</a>.\n\nTo deploy the chart on a test domain in Vercel, install <a href=\"https://vercel.com/docs/cli\" target=\"_blank\">Vercel CLI</a> and run the following command:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nvercel;\n```"
		},
		{
			"kind": "text",
			"text": "\n\nFor more information about Vercel deployment, see <a href=\"https://vercel.com/docs/getting-started-with-vercel\" target=\"_blank\">Vercel documentation</a>.\n\n### Content Security Policy Overrides\n\nTo allow the use of Vercel application content in Thoughtspot, add the Vercel domain URL to the CSP allow-list. For more information, see the <a href=\"https://developers.thoughtspot.com/docs/?pageid=security-settings\" target=\"_blank\">Security settings section in ThoughtSpot documentation</a>.\n\n## Useful URLs\n\n### API references\n\n-   Check out [ts-charts-sdk docs](https://ts-chart-sdk-docs.vercel.app/) to get API reference.\n\n### Test framework\n\n-   Open [Playground](https://ts-chart-playground.vercel.app/) to play with ts-chart-sdk with mock chartModel.\n\n### Code Walkthrough\n\n-   Play [demo](https://drive.google.com/drive/u/0/folders/1DbfiT1VP7j4SqhiCtM2JksTeIjbkI8h3) to get a viedo demo of code walkthrough and custom gantt-chart implementation.\n\n## FAQ\n\n#### How to save some chart specific state after client have made some changes in charts?\n\nYou can use "
		},
		{
			"kind": "code",
			"text": "`ChartToTSEvent.UpdateVisualProps`"
		},
		{
			"kind": "text",
			"text": " eventType inside "
		},
		{
			"kind": "code",
			"text": "`ctx.emitEvent()`"
		},
		{
			"kind": "text",
			"text": ". Since the payload type for this event is "
		},
		{
			"kind": "code",
			"text": "`unkown`"
		},
		{
			"kind": "text",
			"text": " you can just add a key value pair naming "
		},
		{
			"kind": "code",
			"text": "`clientState`"
		},
		{
			"kind": "text",
			"text": ".\n\n**Sample** -\n\n"
		},
		{
			"kind": "code",
			"text": "```js\nctx.emitEvent(ChartTOTSEvent.UpdateVisualProps,{\n    visualProps:{\n        clientState:\"<req_state_in_string_format>\"\n        ...rest_of_visualProp\n    }\n})\n```"
		},
		{
			"kind": "text",
			"text": "\n\n-   NOTE: client State currently support only string data type. To use it with json object you can use "
		},
		{
			"kind": "code",
			"text": "`JSON.stringify(somelocalstate)`"
		},
		{
			"kind": "text",
			"text": "\n\n#### Why my chart is getting re render in an infinte loop?\n\nProbably you are implementing "
		},
		{
			"kind": "code",
			"text": "`update client state`"
		},
		{
			"kind": "text",
			"text": " logic inside the the "
		},
		{
			"kind": "code",
			"text": "`render`"
		},
		{
			"kind": "text",
			"text": " function of "
		},
		{
			"kind": "code",
			"text": "`getChartContext`"
		},
		{
			"kind": "text",
			"text": ". Since it "
		},
		{
			"kind": "code",
			"text": "`render`"
		},
		{
			"kind": "text",
			"text": " will be calling "
		},
		{
			"kind": "code",
			"text": "`update client state`"
		},
		{
			"kind": "text",
			"text": " logic and this logic might again cause "
		},
		{
			"kind": "code",
			"text": "`render`"
		},
		{
			"kind": "text",
			"text": " this will cause a cyclic call of "
		},
		{
			"kind": "code",
			"text": "`render`"
		},
		{
			"kind": "text",
			"text": ". Hence,it is advised not to implement it inside "
		},
		{
			"kind": "code",
			"text": "`render`"
		},
		{
			"kind": "text",
			"text": " function.\n\n> NOTE:\n> This can be called inside render function just that to avoid having an infinite loop clientState updates should be handled by chart developer properly.\n\n#### How to add dynamic config for visualPorpEditorDefintion?\n\nSince in our previous implementation of "
		},
		{
			"kind": "code",
			"text": "`visualPropEditorDefintion`"
		},
		{
			"kind": "text",
			"text": " we provided this as an static object of type "
		},
		{
			"kind": "code",
			"text": "`VisualPropEditorDefinition`"
		},
		{
			"kind": "text",
			"text": " but with the resent update this is converted function of type "
		},
		{
			"kind": "code",
			"text": "`VisualEditorDefinitonSetter`"
		},
		{
			"kind": "text",
			"text": " along with "
		},
		{
			"kind": "code",
			"text": "`VisualEditorDefintion`"
		},
		{
			"kind": "text",
			"text": ". So currently you can provide static config or dynamic config based on use case.\n\n#### Only 1000 points are getting fetched for my query even though there are more results. How to increase that?\n\nIn "
		},
		{
			"kind": "code",
			"text": "`getQueriesFromChartConfig`"
		},
		{
			"kind": "text",
			"text": " along with "
		},
		{
			"kind": "code",
			"text": "`QueryColumn`"
		},
		{
			"kind": "text",
			"text": " you can provide additional optional key "
		},
		{
			"kind": "code",
			"text": "`queryParams`"
		},
		{
			"kind": "text",
			"text": ". In "
		},
		{
			"kind": "code",
			"text": "`queryParams`"
		},
		{
			"kind": "text",
			"text": " you can provide "
		},
		{
			"kind": "code",
			"text": "`size`"
		},
		{
			"kind": "text",
			"text": " to deal with the number of data points that need to fetched. Also there is hard limit of 100K data points to be fetched from the backend.\n\n<br/>\n\nThoughtSpot Chart SDK, © ThoughtSpot, Inc. 2023"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "Maybe"
		},
		"2": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "T"
		},
		"3": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "InputMaybe"
		},
		"4": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "T"
		},
		"5": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "Scalars"
		},
		"6": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"7": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.ID"
		},
		"8": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.String"
		},
		"9": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.Boolean"
		},
		"10": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.Int"
		},
		"11": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.Float"
		},
		"12": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.FileUpload"
		},
		"13": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.GUID"
		},
		"14": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.JSON"
		},
		"15": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"16": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.__index"
		},
		"18": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.JSONObject"
		},
		"19": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.Long"
		},
		"20": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature"
		},
		"21": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.X_AXIS_LABEL"
		},
		"22": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.X_AXIS_TITLE"
		},
		"23": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.Y_AXIS_LABEL"
		},
		"24": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.Y_AXIS_TITLE"
		},
		"25": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.TOOLTIP"
		},
		"26": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.SCATTER_CHART"
		},
		"27": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.PIE_CHART"
		},
		"28": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.LINE_CHART"
		},
		"29": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.COLUMN_CHART"
		},
		"30": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.BAR_CHART"
		},
		"31": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.AREA_CHART"
		},
		"32": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "CustomizableChartFeature.TAIL_FEATURE"
		},
		"33": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartConfigDimension"
		},
		"34": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartConfigDimension.key"
		},
		"35": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartConfigDimension.columns"
		},
		"36": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartConfig"
		},
		"37": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartConfig.key"
		},
		"38": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartConfig.dimensions"
		},
		"39": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DataPointsArray"
		},
		"40": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"41": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.columns"
		},
		"42": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.dataValue"
		},
		"43": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "QueryData"
		},
		"44": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"45": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.data"
		},
		"48": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.totalRowCount"
		},
		"49": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartModel"
		},
		"50": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartModel.columns"
		},
		"51": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartModel.data"
		},
		"52": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartModel.sortInfo"
		},
		"53": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartModel.visualProps"
		},
		"54": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartModel.config"
		},
		"55": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"56": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.chartConfig"
		},
		"57": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "SuccessValidationResponse"
		},
		"58": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"59": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.chartConfigEditorDefinition"
		},
		"60": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.visualPropEditorDefinition"
		},
		"61": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "VisualPropError"
		},
		"62": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"63": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.propElementKey"
		},
		"64": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.propElementType"
		},
		"65": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.value"
		},
		"66": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ValidationResponse"
		},
		"67": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"68": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.isValid"
		},
		"69": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.validationErrorMessage"
		},
		"70": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.visualPropError"
		},
		"71": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "VisualProps"
		},
		"72": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "TSFontFace"
		},
		"73": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"74": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.guid"
		},
		"75": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.family"
		},
		"76": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.format"
		},
		"77": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.url"
		},
		"78": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.weight"
		},
		"79": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.style"
		},
		"80": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.size"
		},
		"81": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.unicodeRange"
		},
		"82": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.variant"
		},
		"83": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.stretch"
		},
		"84": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.color"
		},
		"85": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartSdkCustomStylingConfig"
		},
		"86": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"87": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.appBackground"
		},
		"88": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"89": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.color"
		},
		"90": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.appPanelColor"
		},
		"91": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"92": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.color"
		},
		"93": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.chartColorPalettes"
		},
		"94": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"95": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.colors"
		},
		"96": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.numColorPalettes"
		},
		"97": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.disableColorRotation"
		},
		"98": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.chartFeatureToFontGuid"
		},
		"99": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.fontFaces"
		},
		"100": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats"
		},
		"101": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATE_SHORT"
		},
		"102": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATE_SHORT_2_DIGIT_YEAR"
		},
		"103": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATE_SHORT_WITH_HOUR"
		},
		"104": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATE_SHORT_WITH_HOUR_WITHOUT_YEAR"
		},
		"105": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATE_SHORT_WITH_HOUR_24"
		},
		"106": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATE_SHORT_WITH_HOUR_24_WITHOUT_YEAR"
		},
		"107": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_SHORT"
		},
		"108": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_SHORT_WITHOUT_YEAR"
		},
		"109": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_24_SHORT"
		},
		"110": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_24_SHORT_WITH_MILLIS"
		},
		"111": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_24_SHORT_WITH_MILLIS_WITHOUT_YEAR"
		},
		"112": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_SHORT_WITH_SECONDS"
		},
		"113": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_SHORT_WITH_SECONDS_WITHOUT_YEAR"
		},
		"114": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_SHORT_WITH_MILLIS"
		},
		"115": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_SHORT_WITH_MILLIS_WITHOUT_YEAR"
		},
		"116": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.QUARTER_WITH_YEAR"
		},
		"117": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.QUARTER_WITH_2_DIGIT_YEAR"
		},
		"118": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DEFAULT_TIME_FORMAT"
		},
		"119": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.MONTH_WITH_YEAR"
		},
		"120": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.MONTH_WITH_DAY_AND_YEAR"
		},
		"121": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.MONTH_WITH_2_DIGIT_YEAR"
		},
		"122": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DAY_WITH_MONTH"
		},
		"123": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DAY_WITH_MONTH_NUM"
		},
		"124": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.QUARTER"
		},
		"125": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.MONTH_ONLY"
		},
		"126": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "DateFormats.DATETIME_WITH_SHORT_OFFSET"
		},
		"127": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "ChartSdkDateFormatsConfig"
		},
		"128": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"129": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.tsLocaleBasedDateFormats"
		},
		"130": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.tsLocaleBasedStringsFormats"
		},
		"131": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.tsDateConstants"
		},
		"132": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.tsDefinedCustomCalenders"
		},
		"133": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.defaultDataSourceId"
		},
		"134": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig"
		},
		"135": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig.styleConfig"
		},
		"136": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig.dateFormatsConfig"
		},
		"137": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig.appOptions"
		},
		"138": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"139": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.isMobile"
		},
		"140": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.isPrintMode"
		},
		"141": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.isLiveboardContext"
		},
		"142": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.isDebugMode"
		},
		"143": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig.localeOptions"
		},
		"144": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type"
		},
		"145": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.locale"
		},
		"146": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.quarterStartMonth"
		},
		"147": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "__type.sessionTimezone"
		},
		"148": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig.appUrl"
		},
		"150": {
			"sourceFileName": "src/types/common.types.ts",
			"qualifiedName": "AppConfig.chartAppAccessToken"
		},
		"151": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection"
		},
		"152": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.key"
		},
		"153": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.label"
		},
		"154": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.maxColumnCount"
		},
		"155": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.allowMeasureColumns"
		},
		"156": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.allowAttributeColumns"
		},
		"158": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.allowMeasureNameColumn"
		},
		"159": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigSection.allowMeasureValueColumn"
		},
		"160": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigEditorDefinition"
		},
		"161": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigEditorDefinition.key"
		},
		"162": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigEditorDefinition.label"
		},
		"163": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigEditorDefinition.descriptionText"
		},
		"164": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ChartConfigEditorDefinition.columnSections"
		},
		"165": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ConfigEditorDefinitionSetter"
		},
		"166": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "__type"
		},
		"167": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "__type"
		},
		"168": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "currentState"
		},
		"169": {
			"sourceFileName": "src/types/configurator.types.ts",
			"qualifiedName": "ctx"
		},
		"170": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TSTooltipConfig"
		},
		"171": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type"
		},
		"172": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type.columnIds"
		},
		"173": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys"
		},
		"174": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_ALL_LABELS"
		},
		"175": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.TOO_MANY_LABELS"
		},
		"176": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.MAP_TILE_LABEL"
		},
		"177": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.ENABLE_MARKERS"
		},
		"178": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_REGRESSION_LINE"
		},
		"179": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.X_AXIS_GRID_LINE"
		},
		"180": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.Y_AXIS_GRID_LINE"
		},
		"181": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.MAX_DATA_POINTS"
		},
		"182": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.HIGH_CARDINALITY_BATCH_SIZE_DISABLED"
		},
		"183": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.HIGH_CARDINALITY_BATCH_SIZE_LIMIT"
		},
		"184": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.CHART_CUSTOMIZE"
		},
		"185": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SELECT_AN_AREA"
		},
		"186": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.RESET_ZOOM"
		},
		"187": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.EDIT_TOOLTIP"
		},
		"188": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.DONT_SHOW"
		},
		"189": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_GAP"
		},
		"190": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_AS_ZERO"
		},
		"191": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.HANDLE_MISSING_VALUES"
		},
		"192": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_NULL_AS_ZERO"
		},
		"193": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.EXCLUDE_NULL_VALUES"
		},
		"194": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.COLUMN_CUSTOMIZE"
		},
		"195": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_TOTAL_LABELS"
		},
		"196": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_DETAILED_LABELS"
		},
		"197": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_DATA_LABELS"
		},
		"198": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.SHOW_AXIS_AS_PERCENT"
		},
		"199": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.RIGHT_LEGEND"
		},
		"200": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.LEFT_LEGEND"
		},
		"201": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.TOP_LEGEND"
		},
		"202": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropComponentTranslationKeys.BOTTOM_LEGEND"
		},
		"203": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation"
		},
		"204": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.required"
		},
		"205": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.requiredError"
		},
		"206": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.regex"
		},
		"207": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.regexError"
		},
		"208": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.minLength"
		},
		"209": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.minLengthError"
		},
		"210": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.range"
		},
		"211": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "InputValidation.rangeError"
		},
		"212": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail"
		},
		"213": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.type"
		},
		"214": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.key"
		},
		"215": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.label"
		},
		"216": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.password"
		},
		"217": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.multiline"
		},
		"218": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.placeholder"
		},
		"219": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.defaultValue"
		},
		"220": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.inputValidation"
		},
		"221": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.disabled"
		},
		"222": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "TextInputFormDetail.labelTranslation"
		},
		"223": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail"
		},
		"224": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.type"
		},
		"225": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.key"
		},
		"226": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.label"
		},
		"227": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.defaultValue"
		},
		"228": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.inputValidation"
		},
		"229": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.disabled"
		},
		"230": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NumberInputFormDetail.labelTranslation"
		},
		"231": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail"
		},
		"232": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail.type"
		},
		"233": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail.key"
		},
		"234": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail.label"
		},
		"235": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail.selectorType"
		},
		"236": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail.defaultValue"
		},
		"237": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColorPickerFormDetail.labelTranslation"
		},
		"238": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail"
		},
		"239": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail.type"
		},
		"240": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail.key"
		},
		"241": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail.label"
		},
		"242": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail.defaultValue"
		},
		"243": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail.disabled"
		},
		"244": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ToggleFormDetail.labelTranslation"
		},
		"245": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail"
		},
		"246": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail.type"
		},
		"247": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail.key"
		},
		"248": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail.label"
		},
		"249": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail.defaultValue"
		},
		"250": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail.disabled"
		},
		"251": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "CheckboxFormDetail.labelTranslation"
		},
		"252": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail"
		},
		"253": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.type"
		},
		"254": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.key"
		},
		"255": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.label"
		},
		"256": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.defaultValue"
		},
		"257": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.values"
		},
		"258": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.disabled"
		},
		"259": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "RadioButtonFormDetail.labelTranslation"
		},
		"260": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail"
		},
		"261": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.type"
		},
		"262": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.key"
		},
		"263": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.label"
		},
		"264": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.defaultValue"
		},
		"265": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.values"
		},
		"266": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.disabled"
		},
		"267": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "DropDownFormDetail.labelTranslation"
		},
		"268": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section"
		},
		"269": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.type"
		},
		"270": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.key"
		},
		"271": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.label"
		},
		"272": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.children"
		},
		"273": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.alignment"
		},
		"274": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.layoutType"
		},
		"275": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.disabled"
		},
		"276": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.isAccordianExpanded"
		},
		"277": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "Section.labelTranslation"
		},
		"278": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip"
		},
		"279": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip.type"
		},
		"280": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip.key"
		},
		"281": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip.defaultValue"
		},
		"282": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip.label"
		},
		"283": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip.disabled"
		},
		"284": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "NativeEditToolTip.labelTranslation"
		},
		"285": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "PropElement"
		},
		"286": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColumnProp"
		},
		"287": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColumnProp.type"
		},
		"288": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ColumnProp.columnSettingsDefinition"
		},
		"289": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type"
		},
		"290": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type.__index"
		},
		"292": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type"
		},
		"293": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type.elements"
		},
		"294": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropEditorDefinition"
		},
		"295": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropEditorDefinition.elements"
		},
		"296": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualPropEditorDefinition.columnsVizPropDefinition"
		},
		"297": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "VisualEditorDefinitionSetter"
		},
		"298": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "__type"
		},
		"300": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "currentState"
		},
		"301": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "ctx"
		},
		"302": {
			"sourceFileName": "src/types/visual-prop.types.ts",
			"qualifiedName": "activeColumnId"
		},
		"303": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnType"
		},
		"304": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnType.UNKNOWN"
		},
		"305": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnType.MEASURE"
		},
		"306": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnType.ATTRIBUTE"
		},
		"307": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnType.VIRTUAL"
		},
		"308": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartSpecificColumnType"
		},
		"309": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartSpecificColumnType.UNKNOWN"
		},
		"310": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartSpecificColumnType.MEASURE_NAMES"
		},
		"311": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartSpecificColumnType.MEASURE_VALUES"
		},
		"312": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType"
		},
		"313": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.UNKNOWN"
		},
		"314": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.BOOL"
		},
		"315": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.CHAR"
		},
		"316": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.INT32"
		},
		"317": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.INT64"
		},
		"318": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.FLOAT"
		},
		"319": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.DOUBLE"
		},
		"320": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.DATE"
		},
		"321": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.DATE_TIME"
		},
		"322": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.TIME"
		},
		"323": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "DataType.MAX_TYPE"
		},
		"324": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket"
		},
		"325": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.NO_BUCKET"
		},
		"326": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.DAILY"
		},
		"327": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.WEEKLY"
		},
		"328": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.MONTHLY"
		},
		"329": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.QUARTERLY"
		},
		"330": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.YEARLY"
		},
		"331": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.HOURLY"
		},
		"332": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.AUTO"
		},
		"333": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.HOUR_OF_DAY"
		},
		"334": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.DAY_OF_WEEK"
		},
		"335": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.DAY_OF_MONTH"
		},
		"336": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.DAY_OF_QUARTER"
		},
		"337": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.DAY_OF_YEAR"
		},
		"338": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.WEEK_OF_MONTH"
		},
		"339": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.WEEK_OF_QUARTER"
		},
		"340": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.WEEK_OF_YEAR"
		},
		"341": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.MONTH_OF_QUARTER"
		},
		"342": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.MONTH_OF_YEAR"
		},
		"343": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnTimeBucket.QUARTER_OF_YEAR"
		},
		"344": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "FormatType"
		},
		"345": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "FormatType.NONE"
		},
		"346": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "FormatType.PATTERN"
		},
		"347": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "FormatType.PERCENTAGE"
		},
		"348": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "FormatType.CURRENCY"
		},
		"349": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormatType"
		},
		"350": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormatType.USER_LOCALE"
		},
		"351": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormatType.COLUMN"
		},
		"352": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormatType.ISO_CODE"
		},
		"353": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType"
		},
		"354": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.AGGREGATE"
		},
		"355": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.AGGREGATE_DISTINCT"
		},
		"356": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.APPROX_AGGR_DISTINCT"
		},
		"357": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.APPROX_AGGR_DISTINCT_MERGE"
		},
		"358": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.APPROX_COUNT_DISTINCT"
		},
		"359": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.AVERAGE"
		},
		"360": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.COUNT"
		},
		"361": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.COUNT_DISTINCT"
		},
		"362": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.CUMULATIVE_AVERAGE"
		},
		"363": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.CUMULATIVE_COUNT"
		},
		"364": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.CUMULATIVE_MAX"
		},
		"365": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.CUMULATIVE_MIN"
		},
		"366": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.CUMULATIVE_SUM"
		},
		"367": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.GROWTH"
		},
		"368": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MAX"
		},
		"369": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MEDIAN"
		},
		"370": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MIN"
		},
		"371": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MOVING_AVERAGE"
		},
		"372": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MOVING_COUNT"
		},
		"373": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MOVING_MAX"
		},
		"374": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MOVING_MIN"
		},
		"375": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.MOVING_SUM"
		},
		"376": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.NONE"
		},
		"377": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.PERCENTILE"
		},
		"378": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.RANK"
		},
		"379": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.RANK_PERCENTILE"
		},
		"380": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_BOOL_AGGREGATE_OP"
		},
		"381": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_DATE_AGGREGATE_OP"
		},
		"382": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_DATE_TIME_AGGREGATE_OP"
		},
		"383": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_DOUBLE_AGGREGATE_OP"
		},
		"384": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_INT_AGGREGATE_OP"
		},
		"385": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_STRING_AGGREGATE_OP"
		},
		"386": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SQL_TIME_AGGREGATE_OP"
		},
		"387": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.STD_DEVIATION"
		},
		"388": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.SUM"
		},
		"389": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.TABLE_AGGR"
		},
		"390": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnAggregationType.VARIANCE"
		},
		"391": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormat"
		},
		"392": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormat.type"
		},
		"393": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormat.column"
		},
		"394": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "CurrencyFormat.isoCode"
		},
		"395": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnFormat"
		},
		"396": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnFormat.type"
		},
		"397": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnFormat.pattern"
		},
		"398": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ColumnFormat.currencyFormat"
		},
		"399": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn"
		},
		"400": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.id"
		},
		"401": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.name"
		},
		"402": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.type"
		},
		"403": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.timeBucket"
		},
		"404": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.dataType"
		},
		"405": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.format"
		},
		"406": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.columnProperties"
		},
		"407": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "__type"
		},
		"408": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "__type.conditionalFormatting"
		},
		"409": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "__type.numberFormatting"
		},
		"410": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.aggregationType"
		},
		"411": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.customOrder"
		},
		"412": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.calenderGuid"
		},
		"413": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.chartSpecificColumnType"
		},
		"414": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent"
		},
		"415": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.OpenContextMenu"
		},
		"416": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.CloseContextMenu"
		},
		"417": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.OpenAxisMenu"
		},
		"418": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.CloseAxisMenu"
		},
		"419": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.InitStart"
		},
		"420": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.RenderStart"
		},
		"421": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.RenderError"
		},
		"422": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.RenderComplete"
		},
		"423": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.UpdateVisualProps"
		},
		"424": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.GetTMLString"
		},
		"425": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.SetTMLString"
		},
		"426": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.GetDataForQuery"
		},
		"427": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.ShowToolTip"
		},
		"428": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEvent.HideToolTip"
		},
		"429": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap"
		},
		"430": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.OpenContextMenu"
		},
		"431": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.CloseContextMenu"
		},
		"432": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.InitStart"
		},
		"433": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.RenderStart"
		},
		"434": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.RenderComplete"
		},
		"435": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.RenderError"
		},
		"436": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.UpdateVisualProps"
		},
		"437": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.GetTMLString"
		},
		"438": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.SetTMLString"
		},
		"439": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.GetDataForQuery"
		},
		"440": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.ShowToolTip"
		},
		"441": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.HideToolTip"
		},
		"442": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.OpenAxisMenu"
		},
		"443": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ChartToTSEventsPayloadMap.CloseAxisMenu"
		},
		"444": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "UpdateVisualPropsEventPayload"
		},
		"445": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "UpdateVisualPropsEventPayload.visualProps"
		},
		"446": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "SetTMLStringEventPayload"
		},
		"447": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "SetTMLStringEventPayload.tmlString"
		},
		"448": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "PointVal"
		},
		"449": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "PointVal.columnId"
		},
		"450": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "PointVal.value"
		},
		"451": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "Point"
		},
		"452": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "Point.tuple"
		},
		"453": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "CustomAction"
		},
		"454": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "CustomAction.id"
		},
		"455": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "CustomAction.label"
		},
		"456": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "CustomAction.icon"
		},
		"457": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "CustomAction.onClick"
		},
		"458": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"459": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"460": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "args"
		},
		"461": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenContextMenuEventPayload"
		},
		"462": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenContextMenuEventPayload.event"
		},
		"463": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenContextMenuEventPayload.clickedPoint"
		},
		"464": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenContextMenuEventPayload.selectedPoints"
		},
		"465": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenContextMenuEventPayload.customActions"
		},
		"466": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ShowToolTipEventPayload"
		},
		"467": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ShowToolTipEventPayload.event"
		},
		"468": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ShowToolTipEventPayload.customTooltipContent"
		},
		"469": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ShowToolTipEventPayload.point"
		},
		"470": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "RenderErrorEventPayload"
		},
		"471": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "RenderErrorEventPayload.hasError"
		},
		"472": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "RenderErrorEventPayload.error"
		},
		"473": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "GetDataForQueryEventPayload"
		},
		"474": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "GetDataForQueryEventPayload.queries"
		},
		"475": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ErrorType"
		},
		"476": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ErrorType.MultipleContextsNotSupported"
		},
		"477": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActions"
		},
		"478": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActions.AGGREGATE"
		},
		"479": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActions.TIME_BUCKET"
		},
		"480": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActions.FILTER"
		},
		"481": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActions.SORT"
		},
		"482": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActions.SEPARATOR"
		},
		"483": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuCustomAction"
		},
		"484": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuCustomAction.id"
		},
		"485": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuCustomAction.label"
		},
		"486": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuCustomAction.icon"
		},
		"487": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuCustomAction.onClick"
		},
		"488": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"489": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"490": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "args"
		},
		"491": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenAxisMenuEventPayload"
		},
		"492": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenAxisMenuEventPayload.event"
		},
		"493": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenAxisMenuEventPayload.columnIds"
		},
		"494": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "OpenAxisMenuEventPayload.selectedActions"
		},
		"496": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ContextMenuActionHandler"
		},
		"497": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "ContextMenuActionHandler.__index"
		},
		"499": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"500": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "args"
		},
		"502": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActionHandler"
		},
		"503": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "AxisMenuActionHandler.__index"
		},
		"505": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"506": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "src/types/chart-to-ts-event.types.ts",
			"qualifiedName": "args"
		},
		"508": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent"
		},
		"509": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.Initialize"
		},
		"510": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.InitializeComplete"
		},
		"511": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.GetDataQuery"
		},
		"512": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.ChartConfigValidate"
		},
		"513": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.ChartModelUpdate"
		},
		"514": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.DataUpdate"
		},
		"515": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.TriggerRenderChart"
		},
		"516": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.VisualPropsValidate"
		},
		"517": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.VisualPropsUpdate"
		},
		"518": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.ContextMenuActionClick"
		},
		"519": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.AxisMenuActionClick"
		},
		"520": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEvent.GetColumnData"
		},
		"521": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEventsPayloadMap"
		},
		"522": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEventsPayloadMap.ChartModelUpdate"
		},
		"523": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"525": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "payload"
		},
		"526": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEventsPayloadMap.DataUpdate"
		},
		"527": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"528": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"529": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "payload"
		},
		"530": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "TSToChartEventsPayloadMap.VisualPropsUpdate"
		},
		"531": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"532": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"533": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "payload"
		},
		"569": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventPayload"
		},
		"570": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventPayload.chartModel"
		},
		"571": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventPayload.appConfig"
		},
		"572": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventPayload.componentId"
		},
		"573": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventPayload.hostUrl"
		},
		"574": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventPayload.containerElSelector"
		},
		"575": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload"
		},
		"576": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload.isConfigValid"
		},
		"577": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload.defaultChartConfig"
		},
		"578": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload.chartConfigEditorDefinition"
		},
		"579": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload.visualPropEditorDefinition"
		},
		"580": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload.allowedConfigurations"
		},
		"581": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "InitializeEventResponsePayload.chartConfigParameters"
		},
		"582": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetDataQueryPayload"
		},
		"583": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetDataQueryPayload.config"
		},
		"584": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetColumnDataPayload"
		},
		"585": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetColumnDataPayload.columnId"
		},
		"586": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "QueryColumn"
		},
		"587": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "QueryColumn.isMeasureValue"
		},
		"588": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.id"
		},
		"589": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.name"
		},
		"590": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.type"
		},
		"591": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.timeBucket"
		},
		"592": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.dataType"
		},
		"593": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.format"
		},
		"594": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.columnProperties"
		},
		"595": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "__type"
		},
		"596": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "__type.conditionalFormatting"
		},
		"597": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "__type.numberFormatting"
		},
		"598": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.aggregationType"
		},
		"599": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.customOrder"
		},
		"600": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.calenderGuid"
		},
		"601": {
			"sourceFileName": "src/types/answer-column.types.ts",
			"qualifiedName": "ChartColumn.chartSpecificColumnType"
		},
		"602": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "Query"
		},
		"603": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "Query.queryColumns"
		},
		"604": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "Query.queryParams"
		},
		"605": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type"
		},
		"606": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type.offset"
		},
		"607": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "__type.size"
		},
		"608": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetDataQueryResponsePayload"
		},
		"609": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetDataQueryResponsePayload.queries"
		},
		"610": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetColumnDataResponsePayload"
		},
		"611": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "GetColumnDataResponsePayload.data"
		},
		"612": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "ChartModelUpdateEventPayload"
		},
		"613": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "ChartModelUpdateEventPayload.chartModel"
		},
		"614": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "DataUpdateEventPayload"
		},
		"615": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "DataUpdateEventPayload.data"
		},
		"616": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "VisualPropsUpdateEventPayload"
		},
		"617": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "VisualPropsUpdateEventPayload.visualProps"
		},
		"618": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "VisualPropsValidateEventPayload"
		},
		"619": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "VisualPropsValidateEventPayload.visualProps"
		},
		"620": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "VisualPropsValidateEventPayload.activeColumnId"
		},
		"621": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "ChartConfigValidateEventPayload"
		},
		"622": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "ChartConfigValidateEventPayload.chartConfig"
		},
		"623": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomContextMenuAction"
		},
		"624": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomContextMenuAction.id"
		},
		"625": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomContextMenuAction.clickedPoint"
		},
		"626": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomContextMenuAction.selectedPoints"
		},
		"627": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomContextMenuAction.event"
		},
		"628": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "ContextMenuCustomActionPayload"
		},
		"629": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "ContextMenuCustomActionPayload.customAction"
		},
		"630": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomAxisMenuAction"
		},
		"631": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomAxisMenuAction.id"
		},
		"632": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomAxisMenuAction.columnIds"
		},
		"633": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "CustomAxisMenuAction.event"
		},
		"634": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "AxisMenuCustomActionPayload"
		},
		"635": {
			"sourceFileName": "src/types/ts-to-chart-event.types.ts",
			"qualifiedName": "AxisMenuCustomActionPayload.customAction"
		},
		"636": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "AllowedConfigurations"
		},
		"637": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"638": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.allowColumnNumberFormatting"
		},
		"639": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.allowColumnConditionalFormatting"
		},
		"640": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.allowGradientColoring"
		},
		"641": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.allowMeasureNamesAndValues"
		},
		"642": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "ChartConfigParameters"
		},
		"643": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"644": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.measureNameValueColumns"
		},
		"645": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"646": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.enableMeasureNameColumn"
		},
		"647": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.enableMeasureValueColumn"
		},
		"648": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.measureNameColumnAlias"
		},
		"649": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.measureValueColumnAlias"
		},
		"650": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.batchSizeLimit"
		},
		"651": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContextProps"
		},
		"652": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"653": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.getDefaultChartConfig"
		},
		"654": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"655": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"656": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "chartModel"
		},
		"657": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.getQueriesFromChartConfig"
		},
		"658": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"659": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"660": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "chartConfig"
		},
		"661": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "chartModel"
		},
		"662": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.renderChart"
		},
		"663": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"664": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"665": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "ctx"
		},
		"666": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.validateConfig"
		},
		"667": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"668": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"669": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "updatedConfig"
		},
		"670": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "chartModel"
		},
		"671": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.validateVisualProps"
		},
		"672": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"673": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type"
		},
		"674": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "updatedVisualProps"
		},
		"675": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "chartModel"
		},
		"676": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "activeColumnId"
		},
		"677": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.chartConfigEditorDefinition"
		},
		"678": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.visualPropEditorDefinition"
		},
		"679": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.allowedConfigurations"
		},
		"680": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "__type.chartConfigParameters"
		},
		"681": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "ValidationFunctions"
		},
		"682": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext"
		},
		"683": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.__constructor"
		},
		"684": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext"
		},
		"685": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "chartContextProps"
		},
		"704": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.containerEl"
		},
		"705": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.initialize"
		},
		"706": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.initialize"
		},
		"707": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.on"
		},
		"708": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.on"
		},
		"709": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "T"
		},
		"710": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "eventType"
		},
		"711": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "callbackFn"
		},
		"712": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.off"
		},
		"713": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.off"
		},
		"714": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "T"
		},
		"715": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "eventType"
		},
		"721": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.destroy"
		},
		"722": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.destroy"
		},
		"723": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.getChartModel"
		},
		"724": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.getChartModel"
		},
		"725": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.getAppConfig"
		},
		"726": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.getAppConfig"
		},
		"727": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.contextMenuCustomActionPreProcessor"
		},
		"728": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.contextMenuCustomActionPreProcessor"
		},
		"729": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "eventPayload"
		},
		"737": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.axisMenuCustomActionPreProcessor"
		},
		"738": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.axisMenuCustomActionPreProcessor"
		},
		"739": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "eventPayload"
		},
		"756": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.emitEvent"
		},
		"757": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "CustomChartContext.emitEvent"
		},
		"758": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "T"
		},
		"759": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "eventType"
		},
		"760": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "eventPayload"
		},
		"778": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "getChartContext"
		},
		"779": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "getChartContext"
		},
		"780": {
			"sourceFileName": "src/main/custom-chart-context.ts",
			"qualifiedName": "customChartConfig"
		},
		"781": {
			"sourceFileName": "src/react/use-custom-chart-context.tsx",
			"qualifiedName": "useChartContext"
		},
		"782": {
			"sourceFileName": "src/react/use-custom-chart-context.tsx",
			"qualifiedName": "useChartContext"
		},
		"783": {
			"sourceFileName": "src/react/use-custom-chart-context.tsx",
			"qualifiedName": "props"
		},
		"784": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ConditionalFormatting"
		},
		"785": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"786": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"787": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.rows"
		},
		"788": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "BackgroundFormatTypes"
		},
		"789": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "BackgroundFormatTypes.Gradient"
		},
		"790": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "BackgroundFormatTypes.Solid"
		},
		"791": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ConditionalFormattingComparisonTypes"
		},
		"792": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ConditionalFormattingComparisonTypes.ColumnBased"
		},
		"793": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ConditionalFormattingComparisonTypes.ParameterBased"
		},
		"794": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ConditionalFormattingComparisonTypes.ValueBased"
		},
		"795": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FontAttrs"
		},
		"796": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"797": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"798": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.bold"
		},
		"799": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.color"
		},
		"800": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.italic"
		},
		"801": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.strikeThrough"
		},
		"802": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.underline"
		},
		"803": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "GradientBackgroundAttrs"
		},
		"804": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"805": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"806": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.backgroundFormatMidpoint"
		},
		"807": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.backgroundFormatRange"
		},
		"808": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.colors"
		},
		"809": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators"
		},
		"810": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.Contains"
		},
		"811": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.DoesNotContain"
		},
		"812": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.EndsWith"
		},
		"813": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.EqualTo"
		},
		"814": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.GreaterThan"
		},
		"815": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.GreaterThanEqualTo"
		},
		"816": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.Is"
		},
		"817": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.IsBetween"
		},
		"818": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.IsEmpty"
		},
		"819": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.IsNot"
		},
		"820": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.IsNotEmpty"
		},
		"821": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.IsNotNull"
		},
		"822": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.IsNull"
		},
		"823": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.LessThan"
		},
		"824": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.LessThanEqualTo"
		},
		"825": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.NotEqualTo"
		},
		"826": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Operators.StartsWith"
		},
		"827": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "SolidBackgroundAttrs"
		},
		"828": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"829": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"830": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.color"
		},
		"831": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Range"
		},
		"832": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"833": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"834": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.max"
		},
		"835": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.min"
		},
		"836": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ConditionalMetric"
		},
		"837": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"838": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"839": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.backgroundFormatType"
		},
		"840": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.comparisonParameterId"
		},
		"841": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.comparisonType"
		},
		"842": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.fontProperties"
		},
		"843": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.gradientBackgroundAttrs"
		},
		"844": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.isHighlightRow"
		},
		"845": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.lhsColumnId"
		},
		"846": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.operator"
		},
		"847": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.plotAsBand"
		},
		"848": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.rangeValues"
		},
		"849": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.rhsColumnId"
		},
		"850": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.solidBackgroundAttrs"
		},
		"851": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.value"
		},
		"852": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "Parameter"
		},
		"853": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"854": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"855": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.dataType"
		},
		"856": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"857": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.description"
		},
		"858": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.id"
		},
		"859": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.name"
		},
		"860": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.overrideValue"
		},
		"861": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.owner"
		},
		"862": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.valueList"
		},
		"863": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.valueRange"
		},
		"864": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.valueType"
		},
		"865": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType"
		},
		"866": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Bool"
		},
		"867": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Char"
		},
		"868": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Date"
		},
		"869": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.DateTime"
		},
		"870": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Double"
		},
		"871": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Float"
		},
		"872": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Int32"
		},
		"873": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Int64"
		},
		"874": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.List"
		},
		"875": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListBool"
		},
		"876": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListDate"
		},
		"877": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListDateTime"
		},
		"878": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListDouble"
		},
		"879": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListInt"
		},
		"880": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListString"
		},
		"881": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.ListTime"
		},
		"882": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.MaxType"
		},
		"883": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Time"
		},
		"884": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "FalconDataType.Unknown"
		},
		"885": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterOwnerInfo"
		},
		"886": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"887": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"888": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.id"
		},
		"889": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.name"
		},
		"890": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.type"
		},
		"891": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterOwnerType"
		},
		"892": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterOwnerType.Answer"
		},
		"893": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterOwnerType.Worksheet"
		},
		"894": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueListItem"
		},
		"895": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"896": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"897": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.displayAs"
		},
		"898": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.value"
		},
		"899": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueListItemInput"
		},
		"900": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"901": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.displayAs"
		},
		"902": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.value"
		},
		"903": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueRange"
		},
		"904": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"905": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"906": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.max"
		},
		"907": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.min"
		},
		"908": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueRangeInput"
		},
		"909": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"910": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.max"
		},
		"911": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "__type.min"
		},
		"912": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueType"
		},
		"913": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueType.Any"
		},
		"914": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueType.List"
		},
		"915": {
			"sourceFileName": "src/types/conditional-formatting.types.ts",
			"qualifiedName": "ParameterValueType.Range"
		},
		"916": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CategoryType"
		},
		"917": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CategoryType.Currency"
		},
		"918": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CategoryType.Custom"
		},
		"919": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CategoryType.Number"
		},
		"920": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CategoryType.Percentage"
		},
		"921": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit"
		},
		"922": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit.Auto"
		},
		"923": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit.Billion"
		},
		"924": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit.Million"
		},
		"925": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit.None"
		},
		"926": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit.Thousands"
		},
		"927": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "Unit.Trillion"
		},
		"928": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "NegativeValueFormat"
		},
		"929": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "NegativeValueFormat.BracesNodash"
		},
		"930": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "NegativeValueFormat.PrefixDash"
		},
		"931": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "NegativeValueFormat.SuffixDash"
		},
		"932": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CurrencyFormatConfig"
		},
		"933": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"934": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"935": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.decimals"
		},
		"936": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.locale"
		},
		"937": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.removeTrailingZeroes"
		},
		"938": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.toSeparateThousands"
		},
		"939": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.unit"
		},
		"940": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "CustomFormatConfig"
		},
		"941": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"942": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"943": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.format"
		},
		"944": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "NumberFormatConfig"
		},
		"945": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"946": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"947": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.decimals"
		},
		"948": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.negativeValueFormat"
		},
		"949": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.removeTrailingZeroes"
		},
		"950": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.toSeparateThousands"
		},
		"951": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.unit"
		},
		"952": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "PercentageFormatConfig"
		},
		"953": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"954": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"955": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.decimals"
		},
		"956": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.removeTrailingZeroes"
		},
		"957": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "FormatConfig"
		},
		"958": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type"
		},
		"959": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.__typename"
		},
		"960": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.category"
		},
		"961": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.currencyFormatConfig"
		},
		"962": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.customFormatConfig"
		},
		"963": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.isCategoryEditable"
		},
		"964": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.numberFormatConfig"
		},
		"965": {
			"sourceFileName": "src/types/number-formatting.types.ts",
			"qualifiedName": "__type.percentageFormatConfig"
		},
		"966": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getStartEpoch"
		},
		"967": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getStartEpoch"
		},
		"968": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "date"
		},
		"969": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getMonthOfYear"
		},
		"970": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getMonthOfYear"
		},
		"971": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "num"
		},
		"972": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "quarterStartMonth"
		},
		"973": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "monthOfYear"
		},
		"974": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getDisplayString"
		},
		"975": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getDisplayString"
		},
		"976": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "date"
		},
		"977": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getSpecialFormatData"
		},
		"978": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getSpecialFormatData"
		},
		"979": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "value"
		},
		"980": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "options"
		},
		"981": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "sanitizeDate"
		},
		"982": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "sanitizeDate"
		},
		"983": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "inputDate"
		},
		"984": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "format"
		},
		"985": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "options"
		},
		"986": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getOrdinalSuffixedValue"
		},
		"987": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getOrdinalSuffixedValue"
		},
		"988": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "i"
		},
		"989": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatDateNum"
		},
		"990": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatDateNum"
		},
		"991": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "effectiveDataType"
		},
		"992": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "value"
		},
		"993": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatPattern"
		},
		"994": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "options"
		},
		"995": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatDate"
		},
		"996": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatDate"
		},
		"997": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "inputDate"
		},
		"998": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "format"
		},
		"999": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "useSystemCalendar"
		},
		"1000": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "options"
		},
		"1001": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "CustomCalendarDate"
		},
		"1002": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "CustomCalendarDate.v"
		},
		"1003": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__type"
		},
		"1004": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__type.s"
		},
		"1005": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__type.e"
		},
		"1006": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "CustomCalendarDate.d"
		},
		"1007": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "dateFormatPresets"
		},
		"1008": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object"
		},
		"1009": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_SHORT"
		},
		"1010": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_SHORT_WITH_HOUR"
		},
		"1011": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_SHORT_WITH_HOUR_WITHOUT_YEAR"
		},
		"1012": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_SHORT"
		},
		"1013": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_SHORT_WITHOUT_YEAR"
		},
		"1014": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_SHORT_WITH_SECONDS"
		},
		"1015": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_SHORT_WITH_MILLIS"
		},
		"1016": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTH_WITH_YEAR"
		},
		"1017": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.QUARTER_WITH_YEAR"
		},
		"1018": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.QUARTER_WITH_2_DIGIT_YEAR"
		},
		"1019": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DEFAULT_TIME_FORMAT"
		},
		"1020": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.TIME_24_WITH_SECONDS"
		},
		"1021": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_SHORT_2_DIGIT_YEAR"
		},
		"1022": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_24_SHORT_WITHOUT_YEAR"
		},
		"1023": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_24_SHORT"
		},
		"1024": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_SHORT_WITH_SECONDS_WITHOUT_YEAR"
		},
		"1025": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_SHORT_WITH_MILLIS_WITHOUT_YEAR"
		},
		"1026": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_24_SHORT_WITH_MILLIS_WITHOUT_YEAR"
		},
		"1027": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_24_SHORT_WITH_MILLIS"
		},
		"1028": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTH_WITH_DAY_AND_YEAR"
		},
		"1029": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTH_WITH_2_DIGIT_YEAR"
		},
		"1030": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAY_WITH_MONTH_NUM"
		},
		"1031": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_SHORT_WITH_HOUR_24_WITHOUT_YEAR"
		},
		"1032": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_SHORT_WITH_HOUR_24"
		},
		"1033": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.QUARTER"
		},
		"1034": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTH_ONLY"
		},
		"1035": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATETIME_WITH_SHORT_OFFSET"
		},
		"1036": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "dateNumTypes"
		},
		"1037": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object"
		},
		"1038": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_ABS_DAY"
		},
		"1039": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_ABS_MONTH"
		},
		"1040": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_ABS_QUARTER"
		},
		"1041": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_ABS_YEAR"
		},
		"1042": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_DAY_IN_MONTH"
		},
		"1043": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_DAY_IN_QUARTER"
		},
		"1044": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_DAY_IN_YEAR"
		},
		"1045": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_DAY_OF_WEEK"
		},
		"1046": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_MONTH_IN_QUARTER"
		},
		"1047": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_MONTH_IN_YEAR"
		},
		"1048": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_QUARTER_IN_YEAR"
		},
		"1049": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_WEEK_IN_YEAR"
		},
		"1050": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_WEEK_IN_QUARTER"
		},
		"1051": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_WEEK_IN_MONTH"
		},
		"1052": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DATE_NUM_HOUR_IN_DAY"
		},
		"1053": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "bucketizationToDatePreset"
		},
		"1054": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object"
		},
		"1055": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.HOURLY"
		},
		"1056": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAILY"
		},
		"1057": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.WEEKLY"
		},
		"1058": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTHLY"
		},
		"1059": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.QUARTERLY"
		},
		"1060": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.YEARLY"
		},
		"1061": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "timeBuckets"
		},
		"1062": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object"
		},
		"1063": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.NO_BUCKET"
		},
		"1064": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.HOURLY"
		},
		"1065": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAILY"
		},
		"1066": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.WEEKLY"
		},
		"1067": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTHLY"
		},
		"1068": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.QUARTERLY"
		},
		"1069": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.YEARLY"
		},
		"1070": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAY_OF_WEEK"
		},
		"1071": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAY_OF_MONTH"
		},
		"1072": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAY_OF_QUARTER"
		},
		"1073": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.DAY_OF_YEAR"
		},
		"1074": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.WEEK_OF_MONTH"
		},
		"1075": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.WEEK_OF_QUARTER"
		},
		"1076": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.WEEK_OF_YEAR"
		},
		"1077": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTH_OF_QUARTER"
		},
		"1078": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.MONTH_OF_YEAR"
		},
		"1079": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "__object.QUARTER_OF_YEAR"
		},
		"1080": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateColumn"
		},
		"1081": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateColumn"
		},
		"1082": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1083": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isAttribute"
		},
		"1084": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isAttribute"
		},
		"1085": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1086": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateTimeColumn"
		},
		"1087": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateTimeColumn"
		},
		"1088": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1089": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getCustomCalendarGuidFromColumn"
		},
		"1090": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getCustomCalendarGuidFromColumn"
		},
		"1091": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1092": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateNumColumn"
		},
		"1093": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateNumColumn"
		},
		"1094": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1095": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateFamilyColumn"
		},
		"1096": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isDateFamilyColumn"
		},
		"1097": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1098": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isTimeColumn"
		},
		"1099": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "isTimeColumn"
		},
		"1100": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1101": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getEffectiveDateNumDataType"
		},
		"1102": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getEffectiveDateNumDataType"
		},
		"1103": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1104": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "hasCustomCalendar"
		},
		"1105": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "hasCustomCalendar"
		},
		"1106": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1107": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "assignQuarterValueToString"
		},
		"1108": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "assignQuarterValueToString"
		},
		"1109": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "quarter_of_year"
		},
		"1110": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "value"
		},
		"1111": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "useQuarterStart"
		},
		"1112": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "useQuarterStart"
		},
		"1113": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "luxonDate"
		},
		"1114": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "quarterStartMonth"
		},
		"1115": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getCustomCalendarValueFromEpoch"
		},
		"1116": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "getCustomCalendarValueFromEpoch"
		},
		"1117": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "col"
		},
		"1118": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "dateEpoch"
		},
		"1119": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "displayToCustomCalendarValueMap"
		},
		"1120": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatDateTime"
		},
		"1121": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "formatDateTime"
		},
		"1122": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "epochMillis"
		},
		"1123": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "format"
		},
		"1124": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "useSystemCalendar"
		},
		"1125": {
			"sourceFileName": "src/utils/date-formatting.ts",
			"qualifiedName": "options"
		},
		"1126": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "validateCfCondition"
		},
		"1127": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "validateCfCondition"
		},
		"1128": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "conditionalMetric"
		},
		"1129": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "index"
		},
		"1130": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "columnId"
		},
		"1131": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "dataAttr"
		},
		"1132": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "inScopeParameters"
		},
		"1133": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "getCfForColumn"
		},
		"1134": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "getCfForColumn"
		},
		"1135": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "column"
		},
		"1136": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "getMinRangeValue"
		},
		"1137": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "getMinRangeValue"
		},
		"1138": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "metric"
		},
		"1139": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "getMaxRangeValue"
		},
		"1140": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "getMaxRangeValue"
		},
		"1141": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "metric"
		},
		"1142": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "isConditionSatisfied"
		},
		"1143": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "isConditionSatisfied"
		},
		"1144": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "metric"
		},
		"1145": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "parameters"
		},
		"1146": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "lhsColValue"
		},
		"1147": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "rhsColValue"
		},
		"1148": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "applicableConditionalFormatting"
		},
		"1149": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "applicableConditionalFormatting"
		},
		"1150": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "idx"
		},
		"1151": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "columnId"
		},
		"1152": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "dataArr"
		},
		"1153": {
			"sourceFileName": "src/utils/conditional-formatting/conditional-formatting.ts",
			"qualifiedName": "conditionalFormatting"
		},
		"1154": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "formatCurrencyWithCustomPattern"
		},
		"1155": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "formatCurrencyWithCustomPattern"
		},
		"1156": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "value"
		},
		"1157": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "currencyCode"
		},
		"1158": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "formatPattern"
		},
		"1159": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "getFormattedValue"
		},
		"1160": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "getFormattedValue"
		},
		"1161": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "value"
		},
		"1162": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "formatConfigProp"
		},
		"1163": {
			"sourceFileName": "src/utils/number-formatting/number-formatting.ts",
			"qualifiedName": "columnFormatConfig"
		},
		"1164": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "globalizeNumberFormatter"
		},
		"1165": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "globalizeNumberFormatter"
		},
		"1166": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "format"
		},
		"1167": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "__type"
		},
		"1168": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "__type"
		},
		"1169": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "num"
		},
		"1170": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "globalizeCurrencyFormatter"
		},
		"1171": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "globalizeCurrencyFormatter"
		},
		"1172": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "currencyCode"
		},
		"1173": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "format"
		},
		"1174": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "__type"
		},
		"1175": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "__type"
		},
		"1176": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "num"
		},
		"1177": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "formatNumberSafely"
		},
		"1178": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "formatNumberSafely"
		},
		"1179": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "FormatOptions"
		},
		"1180": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "format"
		},
		"1181": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "num"
		},
		"1182": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getCountryCode"
		},
		"1183": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getCountryCode"
		},
		"1184": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "locale"
		},
		"1185": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getDefaultCurrencyCode"
		},
		"1186": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getDefaultCurrencyCode"
		},
		"1187": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "setGlobalizeLocale"
		},
		"1188": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "setGlobalizeLocale"
		},
		"1189": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "locale"
		},
		"1190": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getGlobalizeLocale"
		},
		"1191": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getGlobalizeLocale"
		},
		"1192": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "setCurrentCurrencyFormat"
		},
		"1193": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "setCurrentCurrencyFormat"
		},
		"1194": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "currencyFormat"
		},
		"1195": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getCurrentCurrencyFormat"
		},
		"1196": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "getCurrentCurrencyFormat"
		},
		"1197": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "loadCurrencyData"
		},
		"1198": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "loadCurrencyData"
		},
		"1199": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "data"
		},
		"1200": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "loadGlobalizeData"
		},
		"1201": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "loadGlobalizeData"
		},
		"1202": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "data"
		},
		"1203": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "initGlobalize"
		},
		"1204": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "initGlobalize"
		},
		"1205": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "locale"
		},
		"1206": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "sanitizeFormat"
		},
		"1207": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "sanitizeFormat"
		},
		"1208": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "format"
		},
		"1209": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "validateNumberFormat"
		},
		"1210": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "validateNumberFormat"
		},
		"1211": {
			"sourceFileName": "src/utils/globalize-Initializer/globalize-utils.ts",
			"qualifiedName": "format"
		}
	}
}